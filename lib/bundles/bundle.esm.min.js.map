{"version":3,"file":"bundle.esm.min.js","sources":["../../node_modules/@inrupt/solid-client/dist/interfaces.mjs","../../node_modules/@inrupt/solid-client/dist/interfaces.internal.mjs","../../node_modules/@inrupt/solid-client/dist/fetcher.mjs","../../node_modules/http-link-header/lib/link.js","../../node_modules/@inrupt/solid-client/dist/resource/resource.internal.mjs","../../node_modules/@inrupt/solid-client/dist/constants.mjs","../../node_modules/@inrupt/solid-client/dist/resource/resource.mjs","../../node_modules/@inrupt/solid-client/dist/resource/file.mjs","../../node_modules/@rdfjs/data-model/lib/BlankNode.js","../../node_modules/@rdfjs/data-model/lib/DefaultGraph.js","../../node_modules/@rdfjs/data-model/lib/fromTerm.js","../../node_modules/@rdfjs/data-model/lib/NamedNode.js","../../node_modules/@rdfjs/data-model/lib/Literal.js","../../node_modules/@rdfjs/data-model/lib/Quad.js","../../node_modules/@rdfjs/data-model/lib/Variable.js","../../node_modules/@rdfjs/data-model/lib/DataFactory.js","../../node_modules/@rdfjs/data-model/index.js","../../node_modules/@rdfjs/dataset/DatasetCore.js","../../node_modules/@rdfjs/dataset/index.js","../../node_modules/@inrupt/solid-client/dist/rdf.internal.mjs","../../node_modules/@inrupt/solid-client/dist/datatypes.mjs","../../node_modules/@inrupt/solid-client/dist/rdfjs.internal.mjs","../../node_modules/@inrupt/solid-client/dist/formats/turtle.mjs","../../node_modules/@inrupt/solid-client/dist/thing/thing.internal.mjs","../../node_modules/@inrupt/solid-client/dist/thing/get.mjs","../../node_modules/@inrupt/solid-client/dist/thing/thing.mjs","../../node_modules/@inrupt/solid-client/dist/resource/iri.internal.mjs","../../node_modules/@inrupt/solid-client/dist/resource/solidDataset.mjs","../../node_modules/cross-fetch/node_modules/node-fetch/lib/index.mjs","../../node_modules/cross-fetch/dist/node-ponyfill.js","../../node_modules/@inrupt/solid-client/dist/thing/add.mjs","../../node_modules/@inrupt/solid-client/dist/thing/remove.mjs","../../node_modules/@inrupt/solid-client/dist/thing/set.mjs","../../node_modules/@inrupt/solid-client/dist/thing/build.mjs","../../node_modules/@inrupt/solid-client/dist/acl/acl.internal.mjs","../../node_modules/@inrupt/solid-client/dist/acp/acp.internal.mjs","../../node_modules/@inrupt/solid-client/dist/acl/acl.mjs","../../node_modules/@inrupt/solid-client/dist/acl/agent.mjs","../../src/helpers/BaseDefinitions.ts","../../src/helpers/access-service.ts","../../node_modules/@inrupt/solid-client/dist/acl/class.mjs","../../node_modules/url-join-ts/lib/constants.js","../../node_modules/url-join-ts/lib/urlJoin.js","../../node_modules/url-join-ts/lib/urlJoinFunc.js","../../node_modules/url-join-ts/lib/index.js","../../src/helpers/data-service.ts","../../src/helpers/utils.ts","../../node_modules/spark-md5/spark-md5.js","../../node_modules/@inrupt/vocab-common-rdf/dist/index.es.js","../../src/helpers/vocab/icdd-c.ts","../../src/helpers/icdd-service.ts","../../src/index.ts","../../node_modules/n3/src/IRIs.js","../../node_modules/queue-microtask/index.js","../../node_modules/n3/src/N3Lexer.js","../../node_modules/n3/src/N3Util.js","../../node_modules/n3/src/N3DataFactory.js","../../node_modules/n3/src/N3Parser.js","../../node_modules/n3/src/N3Writer.js","../../node_modules/readable-stream/lib/internal/streams/stream.js","../../node_modules/readable-stream/lib/internal/streams/buffer_list.js","../../node_modules/readable-stream/lib/internal/streams/destroy.js","../../node_modules/readable-stream/errors.js","../../node_modules/readable-stream/lib/internal/streams/state.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/inherits/inherits.js","../../node_modules/readable-stream/lib/_stream_writable.js","../../node_modules/util-deprecate/node.js","../../node_modules/readable-stream/lib/_stream_duplex.js","../../node_modules/string_decoder/node_modules/safe-buffer/index.js","../../node_modules/string_decoder/lib/string_decoder.js","../../node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../../node_modules/readable-stream/lib/internal/streams/async_iterator.js","../../node_modules/readable-stream/lib/internal/streams/from.js","../../node_modules/readable-stream/lib/_stream_readable.js","../../node_modules/readable-stream/lib/_stream_transform.js","../../node_modules/readable-stream/lib/internal/streams/pipeline.js","../../node_modules/readable-stream/lib/_stream_passthrough.js","../../node_modules/readable-stream/readable.js","../../node_modules/n3/src/N3Store.js","../../node_modules/n3/src/N3StreamParser.js","../../node_modules/n3/src/N3StreamWriter.js"],"sourcesContent":["/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Verify whether a given SolidDataset includes metadata about where it was sent to.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\r\n * @returns True if `dataset` includes metadata about the Resource it was sent to, false if not.\r\n * @since 0.2.0\r\n */\r\nfunction hasResourceInfo(resource) {\r\n    const potentialResourceInfo = resource;\r\n    return (typeof potentialResourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo === \"object\");\r\n}\r\n/**\r\n * Verify whether a given SolidDataset includes metadata about where it was retrieved from.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have metadata attached about the Resource it was retrieved from.\r\n * @returns True if `dataset` includes metadata about the Resource it was retrieved from, false if not.\r\n * @since 0.6.0\r\n */\r\nfunction hasServerResourceInfo(resource) {\r\n    const potentialResourceInfo = resource;\r\n    return (typeof potentialResourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo === \"object\" &&\r\n        typeof potentialResourceInfo.internal_resourceInfo.linkedResources ===\r\n            \"object\");\r\n}\r\n/** @internal */\r\nfunction hasChangelog(dataset) {\r\n    const potentialChangeLog = dataset;\r\n    return (typeof potentialChangeLog.internal_changeLog === \"object\" &&\r\n        Array.isArray(potentialChangeLog.internal_changeLog.additions) &&\r\n        Array.isArray(potentialChangeLog.internal_changeLog.deletions));\r\n}\r\n/**\r\n * Errors thrown by solid-client extend this class, and can thereby be distinguished from errors\r\n * thrown in lower-level libraries.\r\n * @since 1.2.0\r\n */\r\nclass SolidClientError extends Error {\r\n}\n\nexport { SolidClientError, hasChangelog, hasResourceInfo, hasServerResourceInfo };\n","/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @internal */\r\nfunction internal_toIriString(iri) {\r\n    return typeof iri === \"string\" ? iri : iri.value;\r\n}\n\nexport { internal_toIriString };\n","/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @ignore Internal fallback for when no fetcher is provided; not to be used downstream.\r\n */\r\nconst fetch = async (resource, init) => {\r\n    /* istanbul ignore if: `require` is always defined in the unit test environment */\r\n    if (typeof window === \"object\" && typeof require !== \"function\") {\r\n        return await window.fetch(resource, init);\r\n    }\r\n    /* istanbul ignore if: `require` is always defined in the unit test environment */\r\n    if (typeof require !== \"function\") {\r\n        // When using Node.js with ES Modules, require is not defined:\r\n        const crossFetchModule = await import('cross-fetch');\r\n        const fetch = crossFetchModule.default;\r\n        return fetch(resource, init);\r\n    }\r\n    // Implementation note: it's up to the client application to resolve these module names to the\r\n    // respective npm packages. At least one commonly used tool (Webpack) is only able to do that if\r\n    // the module names are literal strings.\r\n    // Additionally, Webpack throws a warning in a way that halts compilation for at least Next.js\r\n    // when using native Javascript dynamic imports (`import()`), whereas `require()` just logs a\r\n    // warning. Since the use of package names instead of file names requires a bundles anyway, this\r\n    // should not have any practical consequences. For more background, see:\r\n    // https://github.com/webpack/webpack/issues/7713\r\n    let fetch;\r\n    // Unfortunately solid-client-authn-browser does not support a default session yet.\r\n    // Once it does, we can auto-detect if it is available and use it as follows:\r\n    // try {\r\n    //   fetch = require(\"solid-client-authn-browser\").fetch;\r\n    // } catch (e) {\r\n    // When enabling the above, make sure to add a similar try {...} catch block using `import`\r\n    // statements in the elseif above.\r\n    // eslint-disable-next-line prefer-const\r\n    fetch = require(\"cross-fetch\");\r\n    // }\r\n    return await fetch(resource, init);\r\n};\n\nexport { fetch };\n","'use strict'\n\nvar COMPATIBLE_ENCODING_PATTERN = /^utf-?8|ascii|utf-?16-?le|ucs-?2|base-?64|latin-?1$/i\nvar WS_TRIM_PATTERN = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g\nvar WS_CHAR_PATTERN = /\\s|\\uFEFF|\\xA0/\nvar WS_FOLD_PATTERN = /\\r?\\n[\\x20\\x09]+/g\nvar DELIMITER_PATTERN = /[;,\"]/\nvar WS_DELIMITER_PATTERN = /[;,\"]|\\s/\n\n/**\n * Token character pattern\n * @type {RegExp}\n * @see https://tools.ietf.org/html/rfc7230#section-3.2.6\n */\nvar TOKEN_PATTERN = /^[!#$%&'*+\\-\\.^_`|~\\da-zA-Z]+$/\n\nvar STATE = {\n  IDLE: 1 << 0,\n  URI: 1 << 1,\n  ATTR: 1 << 2,\n}\n\nfunction trim( value ) {\n  return value.replace( WS_TRIM_PATTERN, '' )\n}\n\nfunction hasWhitespace( value ) {\n  return WS_CHAR_PATTERN.test( value )\n}\n\nfunction skipWhitespace( value, offset ) {\n  while( hasWhitespace( value[offset] ) ) {\n    offset++\n  }\n  return offset\n}\n\nfunction needsQuotes( value ) {\n  return WS_DELIMITER_PATTERN.test( value ) ||\n    !TOKEN_PATTERN.test( value )\n}\n\nclass Link {\n\n  /**\n   * Link\n   * @constructor\n   * @param {String} [value]\n   * @returns {Link}\n   */\n  constructor( value ) {\n\n    /** @type {Array} URI references */\n    this.refs = []\n\n    if( value ) {\n      this.parse( value )\n    }\n\n  }\n\n  /**\n   * Get refs with given relation type\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  rel( value ) {\n\n    var links = []\n    var type = value.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ].rel.toLowerCase() === type ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  /**\n   * Get refs where given attribute has a given value\n   * @param {String} attr\n   * @param {String} value\n   * @returns {Array<Object>}\n   */\n  get( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    var links = []\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        links.push( this.refs[ i ] )\n      }\n    }\n\n    return links\n\n  }\n\n  set( link ) {\n    this.refs.push( link )\n    return this\n  }\n\n  has( attr, value ) {\n\n    attr = attr.toLowerCase()\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      if( this.refs[ i ][ attr ] === value ) {\n        return true\n      }\n    }\n\n    return false\n\n  }\n\n  parse( value, offset ) {\n\n    offset = offset || 0\n    value = offset ? value.slice( offset ) : value\n\n    // Trim & unfold folded lines\n    value = trim( value ).replace( WS_FOLD_PATTERN, '' )\n\n    var state = STATE.IDLE\n    var length = value.length\n    var offset = 0\n    var ref = null\n\n    while( offset < length ) {\n      if( state === STATE.IDLE ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === '<' ) {\n          if( ref != null ) {\n            ref.rel != null ?\n              this.refs.push( ...Link.expandRelations( ref ) ) :\n              this.refs.push( ref )\n          }\n          var end = value.indexOf( '>', offset )\n          if( end === -1 ) throw new Error( 'Expected end of URI delimiter at offset ' + offset )\n          ref = { uri: value.slice( offset + 1, end ) }\n          // this.refs.push( ref )\n          offset = end\n          state = STATE.URI\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n        offset++\n      } else if( state === STATE.URI ) {\n        if( hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        } else if( value[offset] === ';' ) {\n          state = STATE.ATTR\n          offset++\n        } else if( value[offset] === ',' ) {\n          state = STATE.IDLE\n          offset++\n        } else {\n          throw new Error( 'Unexpected character \"' + value[offset] + '\" at offset ' + offset )\n        }\n      } else if( state === STATE.ATTR ) {\n        if( value[offset] ===';' || hasWhitespace( value[offset] ) ) {\n          offset++\n          continue\n        }\n        var end = value.indexOf( '=', offset )\n        if( end === -1 ) throw new Error( 'Expected attribute delimiter at offset ' + offset )\n        var attr = trim( value.slice( offset, end ) ).toLowerCase()\n        var attrValue = ''\n        offset = end + 1\n        offset = skipWhitespace( value, offset )\n        if( value[offset] === '\"' ) {\n          offset++\n          while( offset < length ) {\n            if( value[offset] === '\"' ) {\n              offset++; break\n            }\n            if( value[offset] === '\\\\' ) {\n              offset++\n            }\n            attrValue += value[offset]\n            offset++\n          }\n        } else {\n          var end = offset + 1\n          while( !DELIMITER_PATTERN.test( value[end] ) && end < length ) {\n            end++\n          }\n          attrValue = value.slice( offset, end )\n          offset = end\n        }\n        if( ref[ attr ] && Link.isSingleOccurenceAttr( attr ) ) {\n          // Ignore multiples of attributes which may only appear once\n        } else if( attr[ attr.length - 1 ] === '*' ) {\n          ref[ attr ] = Link.parseExtendedValue( attrValue )\n        } else {\n          attrValue = attr === 'type' ?\n            attrValue.toLowerCase() : attrValue\n          if( ref[ attr ] != null ) {\n            if( Array.isArray( ref[ attr ] ) ) {\n              ref[ attr ].push( attrValue )\n            } else {\n              ref[ attr ] = [ ref[ attr ], attrValue ]\n            }\n          } else {\n            ref[ attr ] = attrValue\n          }\n        }\n        switch( value[offset] ) {\n          case ',': state = STATE.IDLE; break\n          case ';': state = STATE.ATTR; break\n        }\n        offset++\n      } else {\n        throw new Error( 'Unknown parser state \"' + state + '\"' )\n      }\n    }\n\n    if( ref != null ) {\n      ref.rel != null ?\n        this.refs.push( ...Link.expandRelations( ref ) ) :\n        this.refs.push( ref )\n    }\n\n    ref = null\n\n    return this\n\n  }\n\n  toString() {\n\n    var refs = []\n    var link = ''\n    var ref = null\n\n    for( var i = 0; i < this.refs.length; i++ ) {\n      ref = this.refs[i]\n      link = Object.keys( this.refs[i] ).reduce( function( link, attr ) {\n        if( attr === 'uri' ) return link\n        return link + '; ' + Link.formatAttribute( attr, ref[ attr ] )\n      }, '<' + ref.uri + '>' )\n      refs.push( link )\n    }\n\n    return refs.join( ', ' )\n\n  }\n\n}\n\n/**\n * Determines whether an encoding can be\n * natively handled with a `Buffer`\n * @param {String} value\n * @returns {Boolean}\n */\nLink.isCompatibleEncoding = function( value ) {\n  return COMPATIBLE_ENCODING_PATTERN.test( value )\n}\n\nLink.parse = function( value, offset ) {\n  return new Link().parse( value, offset )\n}\n\nLink.isSingleOccurenceAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'media' ||\n    attr === 'title' || attr === 'title*'\n}\n\nLink.isTokenAttr = function( attr ) {\n  return attr === 'rel' || attr === 'type' || attr === 'anchor'\n}\n\nLink.escapeQuotes = function( value ) {\n  return value.replace( /\"/g, '\\\\\"' )\n}\n\nLink.expandRelations = function( ref ) {\n  var rels = ref.rel.split( ' ' )\n  return rels.map( function( rel ) {\n    var value = Object.assign( {}, ref )\n    value.rel = rel\n    return value\n  })\n}\n\n/**\n * Parses an extended value and attempts to decode it\n * @internal\n * @param {String} value\n * @return {Object}\n */\nLink.parseExtendedValue = function( value ) {\n  var parts = /([^']+)?(?:'([^']+)')?(.+)/.exec( value )\n  return {\n    language: parts[2].toLowerCase(),\n    encoding: Link.isCompatibleEncoding( parts[1] ) ?\n      null : parts[1].toLowerCase(),\n    value: Link.isCompatibleEncoding( parts[1] ) ?\n      decodeURIComponent( parts[3] ) : parts[3]\n  }\n}\n\n/**\n * Format a given extended attribute and it's value\n * @param {String} attr\n * @param {Object} data\n * @return {String}\n */\nLink.formatExtendedAttribute = function( attr, data ) {\n\n  var encoding = ( data.encoding || 'utf-8' ).toUpperCase()\n  var language = data.language || 'en'\n\n  var encodedValue = ''\n\n  if( Buffer.isBuffer( data.value ) && Link.isCompatibleEncoding( encoding ) ) {\n    encodedValue = data.value.toString( encoding )\n  } else if( Buffer.isBuffer( data.value ) ) {\n    encodedValue = data.value.toString( 'hex' )\n      .replace( /[0-9a-f]{2}/gi, '%$1' )\n  } else {\n    encodedValue = encodeURIComponent( data.value )\n  }\n\n  return attr + '=' + encoding + '\\'' +\n    language + '\\'' + encodedValue\n\n}\n\n/**\n * Format a given attribute and it's value\n * @param {String} attr\n * @param {String|Object} value\n * @return {String}\n */\nLink.formatAttribute = function( attr, value ) {\n\n  if( Array.isArray( value ) ) {\n    return value.map(( item ) => {\n      return Link.formatAttribute( attr, item )\n    }).join( '; ' )\n  }\n\n  if( attr[ attr.length - 1 ] === '*' || typeof value !== 'string' ) {\n    return Link.formatExtendedAttribute( attr, value )\n  }\n\n  if( Link.isTokenAttr( attr ) ) {\n    value = needsQuotes( value ) ?\n      '\"' + Link.escapeQuotes( value ) + '\"' :\n      Link.escapeQuotes( value )\n  } else if( needsQuotes( value ) ) {\n    value = encodeURIComponent( value )\n    // We don't need to escape <SP> <,> <;> within quotes\n    value = value\n      .replace( /%20/g, ' ' )\n      .replace( /%2C/g, ',' )\n      .replace( /%3B/g, ';' )\n\n    value = '\"' + value + '\"'\n  }\n\n  return attr + '=' + value\n\n}\n\nmodule.exports = Link\n","import LinkHeader from 'http-link-header';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @internal\r\n */\r\nfunction internal_parseResourceInfo(response) {\r\n    var _a, _b, _c;\r\n    const contentTypeParts = (_b = (_a = response.headers.get(\"Content-Type\")) === null || _a === void 0 ? void 0 : _a.split(\";\")) !== null && _b !== void 0 ? _b : [];\r\n    // If the server offers a Turtle or JSON-LD serialisation on its own accord,\r\n    // that tells us whether it is RDF data that the server can understand\r\n    // (and hence can be updated with a PATCH request with SPARQL INSERT and DELETE statements),\r\n    // in which case our SolidDataset-related functions should handle it.\r\n    // For more context, see https://github.com/inrupt/solid-client-js/pull/214.\r\n    const isSolidDataset = contentTypeParts.length > 0 &&\r\n        [\"text/turtle\", \"application/ld+json\"].includes(contentTypeParts[0]);\r\n    const resourceInfo = {\r\n        sourceIri: response.url,\r\n        isRawData: !isSolidDataset,\r\n        contentType: (_c = response.headers.get(\"Content-Type\")) !== null && _c !== void 0 ? _c : undefined,\r\n        linkedResources: {},\r\n    };\r\n    const linkHeader = response.headers.get(\"Link\");\r\n    if (linkHeader) {\r\n        const parsedLinks = LinkHeader.parse(linkHeader);\r\n        // Set ACL link\r\n        const aclLinks = parsedLinks.get(\"rel\", \"acl\");\r\n        if (aclLinks.length === 1) {\r\n            resourceInfo.aclUrl = new URL(aclLinks[0].uri, resourceInfo.sourceIri).href;\r\n        }\r\n        // Parse all link headers and expose them in a standard way\r\n        // (this can replace the parsing of the ACL link above):\r\n        resourceInfo.linkedResources = parsedLinks.refs.reduce((rels, ref) => {\r\n            var _a;\r\n            var _b;\r\n            (_a = rels[_b = ref.rel]) !== null && _a !== void 0 ? _a : (rels[_b] = []);\r\n            rels[ref.rel].push(new URL(ref.uri, resourceInfo.sourceIri).href);\r\n            return rels;\r\n        }, resourceInfo.linkedResources);\r\n    }\r\n    const wacAllowHeader = response.headers.get(\"WAC-Allow\");\r\n    if (wacAllowHeader) {\r\n        resourceInfo.permissions = parseWacAllowHeader(wacAllowHeader);\r\n    }\r\n    return resourceInfo;\r\n}\r\n/**\r\n * Parse a WAC-Allow header into user and public access booleans.\r\n *\r\n * @param wacAllowHeader A WAC-Allow header in the format `user=\"read append write control\",public=\"read\"`\r\n * @see https://github.com/solid/solid-spec/blob/cb1373a369398d561b909009bd0e5a8c3fec953b/api-rest.md#wac-allow-headers\r\n */\r\nfunction parseWacAllowHeader(wacAllowHeader) {\r\n    function parsePermissionStatement(permissionStatement) {\r\n        const permissions = permissionStatement.split(\" \");\r\n        const writePermission = permissions.includes(\"write\");\r\n        return writePermission\r\n            ? {\r\n                read: permissions.includes(\"read\"),\r\n                append: true,\r\n                write: true,\r\n                control: permissions.includes(\"control\"),\r\n            }\r\n            : {\r\n                read: permissions.includes(\"read\"),\r\n                append: permissions.includes(\"append\"),\r\n                write: false,\r\n                control: permissions.includes(\"control\"),\r\n            };\r\n    }\r\n    function getStatementFor(header, scope) {\r\n        const relevantEntries = header\r\n            .split(\",\")\r\n            .map((rawEntry) => rawEntry.split(\"=\"))\r\n            .filter((parts) => parts.length === 2 && parts[0].trim() === scope);\r\n        // There should only be one statement with the given scope:\r\n        if (relevantEntries.length !== 1) {\r\n            return \"\";\r\n        }\r\n        const relevantStatement = relevantEntries[0][1].trim();\r\n        // The given statement should be wrapped in double quotes to be valid:\r\n        if (relevantStatement.charAt(0) !== '\"' ||\r\n            relevantStatement.charAt(relevantStatement.length - 1) !== '\"') {\r\n            return \"\";\r\n        }\r\n        // Return the statment without the wrapping quotes, e.g.: read append write control\r\n        return relevantStatement.substring(1, relevantStatement.length - 1);\r\n    }\r\n    return {\r\n        user: parsePermissionStatement(getStatementFor(wacAllowHeader, \"user\")),\r\n        public: parsePermissionStatement(getStatementFor(wacAllowHeader, \"public\")),\r\n    };\r\n}\r\n/** @hidden Used to instantiate a separate instance from input parameters */\r\nfunction internal_cloneResource(resource) {\r\n    let clonedResource;\r\n    if (typeof resource.slice === \"function\") {\r\n        // If given Resource is a File:\r\n        clonedResource = Object.assign(resource.slice(), Object.assign({}, resource));\r\n    }\r\n    else {\r\n        // If it is just a plain object containing metadata:\r\n        clonedResource = Object.assign({}, resource);\r\n    }\r\n    return clonedResource;\r\n}\r\n/** @internal */\r\nfunction internal_isUnsuccessfulResponse(response) {\r\n    return !response.ok;\r\n}\r\nfunction internal_isAuthenticationFailureResponse(response) {\r\n    return response.status === 401 || response.status === 403;\r\n}\n\nexport { internal_cloneResource, internal_isAuthenticationFailureResponse, internal_isUnsuccessfulResponse, internal_parseResourceInfo };\n","/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n// TODO: These should be replaced by auto-generated constants,\r\n//       if we can ensure that unused constants will be excluded from bundles.\r\n/** @hidden */\r\nconst acl = {\r\n    Authorization: \"http://www.w3.org/ns/auth/acl#Authorization\",\r\n    AuthenticatedAgent: \"http://www.w3.org/ns/auth/acl#AuthenticatedAgent\",\r\n    accessTo: \"http://www.w3.org/ns/auth/acl#accessTo\",\r\n    agent: \"http://www.w3.org/ns/auth/acl#agent\",\r\n    agentGroup: \"http://www.w3.org/ns/auth/acl#agentGroup\",\r\n    agentClass: \"http://www.w3.org/ns/auth/acl#agentClass\",\r\n    default: \"http://www.w3.org/ns/auth/acl#default\",\r\n    defaultForNew: \"http://www.w3.org/ns/auth/acl#defaultForNew\",\r\n    mode: \"http://www.w3.org/ns/auth/acl#mode\",\r\n    origin: \"http://www.w3.org/ns/auth/acl#origin\",\r\n};\r\n/** @hidden */\r\nconst rdf = {\r\n    type: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#type\",\r\n};\r\n/** @hidden */\r\nconst ldp = {\r\n    BasicContainer: \"http://www.w3.org/ns/ldp#BasicContainer\",\r\n    Container: \"http://www.w3.org/ns/ldp#Container\",\r\n    Resource: \"http://www.w3.org/ns/ldp#Resource\",\r\n    contains: \"http://www.w3.org/ns/ldp#contains\",\r\n};\r\n/** @hidden */\r\nconst foaf = {\r\n    Agent: \"http://xmlns.com/foaf/0.1/Agent\",\r\n    primaryTopic: \"http://xmlns.com/foaf/0.1/primaryTopic\",\r\n    isPrimaryTopicOf: \"http://xmlns.com/foaf/0.1/isPrimaryTopicOf\",\r\n};\r\n/** @hidden */\r\nconst acp = {\r\n    AccessControlResource: \"http://www.w3.org/ns/solid/acp#AccessControlResource\",\r\n    Policy: \"http://www.w3.org/ns/solid/acp#Policy\",\r\n    AccessControl: \"http://www.w3.org/ns/solid/acp#AccessControl\",\r\n    Read: \"http://www.w3.org/ns/solid/acp#Read\",\r\n    Append: \"http://www.w3.org/ns/solid/acp#Append\",\r\n    Write: \"http://www.w3.org/ns/solid/acp#Write\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by Matchers. */\r\n    Rule: \"http://www.w3.org/ns/solid/acp#Rule\",\r\n    Matcher: \"http://www.w3.org/ns/solid/acp#Matcher\",\r\n    accessControl: \"http://www.w3.org/ns/solid/acp#accessControl\",\r\n    memberAccessControl: \"http://www.w3.org/ns/solid/acp#memberAccessControl\",\r\n    apply: \"http://www.w3.org/ns/solid/acp#apply\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by memberAccessControls. */\r\n    applyMembers: \"http://www.w3.org/ns/solid/acp#applyMembers\",\r\n    allow: \"http://www.w3.org/ns/solid/acp#allow\",\r\n    deny: \"http://www.w3.org/ns/solid/acp#deny\",\r\n    allOf: \"http://www.w3.org/ns/solid/acp#allOf\",\r\n    anyOf: \"http://www.w3.org/ns/solid/acp#anyOf\",\r\n    noneOf: \"http://www.w3.org/ns/solid/acp#noneOf\",\r\n    access: \"http://www.w3.org/ns/solid/acp#access\",\r\n    /** @deprecated Removed from the ACP proposal, to be replaced by memberAccessControls. */\r\n    accessMembers: \"http://www.w3.org/ns/solid/acp#accessMembers\",\r\n    agent: \"http://www.w3.org/ns/solid/acp#agent\",\r\n    group: \"http://www.w3.org/ns/solid/acp#group\",\r\n    client: \"http://www.w3.org/ns/solid/acp#client\",\r\n    PublicAgent: \"http://www.w3.org/ns/solid/acp#PublicAgent\",\r\n    AuthenticatedAgent: \"http://www.w3.org/ns/solid/acp#AuthenticatedAgent\",\r\n    CreatorAgent: \"http://www.w3.org/ns/solid/acp#CreatorAgent\",\r\n};\r\n/** @hidden */\r\nconst solid = {\r\n    PublicOidcClient: \"http://www.w3.org/ns/solid/terms#PublicOidcClient\",\r\n};\r\n/** @hidden */\r\nconst security = {\r\n    publicKey: \"https://w3id.org/security#publicKey\",\r\n};\r\n/** @hidden */\r\nconst pim = {\r\n    storage: \"http://www.w3.org/ns/pim/space#storage\",\r\n};\n\nexport { acl, acp, foaf, ldp, pim, rdf, security, solid };\n","import { hasResourceInfo, hasServerResourceInfo, SolidClientError } from '../interfaces.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { fetch } from '../fetcher.mjs';\nimport { internal_isUnsuccessfulResponse, internal_isAuthenticationFailureResponse, internal_parseResourceInfo } from './resource.internal.mjs';\nimport { acp } from '../constants.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @ignore For internal use only. */\r\nconst internal_defaultFetchOptions = {\r\n    fetch: fetch,\r\n};\r\n/**\r\n * Retrieve the information about a resource (e.g. access permissions) without\r\n * fetching the resource itself.\r\n *\r\n * @param url URL to fetch Resource metadata from.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\r\n * @returns Promise resolving to the metadata describing the given Resource, or rejecting if fetching it failed.\r\n * @since 0.4.0\r\n */\r\nasync function getResourceInfo(url, options = Object.assign(Object.assign({}, internal_defaultFetchOptions), { ignoreAuthenticationErrors: false })) {\r\n    var _a;\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, { method: \"HEAD\" });\r\n    return responseToResourceInfo(response, {\r\n        ignoreAuthenticationErrors: (_a = options.ignoreAuthenticationErrors) !== null && _a !== void 0 ? _a : false,\r\n    });\r\n}\r\n/**\r\n * Parse Solid metadata from a Response obtained by fetching a Resource from a Solid Pod,\r\n *\r\n * @param response A Fetch API Response. See {@link https://developer.mozilla.org/en-US/docs/Web/API/Response MDN}.\r\n * @returns Resource metadata readable by functions such as [[getSourceUrl]].\r\n * @hidden This interface is not exposed yet until we've tried it out in practice.\r\n */\r\nfunction responseToResourceInfo(response, options = { ignoreAuthenticationErrors: false }) {\r\n    if (internal_isUnsuccessfulResponse(response) &&\r\n        (!internal_isAuthenticationFailureResponse(response) ||\r\n            !options.ignoreAuthenticationErrors)) {\r\n        throw new FetchError(`Fetching the metadata of the Resource at [${response.url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    return { internal_resourceInfo: resourceInfo };\r\n}\r\n/**\r\n * @param resource Resource for which to check whether it is a Container.\r\n * @returns Whether `resource` is a Container.\r\n */\r\nfunction isContainer(resource) {\r\n    const containerUrl = hasResourceInfo(resource)\r\n        ? getSourceUrl(resource)\r\n        : internal_toIriString(resource);\r\n    return containerUrl.endsWith(\"/\");\r\n}\r\n/**\r\n * This function will tell you whether a given Resource contains raw data, or a SolidDataset.\r\n *\r\n * @param resource Resource for which to check whether it contains raw data.\r\n * @return Whether `resource` contains raw data.\r\n */\r\nfunction isRawData(resource) {\r\n    return resource.internal_resourceInfo.isRawData;\r\n}\r\n/**\r\n * @param resource Resource for which to determine the Content Type.\r\n * @returns The Content Type, if known, or null if not known.\r\n */\r\nfunction getContentType(resource) {\r\n    var _a;\r\n    return (_a = resource.internal_resourceInfo.contentType) !== null && _a !== void 0 ? _a : null;\r\n}\r\nfunction getSourceUrl(resource) {\r\n    if (hasResourceInfo(resource)) {\r\n        return resource.internal_resourceInfo.sourceIri;\r\n    }\r\n    return null;\r\n}\r\n/** @hidden Alias of getSourceUrl for those who prefer to use IRI terminology. */\r\nconst getSourceIri = getSourceUrl;\r\n/**\r\n * Given a Resource that exposes information about the owner of the Pod it is in, returns the WebID of that owner.\r\n *\r\n * Data about the owner of the Pod is exposed when the following conditions hold:\r\n * - The Pod server supports exposing the Pod owner\r\n * - The current user is allowed to see who the Pod owner is.\r\n *\r\n * If one or more of those conditions are false, this function will return `null`.\r\n *\r\n * @param resource A Resource that contains information about the owner of the Pod it is in.\r\n * @returns The WebID of the owner of the Pod the Resource is in, if provided, or `null` if not.\r\n * @since 0.6.0\r\n */\r\nfunction getPodOwner(resource) {\r\n    var _a;\r\n    if (!hasServerResourceInfo(resource)) {\r\n        return null;\r\n    }\r\n    const podOwners = (_a = getLinkedResourceUrlAll(resource)[\"http://www.w3.org/ns/solid/terms#podOwner\"]) !== null && _a !== void 0 ? _a : [];\r\n    return podOwners.length === 1 ? podOwners[0] : null;\r\n}\r\n/**\r\n * Given a WebID and a Resource that exposes information about the owner of the Pod it is in, returns whether the given WebID is the owner of the Pod.\r\n *\r\n * Data about the owner of the Pod is exposed when the following conditions hold:\r\n * - The Pod server supports exposing the Pod owner\r\n * - The current user is allowed to see who the Pod owner is.\r\n *\r\n * If one or more of those conditions are false, this function will return `null`.\r\n *\r\n * @param webId The WebID of which to check whether it is the Pod Owner's.\r\n * @param resource A Resource that contains information about the owner of the Pod it is in.\r\n * @returns Whether the given WebID is the Pod Owner's, if the Pod Owner is exposed, or `null` if it is not exposed.\r\n * @since 0.6.0\r\n */\r\nfunction isPodOwner(webId, resource) {\r\n    const podOwner = getPodOwner(resource);\r\n    if (typeof podOwner !== \"string\") {\r\n        return null;\r\n    }\r\n    return podOwner === webId;\r\n}\r\n/**\r\n * Get the URLs of Resources linked to the given Resource.\r\n *\r\n * Solid servers can link Resources to each other. For example, in servers\r\n * implementing Web Access Control, Resources can have an Access Control List\r\n * Resource linked to it via the `acl` relation.\r\n *\r\n * @param resource A Resource fetched from a Solid Pod.\r\n * @returns The URLs of Resources linked to the given Resource, indexed by the key that links them.\r\n * @since 1.7.0\r\n */\r\nfunction getLinkedResourceUrlAll(resource) {\r\n    return resource.internal_resourceInfo.linkedResources;\r\n}\r\n/**\r\n * Get what access the current user has to the given Resource.\r\n *\r\n * This function can tell you what access the current user has for the given\r\n * Resource, allowing you to e.g. determine that changes to it will be rejected\r\n * before attempting to do so.\r\n * Additionally, for servers adhering to the Web Access Control specification,\r\n * it will tell you what access unauthenticated users have to the given Resource.\r\n *\r\n * @param resource A Resource fetched from a Solid Pod.\r\n * @returns What access the current user and, if supported by the server, unauthenticated users have to the given Resource.\r\n * @since 1.7.0\r\n */\r\nfunction getEffectiveAccess(resource) {\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n    if (typeof resource.internal_resourceInfo.permissions === \"object\") {\r\n        return {\r\n            user: {\r\n                read: resource.internal_resourceInfo.permissions.user.read,\r\n                append: resource.internal_resourceInfo.permissions.user.append,\r\n                write: resource.internal_resourceInfo.permissions.user.write,\r\n            },\r\n            public: {\r\n                read: resource.internal_resourceInfo.permissions.public.read,\r\n                append: resource.internal_resourceInfo.permissions.public.append,\r\n                write: resource.internal_resourceInfo.permissions.public.write,\r\n            },\r\n        };\r\n    }\r\n    const linkedResourceUrls = getLinkedResourceUrlAll(resource);\r\n    return {\r\n        user: {\r\n            read: (_b = (_a = linkedResourceUrls[acp.allow]) === null || _a === void 0 ? void 0 : _a.includes(acp.Read)) !== null && _b !== void 0 ? _b : false,\r\n            append: (_e = (((_c = linkedResourceUrls[acp.allow]) === null || _c === void 0 ? void 0 : _c.includes(acp.Append)) ||\r\n                ((_d = linkedResourceUrls[acp.allow]) === null || _d === void 0 ? void 0 : _d.includes(acp.Write)))) !== null && _e !== void 0 ? _e : false,\r\n            write: (_g = (_f = linkedResourceUrls[acp.allow]) === null || _f === void 0 ? void 0 : _f.includes(acp.Write)) !== null && _g !== void 0 ? _g : false,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Extends the regular JavaScript error object with access to the status code and status message.\r\n * @since 1.2.0\r\n */\r\nclass FetchError extends SolidClientError {\r\n    constructor(message, errorResponse) {\r\n        super(message);\r\n        this.response = errorResponse;\r\n    }\r\n    get statusCode() {\r\n        return this.response.status;\r\n    }\r\n    get statusText() {\r\n        return this.response.statusText;\r\n    }\r\n}\n\nexport { FetchError, getContentType, getEffectiveAccess, getLinkedResourceUrlAll, getPodOwner, getResourceInfo, getSourceIri, getSourceUrl, internal_defaultFetchOptions, isContainer, isPodOwner, isRawData, responseToResourceInfo };\n","import { fetch } from '../fetcher.mjs';\nimport { hasResourceInfo } from '../interfaces.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { FetchError, getSourceIri } from './resource.mjs';\nimport { internal_isUnsuccessfulResponse, internal_parseResourceInfo, internal_cloneResource } from './resource.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst defaultGetFileOptions = {\r\n    fetch: fetch,\r\n};\r\nconst RESERVED_HEADERS = [\"Slug\", \"If-None-Match\", \"Content-Type\"];\r\n/**\r\n * Some of the headers must be set by the library, rather than directly.\r\n */\r\nfunction containsReserved(header) {\r\n    return RESERVED_HEADERS.some((reserved) => header[reserved] !== undefined);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieves a file from a URL and returns the file as a blob.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const fileBlob = await getFile(\"https://pod.example.com/some/file\", { fetch: fetch });\r\n * ```\r\n *\r\n * For additional examples, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#retrieve-a-file).\r\n *\r\n * @param url The URL of the file to return\r\n * @param options Fetching options: a custom fetcher and/or headers.\r\n * @returns The file as a blob.\r\n */\r\nasync function getFile(input, options = defaultGetFileOptions) {\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const url = internal_toIriString(input);\r\n    const response = await config.fetch(url, config.init);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the File failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    const data = await response.blob();\r\n    const fileWithResourceInfo = Object.assign(data, {\r\n        internal_resourceInfo: resourceInfo,\r\n    });\r\n    return fileWithResourceInfo;\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Deletes a file at a given URL.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * await deleteFile( \"https://pod.example.com/some/file\", { fetch: fetch });\r\n * ```\r\n *\r\n * For additional examples, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#delete-a-file).\r\n *\r\n * @param file The URL of the file to delete\r\n */\r\nasync function deleteFile(file, options = defaultGetFileOptions) {\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const url = hasResourceInfo(file)\r\n        ? internal_toIriString(getSourceIri(file))\r\n        : internal_toIriString(file);\r\n    const response = await config.fetch(url, Object.assign(Object.assign({}, config.init), { method: \"DELETE\" }));\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the file at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves a file in an existing folder/Container associated with the given URL.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const savedFile = await saveFileInContainer(\r\n *   \"https://pod.example.com/some/existing/container/\",\r\n *   new Blob([\"This is a plain piece of text\"], { type: \"plain/text\" }),\r\n *   { slug: \"suggestedFileName.txt\", contentType: \"text/plain\", fetch: fetch }\r\n * );\r\n * ```\r\n *\r\n * For additional example, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#save-a-file-into-an-existing-container).\r\n *\r\n * In the `options` parameter,\r\n *\r\n * - You can suggest a file name in the `slug` field.  However, the Solid\r\n *   Server may or may not use the suggested `slug` as the file name.\r\n *\r\n * - *Recommended:* You can specify the [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\r\n *   of the file in the `contentType`.  If unspecified, the function uses the default type of\r\n *   `application/octet-stream`, indicating a binary data file.\r\n *\r\n * The function saves a file into an *existing* Container. If the\r\n * Container does not exist, either:\r\n * - Create the Container first using [[createContainerAt]], and then\r\n *   use the function, or\r\n * - Use [[overwriteFile]] to save the file. [[overwriteFile]] creates\r\n *   the Containers in the saved file path as needed.\r\n *\r\n * Users who only have `Append` but not `Write` access to a Container\r\n * can use [[saveFileInContainer]] to save new files to the Container.\r\n * That is, [[saveFileInContainer]] is useful in situations where users\r\n * can add new files to a Container but not change existing files in\r\n * the Container, such as users given access to send notifications to\r\n * another's Pod but not to view or delete existing notifications in that Pod.\r\n *\r\n * Users with `Write` access to the given folder/Container may prefer to\r\n * use [[overwriteFile]].\r\n *\r\n * @param folderUrl The URL of an existing folder where the new file is saved.\r\n * @param file The file to be written.\r\n * @param options Additional parameters for file creation (e.g. a slug).\r\n * @returns A Promise that resolves to the saved file, if available, or `null` if the current user does not have Read access to the newly-saved file. It rejects if saving fails.\r\n */\r\nasync function saveFileInContainer(folderUrl, file, options = defaultGetFileOptions) {\r\n    const folderUrlString = internal_toIriString(folderUrl);\r\n    const response = await writeFile(folderUrlString, file, \"POST\", options);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Saving the file in [${folderUrl}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly saved file.\");\r\n    }\r\n    const fileIri = new URL(locationHeader, new URL(folderUrlString).origin).href;\r\n    const blobClone = internal_cloneResource(file);\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: true,\r\n            sourceIri: fileIri,\r\n            contentType: getContentType(file, options.contentType),\r\n        },\r\n    };\r\n    return Object.assign(blobClone, resourceInfo);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves a file at a given URL. If a file already exists at the URL,\r\n * the function overwrites the existing file.\r\n *\r\n * For example:\r\n *\r\n * ```\r\n * const savedFile = await overwriteFile(\r\n *   \"https://pod.example.com/some/container/myFile.txt\",\r\n *   new Blob([\"This is a plain piece of text\"], { type: \"plain/text\" }),\r\n *   { contentType: \"text/plain\", fetch: fetch }\r\n * );\r\n * ```\r\n *\r\n * For additional example, see\r\n * [Read/Write Files](https://docs.inrupt.com/developer-tools/javascript/client-libraries/tutorial/read-write-files/#write-a-file-to-a-specific-url).\r\n *\r\n * *Recommended:* In the `options` parameter, you can specify the\r\n * [media type](https://developer.mozilla.org/en-US/docs/Glossary/MIME_type)\r\n * of the file in the `contentType`.  If unspecified, the function uses the default type of\r\n * `application/octet-stream`, indicating a binary data file.\r\n *\r\n * When saving a file with [[overwriteFile]], the Solid server creates any\r\n * intermediary Containers as needed; i.e., the Containers do not\r\n * need to be created in advance. For example, when saving a file to the target URL of\r\n * https://example.pod/container/resource, if https://example.pod/container/ does not exist,\r\n * the container is created as part of the save.\r\n *\r\n * @param fileUrl The URL where the file is saved.\r\n * @param file The file to be written.\r\n * @param options Additional parameters for file creation (e.g., media type).\r\n */\r\nasync function overwriteFile(fileUrl, file, options = defaultGetFileOptions) {\r\n    const fileUrlString = internal_toIriString(fileUrl);\r\n    const response = await writeFile(fileUrlString, file, \"PUT\", options);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Overwriting the file at [${fileUrlString}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const blobClone = internal_cloneResource(file);\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    resourceInfo.sourceIri = fileUrlString;\r\n    resourceInfo.isRawData = true;\r\n    return Object.assign(blobClone, { internal_resourceInfo: resourceInfo });\r\n}\r\nfunction isHeadersArray(headers) {\r\n    return Array.isArray(headers);\r\n}\r\n/**\r\n * The return type of this function is misleading: it should ONLY be used to check\r\n * whether an object has a forEach method that returns <key, value> pairs.\r\n *\r\n * @param headers A headers object that might have a forEach\r\n */\r\nfunction hasHeadersObjectForEach(headers) {\r\n    return typeof headers.forEach === \"function\";\r\n}\r\n/**\r\n * @hidden\r\n * This function feels unnecessarily complicated, but is required in order to\r\n * have Headers according to type definitions in both Node and browser environments.\r\n * This might require a fix upstream to be cleaned up.\r\n *\r\n * @param headersToFlatten A structure containing headers potentially in several formats\r\n */\r\nfunction flattenHeaders(headersToFlatten) {\r\n    if (typeof headersToFlatten === \"undefined\") {\r\n        return {};\r\n    }\r\n    let flatHeaders = {};\r\n    if (isHeadersArray(headersToFlatten)) {\r\n        headersToFlatten.forEach(([key, value]) => {\r\n            flatHeaders[key] = value;\r\n        });\r\n        // Note that the following line must be a elsif, because string[][] has a forEach,\r\n        // but it returns string[] instead of <key, value>\r\n    }\r\n    else if (hasHeadersObjectForEach(headersToFlatten)) {\r\n        headersToFlatten.forEach((value, key) => {\r\n            flatHeaders[key] = value;\r\n        });\r\n    }\r\n    else {\r\n        // If the headers are already a Record<string, string>,\r\n        // they can directly be returned.\r\n        flatHeaders = headersToFlatten;\r\n    }\r\n    return flatHeaders;\r\n}\r\n/**\r\n * Internal function that performs the actual write HTTP query, either POST\r\n * or PUT depending on the use case.\r\n *\r\n * @param fileUrl The URL where the file is saved\r\n * @param file The file to be written\r\n * @param method The HTTP method\r\n * @param options Additional parameters for file creation (e.g. a slug, or media type)\r\n */\r\nasync function writeFile(targetUrl, file, method, options) {\r\n    var _a, _b;\r\n    const config = Object.assign(Object.assign({}, defaultGetFileOptions), options);\r\n    const headers = flattenHeaders((_b = (_a = config.init) === null || _a === void 0 ? void 0 : _a.headers) !== null && _b !== void 0 ? _b : {});\r\n    if (containsReserved(headers)) {\r\n        throw new Error(`No reserved header (${RESERVED_HEADERS.join(\", \")}) should be set in the optional RequestInit.`);\r\n    }\r\n    // If a slug is in the parameters, set the request headers accordingly\r\n    if (config.slug !== undefined) {\r\n        headers[\"Slug\"] = config.slug;\r\n    }\r\n    headers[\"Content-Type\"] = getContentType(file, options.contentType);\r\n    const targetUrlString = internal_toIriString(targetUrl);\r\n    return await config.fetch(targetUrlString, Object.assign(Object.assign({}, config.init), { headers,\r\n        method, body: file }));\r\n}\r\nfunction getContentType(file, contentTypeOverride) {\r\n    if (typeof contentTypeOverride === \"string\") {\r\n        return contentTypeOverride;\r\n    }\r\n    const fileType = typeof file === \"object\" &&\r\n        file !== null &&\r\n        typeof file.type === \"string\" &&\r\n        file.type.length > 0\r\n        ? file.type\r\n        : undefined;\r\n    return fileType !== null && fileType !== void 0 ? fileType : \"application/octet-stream\";\r\n}\n\nexport { deleteFile, flattenHeaders, getFile, overwriteFile, saveFileInContainer };\n","class BlankNode {\n  constructor (id) {\n    this.value = id || ('b' + (++BlankNode.nextId))\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nBlankNode.prototype.termType = 'BlankNode'\n\nBlankNode.nextId = 0\n\nmodule.exports = BlankNode\n","class DefaultGraph {\n  equals (other) {\n    return !!other && other.termType === this.termType\n  }\n}\n\nDefaultGraph.prototype.termType = 'DefaultGraph'\nDefaultGraph.prototype.value = ''\n\nmodule.exports = DefaultGraph\n","function fromTerm (original) {\n  if (!original) {\n    return null\n  }\n\n  if (original.termType === 'BlankNode') {\n    return this.blankNode(original.value)\n  }\n\n  if (original.termType === 'DefaultGraph') {\n    return this.defaultGraph()\n  }\n\n  if (original.termType === 'Literal') {\n    return this.literal(original.value, original.language || this.namedNode(original.datatype.value))\n  }\n\n  if (original.termType === 'NamedNode') {\n    return this.namedNode(original.value)\n  }\n\n  if (original.termType === 'Quad') {\n    const subject = this.fromTerm(original.subject)\n    const predicate = this.fromTerm(original.predicate)\n    const object = this.fromTerm(original.object)\n    const graph = this.fromTerm(original.graph)\n\n    return this.quad(subject, predicate, object, graph)\n  }\n\n  if (original.termType === 'Variable') {\n    return this.variable(original.value)\n  }\n\n  throw new Error(`unknown termType ${original.termType}`)\n}\n\nmodule.exports = fromTerm\n","class NamedNode {\n  constructor (iri) {\n    this.value = iri\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nNamedNode.prototype.termType = 'NamedNode'\n\nmodule.exports = NamedNode\n","const NamedNode = require('./NamedNode.js')\n\nclass Literal {\n  constructor (value, language, datatype) {\n    this.value = value\n    this.datatype = Literal.stringDatatype\n    this.language = ''\n\n    if (language) {\n      this.language = language\n      this.datatype = Literal.langStringDatatype\n    } else if (datatype) {\n      this.datatype = datatype\n    }\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value &&\n      other.language === this.language && other.datatype.equals(this.datatype)\n  }\n}\n\nLiteral.prototype.termType = 'Literal'\n\nLiteral.langStringDatatype = new NamedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#langString')\nLiteral.stringDatatype = new NamedNode('http://www.w3.org/2001/XMLSchema#string')\n\nmodule.exports = Literal\n","const DefaultGraph = require('./DefaultGraph.js')\n\nclass Quad {\n  constructor (subject, predicate, object, graph) {\n    this.subject = subject\n    this.predicate = predicate\n    this.object = object\n\n    if (graph) {\n      this.graph = graph\n    } else {\n      this.graph = new DefaultGraph()\n    }\n  }\n\n  equals (other) {\n    // `|| !other.termType` is for backwards-compatibility with old factories without RDF* support.\n    return !!other && (other.termType === 'Quad' || !other.termType) &&\n      other.subject.equals(this.subject) && other.predicate.equals(this.predicate) &&\n      other.object.equals(this.object) && other.graph.equals(this.graph)\n  }\n}\n\nQuad.prototype.termType = 'Quad'\nQuad.prototype.value = ''\n\nmodule.exports = Quad\n","class Variable {\n  constructor (name) {\n    this.value = name\n  }\n\n  equals (other) {\n    return !!other && other.termType === this.termType && other.value === this.value\n  }\n}\n\nVariable.prototype.termType = 'Variable'\n\nmodule.exports = Variable\n","const BlankNode = require('./BlankNode.js')\nconst DefaultGraph = require('./DefaultGraph.js')\nconst fromTermRaw = require('./fromTerm.js')\nconst Literal = require('./Literal.js')\nconst NamedNode = require('./NamedNode.js')\nconst Quad = require('./Quad.js')\nconst Variable = require('./Variable.js')\n\nfunction namedNode (value) {\n  return new NamedNode(value)\n}\n\nfunction blankNode (value) {\n  return new BlankNode(value)\n}\n\nfunction literal (value, languageOrDatatype) {\n  if (typeof languageOrDatatype === 'string') {\n    if (languageOrDatatype.indexOf(':') === -1) {\n      return new Literal(value, languageOrDatatype)\n    }\n\n    return new Literal(value, null, DataFactory.namedNode(languageOrDatatype))\n  }\n\n  return new Literal(value, null, languageOrDatatype)\n}\n\nfunction variable (value) {\n  return new Variable(value)\n}\n\nfunction defaultGraph () {\n  return DataFactory.defaultGraphInstance\n}\n\nfunction triple (subject, predicate, object) {\n  return DataFactory.quad(subject, predicate, object)\n}\n\nfunction quad (subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph || DataFactory.defaultGraphInstance)\n}\n\nfunction fromTerm (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nfunction fromQuad (original) {\n  return fromTermRaw.call(DataFactory, original)\n}\n\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  literal,\n  variable,\n  defaultGraph,\n  triple,\n  quad,\n  fromTerm,\n  fromQuad,\n  defaultGraphInstance: new DefaultGraph()\n}\n\nmodule.exports = DataFactory\n","const DataFactory = require('./lib/DataFactory.js')\n\nmodule.exports = DataFactory\n","function isString (s) {\n  return typeof s === 'string' || s instanceof String\n}\n\nconst xsdString = 'http://www.w3.org/2001/XMLSchema#string'\n\nfunction termToId (term) {\n  if (typeof term === 'string') {\n    return term\n  }\n\n  if (!term) {\n    return ''\n  }\n\n  if (typeof term.id !== 'undefined' && term.termType !== 'Quad') {\n    return term.id\n  }\n\n  let subject, predicate, object, graph\n\n  // Term instantiated with another library\n  switch (term.termType) {\n    case 'NamedNode':\n      return term.value\n\n    case 'BlankNode':\n      return `_:${term.value}`\n\n    case 'Variable':\n      return `?${term.value}`\n\n    case 'DefaultGraph':\n      return ''\n\n    case 'Literal':\n      if (term.language) {\n        return `\"${term.value}\"@${term.language}`\n      }\n\n      return `\"${term.value}\"${term.datatype && term.datatype.value !== xsdString ? `^^${term.datatype.value}` : ''}`\n\n    case 'Quad':\n      // To identify RDF* quad components, we escape quotes by doubling them.\n      // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n      subject = escapeQuotes(termToId(term.subject))\n      predicate = escapeQuotes(termToId(term.predicate))\n      object = escapeQuotes(termToId(term.object))\n      graph = term.graph.termType === 'DefaultGraph' ? '' : ` ${termToId(term.graph)}`\n\n      return `<<${subject} ${predicate} ${object}${graph}>>`\n\n    default:\n      throw new Error(`Unexpected termType: ${term.termType}`)\n  }\n}\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/\n\nfunction escapeQuotes (id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`)\n}\n\nclass DatasetCore {\n  constructor (quads) {\n    // The number of quads is initially zero\n    this._size = 0\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null)\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0\n    this._ids = Object.create(null)\n    this._ids['><'] = 0 // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null) // inverse of `_ids`\n\n    this._quads = new Map()\n\n    // Add quads if passed\n    if (quads) {\n      for (const quad of quads) {\n        this.add(quad)\n      }\n    }\n  }\n\n  get size () {\n    // Return the quad count if if was cached\n    let size = this._size\n\n    if (size !== null) {\n      return size\n    }\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0\n    const graphs = this._graphs\n    let subjects, subject\n\n    for (const graphKey in graphs) {\n      for (const subjectKey in (subjects = graphs[graphKey].subjects)) {\n        for (const predicateKey in (subject = subjects[subjectKey])) {\n          size += Object.keys(subject[predicateKey]).length\n        }\n      }\n    }\n\n    this._size = size\n\n    return this._size\n  }\n\n  add (quad) {\n    // Convert terms to internal string representation\n    let subject = termToId(quad.subject)\n    let predicate = termToId(quad.predicate)\n    let object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph]\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} }\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem)\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids\n    const entities = this._entities\n    subject = ids[subject] || (ids[entities[++this._id] = subject] = this._id)\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id)\n    object = ids[object] || (ids[entities[++this._id] = object] = this._id)\n\n    this._addToIndex(graphItem.subjects, subject, predicate, object)\n    this._addToIndex(graphItem.predicates, predicate, object, subject)\n    this._addToIndex(graphItem.objects, object, subject, predicate)\n\n    this._setQuad(subject, predicate, object, graph, quad)\n\n    // The cached quad count is now invalid\n    this._size = null\n\n    return this\n  }\n\n  delete (quad) {\n    // Convert terms to internal string representation\n    let subject = termToId(quad.subject)\n    let predicate = termToId(quad.predicate)\n    let object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids\n    const graphs = this._graphs\n    let graphItem, subjects, predicates\n\n    if (!(subject = ids[subject]) || !(predicate = ids[predicate]) ||\n      !(object = ids[object]) || !(graphItem = graphs[graph]) ||\n      !(subjects = graphItem.subjects[subject]) ||\n      !(predicates = subjects[predicate]) ||\n      !(object in predicates)\n    ) {\n      return this\n    }\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects, subject, predicate, object)\n    this._removeFromIndex(graphItem.predicates, predicate, object, subject)\n    this._removeFromIndex(graphItem.objects, object, subject, predicate)\n\n    if (this._size !== null) {\n      this._size--\n    }\n\n    this._deleteQuad(subject, predicate, object, graph)\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) { // eslint-disable-line no-unreachable-loop\n      return this\n    }\n\n    delete graphs[graph]\n\n    return this\n  }\n\n  has (quad) {\n    // Convert terms to internal string representation\n    const subject = termToId(quad.subject)\n    const predicate = termToId(quad.predicate)\n    const object = termToId(quad.object)\n    const graph = termToId(quad.graph)\n\n    const graphItem = this._graphs[graph]\n\n    if (!graphItem) {\n      return false\n    }\n\n    const ids = this._ids\n    let subjectId, predicateId, objectId\n\n    // Translate IRIs to internal index keys.\n    if (\n      (isString(subject) && !(subjectId = ids[subject])) ||\n      (isString(predicate) && !(predicateId = ids[predicate])) ||\n      (isString(object) && !(objectId = ids[object]))\n    ) {\n      return false\n    }\n\n    return this._countInIndex(graphItem.objects, objectId, subjectId, predicateId) === 1\n  }\n\n  match (subject, predicate, object, graph) {\n    return this._createDataset(this._match(subject, predicate, object, graph))\n  }\n\n  [Symbol.iterator] () {\n    return this._match()[Symbol.iterator]()\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex (index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {})\n    const index2 = index1[key1] || (index1[key1] = {})\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2\n\n    if (!existed) {\n      index2[key2] = null\n    }\n\n    return !existed\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex (index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0]\n    const index2 = index1[key1]\n    delete index2[key2]\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) { // eslint-disable-line no-unreachable-loop\n      return\n    }\n\n    delete index1[key1]\n\n    for (const key in index1) { // eslint-disable-line no-unreachable-loop\n      return\n    }\n\n    delete index0[key0]\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex (index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) {\n      (tmp = index0, index0 = {})[key0] = tmp[key0]\n    }\n\n    for (const value0 in index0) {\n      index1 = index0[value0]\n\n      if (index1) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) {\n          (tmp = index1, index1 = {})[key1] = tmp[key1]\n        }\n\n        for (const value1 in index1) {\n          index2 = index1[value1]\n\n          if (index2) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2)\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = {\n                [name0]: value0,\n                [name1]: value1,\n                [name2]: values[l]\n              }\n\n              const quad = this._getQuad(parts.subject, parts.predicate, parts.object, graph)\n\n              if (array) {\n                array.push(quad)\n              } else if (callback(quad)) {\n                return true\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return array\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex (index0, key0, key1, key2) {\n    let count = 0\n    let tmp, index1, index2\n\n    // If a key is specified, count only that part of index 0\n    if (key0) {\n      (tmp = index0, index0 = {})[key0] = tmp[key0]\n    }\n\n    for (const value0 in index0) {\n      index1 = index0[value0]\n\n      if (index1) {\n        // If a key is specified, count only that part of index 1\n        if (key1) {\n          (tmp = index1, index1 = {})[key1] = tmp[key1]\n        }\n\n        for (const value1 in index1) {\n          index2 = index1[value1]\n\n          if (index2) {\n            if (key2) {\n              // If a key is specified, count the quad if it exists\n              (key2 in index2) && count++\n            } else {\n              // Otherwise, count all quads\n              count += Object.keys(index2).length\n            }\n          }\n        }\n      }\n    }\n\n    return count\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs (graph) {\n    if (!isString(graph)) {\n      return this._graphs\n    }\n\n    return {\n      [graph]: this._graphs[graph]\n    }\n  }\n\n  _match (subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject)\n    predicate = predicate && termToId(predicate)\n    object = object && termToId(object)\n    graph = graph && termToId(graph)\n\n    const quads = []\n    const graphs = this._getGraphs(graph)\n    const ids = this._ids\n    let content, subjectId, predicateId, objectId\n\n    // Translate IRIs to internal index keys.\n    if (\n      (isString(subject) && !(subjectId = ids[subject])) ||\n      (isString(predicate) && !(predicateId = ids[predicate])) ||\n      (isString(object) && !(objectId = ids[object]))\n    ) {\n      return quads\n    }\n\n    for (const graphId in graphs) {\n      content = graphs[graphId]\n\n      // Only if the specified graph contains triples, there can be results\n      if (content) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId, 'object', 'subject', 'predicate', graphId, null, quads)\n          } else {\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null, 'subject', 'predicate', 'object', graphId, null, quads)\n          }\n        } else if (predicateId) {\n          // if only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null, 'predicate', 'object', 'subject', graphId, null, quads)\n        } else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null, 'object', 'subject', 'predicate', graphId, null, quads)\n        } else {\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null, 'subject', 'predicate', 'object', graphId, null, quads)\n        }\n      }\n    }\n\n    return quads\n  }\n\n  _getQuad (subjectId, predicateId, objectId, graphId) {\n    return this._quads.get(this._toId(subjectId, predicateId, objectId, graphId))\n  }\n\n  _setQuad (subjectId, predicateId, objectId, graphId, quad) {\n    this._quads.set(this._toId(subjectId, predicateId, objectId, graphId), quad)\n  }\n\n  _deleteQuad (subjectId, predicateId, objectId, graphId) {\n    this._quads.delete(this._toId(subjectId, predicateId, objectId, graphId))\n  }\n\n  _createDataset (quads) {\n    return new this.constructor(quads)\n  }\n\n  _toId (subjectId, predicateId, objectId, graphId) {\n    return `${subjectId}:${predicateId}:${objectId}:${graphId}`\n  }\n}\n\nmodule.exports = DatasetCore\n","const rdf = require('@rdfjs/data-model')\nconst DatasetCore = require('./DatasetCore')\n\nfunction dataset (quads) {\n  return new DatasetCore(quads)\n}\n\nmodule.exports = Object.assign({ dataset }, rdf)\n","import rdfJsDatasetModule from '@rdfjs/dataset';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nrdfJsDatasetModule.dataset;\r\nconst localNodeSkolemPrefix = \"https://inrupt.com/.well-known/sdk-local-node/\";\r\n/**\r\n * Runtime freezing might be too much overhead;\r\n * if so, this function allows us to replace it by a function\r\n * that merely marks its input as Readonly<> for static analysis.\r\n */\r\nconst freeze = Object.freeze;\r\nfunction isLocalNodeIri(iri) {\r\n    return (iri.substring(0, localNodeSkolemPrefix.length) === localNodeSkolemPrefix);\r\n}\r\nfunction getLocalNodeName(localNodeIri) {\r\n    return localNodeIri.substring(localNodeSkolemPrefix.length);\r\n}\r\nfunction getLocalNodeIri(localNodeName) {\r\n    return `${localNodeSkolemPrefix}${localNodeName}`;\r\n}\r\nfunction isBlankNodeId(value) {\r\n    return typeof value === \"string\" && value.substring(0, 2) === \"_:\";\r\n}\r\nfunction getBlankNodeValue(blankNodeId) {\r\n    return blankNodeId.substring(2);\r\n}\r\nfunction getBlankNodeId(blankNode) {\r\n    return `_:${blankNode.value}`;\r\n}\n\nexport { freeze, getBlankNodeId, getBlankNodeValue, getLocalNodeIri, getLocalNodeName, isBlankNodeId, isLocalNodeIri, localNodeSkolemPrefix };\n","import { DataFactory } from './rdfjs.internal.mjs';\nimport { internal_toIriString } from './interfaces.internal.mjs';\nimport { isLocalNodeIri, getLocalNodeName } from './rdf.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * IRIs of the XML Schema data types we support\r\n */\r\nconst xmlSchemaTypes = {\r\n    boolean: \"http://www.w3.org/2001/XMLSchema#boolean\",\r\n    dateTime: \"http://www.w3.org/2001/XMLSchema#dateTime\",\r\n    date: \"http://www.w3.org/2001/XMLSchema#date\",\r\n    time: \"http://www.w3.org/2001/XMLSchema#time\",\r\n    decimal: \"http://www.w3.org/2001/XMLSchema#decimal\",\r\n    integer: \"http://www.w3.org/2001/XMLSchema#integer\",\r\n    string: \"http://www.w3.org/2001/XMLSchema#string\",\r\n    langString: \"http://www.w3.org/1999/02/22-rdf-syntax-ns#langString\",\r\n};\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\r\n */\r\nfunction serializeBoolean(value) {\r\n    return value ? \"true\" : \"false\";\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized boolean, or null if the given value is not a valid serialised boolean.\r\n * @see https://www.w3.org/TR/xmlschema-2/#boolean-lexical-representation\r\n */\r\nfunction deserializeBoolean(value) {\r\n    if (value === \"true\" || value === \"1\") {\r\n        return true;\r\n    }\r\n    else if (value === \"false\" || value === \"0\") {\r\n        return false;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value` in UTC.\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction serializeTime(value) {\r\n    let millisecondString;\r\n    let timezoneString;\r\n    if (value.millisecond) {\r\n        if (value.millisecond < 10) {\r\n            millisecondString = \"00\" + value.millisecond;\r\n        }\r\n        else if (value.millisecond < 100) {\r\n            millisecondString = \"0\" + value.millisecond;\r\n        }\r\n        else {\r\n            millisecondString = value.millisecond;\r\n        }\r\n    }\r\n    if (typeof value.timezoneHourOffset === \"number\") {\r\n        const timezoneFormatted = Math.abs(value.timezoneHourOffset) < 10\r\n            ? \"0\" + Math.abs(value.timezoneHourOffset)\r\n            : Math.abs(value.timezoneHourOffset);\r\n        timezoneString =\r\n            value.timezoneHourOffset >= 0\r\n                ? \"+\" + timezoneFormatted\r\n                : \"-\" + timezoneFormatted;\r\n        if (value.timezoneMinuteOffset) {\r\n            timezoneString =\r\n                timezoneString +\r\n                    \":\" +\r\n                    (value.timezoneMinuteOffset < 10\r\n                        ? \"0\" + value.timezoneMinuteOffset\r\n                        : value.timezoneMinuteOffset);\r\n        }\r\n        else {\r\n            timezoneString = timezoneString + \":00\";\r\n        }\r\n    }\r\n    return ((value.hour < 10 ? \"0\" + value.hour : value.hour) +\r\n        \":\" +\r\n        (value.minute < 10 ? \"0\" + value.minute : value.minute) +\r\n        \":\" +\r\n        (value.second < 10 ? \"0\" + value.second : value.second) +\r\n        (value.millisecond ? \".\" + millisecondString : \"\") +\r\n        (timezoneString ? timezoneString : \"\"));\r\n}\r\n/**\r\n * @internal\r\n * @param literalString Value to deserialise.\r\n * @returns Deserialized time, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction deserializeTime(literalString) {\r\n    // Time in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n    // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\r\n    //                  Example: \"13:37:42\".\r\n    // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\r\n    //            Example: \".1337\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const timeRegEx = /\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!timeRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const [timeString, timezoneString] = splitTimeFromTimezone(literalString);\r\n    const [hourString, minuteString, timeRest] = timeString.split(\":\");\r\n    let utcHours = Number.parseInt(hourString, 10);\r\n    let utcMinutes = Number.parseInt(minuteString, 10);\r\n    const [secondString, optionalMillisecondString] = timeRest.split(\".\");\r\n    const utcSeconds = Number.parseInt(secondString, 10);\r\n    const utcMilliseconds = optionalMillisecondString\r\n        ? Number.parseInt(optionalMillisecondString, 10)\r\n        : undefined;\r\n    if (utcMinutes >= 60) {\r\n        utcHours = utcHours + 1;\r\n        utcMinutes = utcMinutes - 60;\r\n    }\r\n    const deserializedTime = {\r\n        hour: utcHours,\r\n        minute: utcMinutes,\r\n        second: utcSeconds,\r\n    };\r\n    if (typeof utcMilliseconds === \"number\") {\r\n        deserializedTime.millisecond = utcMilliseconds;\r\n    }\r\n    if (typeof timezoneString === \"string\") {\r\n        const [hourOffset, minuteOffset] = getTimezoneOffsets(timezoneString);\r\n        if (typeof hourOffset !== \"number\" ||\r\n            hourOffset > 24 ||\r\n            typeof minuteOffset !== \"number\" ||\r\n            minuteOffset > 59) {\r\n            return null;\r\n        }\r\n        deserializedTime.timezoneHourOffset = hourOffset;\r\n        deserializedTime.timezoneMinuteOffset = minuteOffset;\r\n    }\r\n    return deserializedTime;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n */\r\nfunction serializeDatetime(value) {\r\n    // Although the XML Schema DateTime is not _exactly_ an ISO 8601 string\r\n    // (see https://www.w3.org/TR/xmlschema-2/#deviantformats),\r\n    // the deviations only affect the parsing, not the serialisation.\r\n    // Therefore, we can just use .toISOString():\r\n    return value.toISOString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n */\r\nfunction deserializeDatetime(literalString) {\r\n    // DateTime in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#dateTime-lexical-representation\r\n    // (without constraints on the value).\r\n    // -? - An optional leading `-`.\r\n    // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\r\n    // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\r\n    //             separated by a `-`. Example: \"11-03\".\r\n    // T - The letter T, separating the date from the time.\r\n    // \\d\\d:\\d\\d:\\d\\d - Two digits for the hour, minute and second, respectively, separated by a `:`.\r\n    //                  Example: \"13:37:42\".\r\n    // (\\.\\d+)? - Optionally a `.` followed by one or more digits representing milliseconds.\r\n    //            Example: \".1337\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - The letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const datetimeRegEx = /-?\\d{4,}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!datetimeRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const [signedDateString, rest] = literalString.split(\"T\");\r\n    // The date string can optionally be prefixed with `-`,\r\n    // in which case the year is negative:\r\n    const [yearMultiplier, dateString] = signedDateString.charAt(0) === \"-\"\r\n        ? [-1, signedDateString.substring(1)]\r\n        : [1, signedDateString];\r\n    const [yearString, monthString, dayString] = dateString.split(\"-\");\r\n    const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\r\n    const utcMonth = Number.parseInt(monthString, 10) - 1;\r\n    const utcDate = Number.parseInt(dayString, 10);\r\n    const [timeString, timezoneString] = splitTimeFromTimezone(rest);\r\n    const [hourOffset, minuteOffset] = typeof timezoneString === \"string\"\r\n        ? getTimezoneOffsets(timezoneString)\r\n        : [0, 0];\r\n    const [hourString, minuteString, timeRest] = timeString.split(\":\");\r\n    const utcHours = Number.parseInt(hourString, 10) + hourOffset;\r\n    const utcMinutes = Number.parseInt(minuteString, 10) + minuteOffset;\r\n    const [secondString, optionalMillisecondString] = timeRest.split(\".\");\r\n    const utcSeconds = Number.parseInt(secondString, 10);\r\n    const utcMilliseconds = optionalMillisecondString\r\n        ? Number.parseInt(optionalMillisecondString, 10)\r\n        : 0;\r\n    const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, utcHours, utcMinutes, utcSeconds, utcMilliseconds));\r\n    // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\r\n    // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\r\n    // See\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\r\n    if (utcFullYear >= 0 && utcFullYear < 100) {\r\n        // Note that we base it on the calculated year, rather than the year that was actually read.\r\n        // This is because the year might actually differ from the value listed in the serialisation,\r\n        // i.e. when moving the timezone offset to UTC pushes it into a different year:\r\n        date.setUTCFullYear(date.getUTCFullYear() - 1900);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n */\r\nfunction serializeDate(value) {\r\n    const year = value.getFullYear();\r\n    const month = value.getMonth() + 1;\r\n    const day = value.getDate();\r\n    const [_, timezone] = splitTimeFromTimezone(value.toISOString());\r\n    return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}${timezone}`;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized datetime, or null if the given value is not a valid serialised datetime.\r\n * @see https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n */\r\nfunction deserializeDate(literalString) {\r\n    // Date in the format described at\r\n    // https://www.w3.org/TR/xmlschema-2/#date-lexical-representation\r\n    // (without constraints on the value).\r\n    // -? - An optional leading `-`.\r\n    // \\d{4,}- - Four or more digits followed by a `-` representing the year. Example: \"3000-\".\r\n    // \\d\\d-\\d\\d - Two digits representing the month and two representing the day of the month,\r\n    //             separated by a `-`. Example: \"11-03\".\r\n    // (Z|(\\+|-)\\d\\d:\\d\\d) - Optionally, the letter Z indicating UTC, or a `+` or `-` followed by two digits for\r\n    //                       the hour offset and two for the minute offset, separated by a `:`.\r\n    //                       Example: \"+13:37\".\r\n    const dateRegEx = /-?\\d{4,}-\\d\\d-\\d\\d(Z|(\\+|-)\\d\\d:\\d\\d)?/;\r\n    if (!dateRegEx.test(literalString)) {\r\n        return null;\r\n    }\r\n    const signedDateString = literalString;\r\n    // The date string can optionally be prefixed with `-`,\r\n    // in which case the year is negative:\r\n    const [yearMultiplier, dateString] = signedDateString.charAt(0) === \"-\"\r\n        ? [-1, signedDateString.substring(1)]\r\n        : [1, signedDateString];\r\n    const [yearString, monthString, dayAndTimezoneString] = dateString.split(\"-\");\r\n    const dayString = dayAndTimezoneString.length > 2\r\n        ? dayAndTimezoneString.substring(0, 2)\r\n        : dayAndTimezoneString;\r\n    const utcFullYear = Number.parseInt(yearString, 10) * yearMultiplier;\r\n    const utcMonth = Number.parseInt(monthString, 10) - 1;\r\n    const utcDate = Number.parseInt(dayString, 10);\r\n    const hour = 12;\r\n    // setting at 12:00 avoids all timezones\r\n    const date = new Date(Date.UTC(utcFullYear, utcMonth, utcDate, hour));\r\n    // For the year, values from 0 to 99 map to the years 1900 to 1999. Since the serialisation\r\n    // always writes out the years fully, we should correct this to actually map to the years 0 to 99.\r\n    // See\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/Date#Individual_date_and_time_component_values\r\n    if (utcFullYear >= 0 && utcFullYear < 100) {\r\n        date.setUTCFullYear(date.getUTCFullYear() - 1900);\r\n    }\r\n    return date;\r\n}\r\n/**\r\n * @param timeString An XML Schema time string.\r\n * @returns A tuple [timeString, timezoneString].\r\n * @see https://www.w3.org/TR/xmlschema-2/#time-lexical-repr\r\n */\r\nfunction splitTimeFromTimezone(timeString) {\r\n    if (timeString.endsWith(\"Z\")) {\r\n        return [timeString.substring(0, timeString.length - 1), \"Z\"];\r\n    }\r\n    const splitOnPlus = timeString.split(\"+\");\r\n    const splitOnMinus = timeString.split(\"-\");\r\n    if (splitOnPlus.length === 1 && splitOnMinus.length === 1) {\r\n        return [splitOnPlus[0], undefined];\r\n    }\r\n    return splitOnPlus.length > splitOnMinus.length\r\n        ? [splitOnPlus[0], \"+\" + splitOnPlus[1]]\r\n        : [splitOnMinus[0], \"-\" + splitOnMinus[1]];\r\n}\r\n/**\r\n * @param timezoneString Lexical representation of a time zone in XML Schema.\r\n * @returns A tuple of the hour and minute offset of the time zone.\r\n * @see https://www.w3.org/TR/xmlschema-2/#dateTime-timezones\r\n */\r\nfunction getTimezoneOffsets(timezoneString) {\r\n    if (timezoneString === \"Z\") {\r\n        return [0, 0];\r\n    }\r\n    const multiplier = timezoneString.charAt(0) === \"+\" ? 1 : -1;\r\n    const [hourString, minuteString] = timezoneString.substring(1).split(\":\");\r\n    const hours = Number.parseInt(hourString, 10);\r\n    const minutes = Number.parseInt(minuteString, 10);\r\n    return [hours * multiplier, minutes * multiplier];\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\r\n */\r\nfunction serializeDecimal(value) {\r\n    return value.toString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized decimal, or null if the given value is not a valid serialised decimal.\r\n * @see https://www.w3.org/TR/xmlschema-2/#decimal-lexical-representation\r\n */\r\nfunction deserializeDecimal(literalString) {\r\n    const deserialized = Number.parseFloat(literalString);\r\n    if (Number.isNaN(deserialized)) {\r\n        return null;\r\n    }\r\n    return deserialized;\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to serialise.\r\n * @returns String representation of `value`.\r\n */\r\nfunction serializeInteger(value) {\r\n    return value.toString();\r\n}\r\n/**\r\n * @internal\r\n * @param value Value to deserialise.\r\n * @returns Deserialized integer, or null if the given value is not a valid serialised integer.\r\n */\r\nfunction deserializeInteger(literalString) {\r\n    const deserialized = Number.parseInt(literalString, 10);\r\n    if (Number.isNaN(deserialized)) {\r\n        return null;\r\n    }\r\n    return deserialized;\r\n}\r\n/**\r\n * @internal\r\n * @param locale Locale to transform into a consistent format.\r\n */\r\nfunction normalizeLocale(locale) {\r\n    return locale.toLowerCase();\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw NamedNodes.\r\n * @param value The value that might or might not be a Named Node.\r\n * @returns Whether `value` is a Named Node.\r\n */\r\nfunction isNamedNode(value) {\r\n    return isTerm(value) && value.termType === \"NamedNode\";\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw Literals.\r\n * @param value The value that might or might not be a Literal.\r\n * @returns Whether `value` is a Literal.\r\n */\r\nfunction isLiteral(value) {\r\n    return isTerm(value) && value.termType === \"Literal\";\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to raw Terms.\r\n * @param value The value that might or might not be a Term.\r\n * @returns Whether `value` is a Term.\r\n */\r\nfunction isTerm(value) {\r\n    return (value !== null &&\r\n        typeof value === \"object\" &&\r\n        typeof value.termType === \"string\" &&\r\n        typeof value.value === \"string\" &&\r\n        typeof value.equals === \"function\");\r\n}\r\n/**\r\n * @internal Library users shouldn't need to be exposed to LocalNodes.\r\n * @param value The value that might or might not be a Node with no known IRI yet.\r\n * @returns Whether `value` is a Node with no known IRI yet.\r\n */\r\nfunction isLocalNode(value) {\r\n    return isNamedNode(value) && isLocalNodeIri(value.value);\r\n}\r\n/**\r\n * Ensure that a given value is a valid URL.\r\n *\r\n * @internal Library users shouldn't need to be exposed to raw URLs.\r\n * @param iri The value of which to verify that it is a valid URL.\r\n */\r\nfunction internal_isValidUrl(iri) {\r\n    const iriString = internal_toIriString(iri);\r\n    // If the runtime environment supports URL, instantiate one.\r\n    // If the given IRI is not a valid URL, it will throw an error.\r\n    // See: https://developer.mozilla.org/en-US/docs/Web/API/URL\r\n    /* istanbul ignore if [URL is available in our testing environment, so we cannot test the alternative] */\r\n    if (typeof URL !== \"function\") {\r\n        // If we can't validate the URL, do not throw an error:\r\n        return true;\r\n    }\r\n    try {\r\n        new URL(iriString);\r\n    }\r\n    catch (_a) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @internal Utility method; library users should not need to interact with LocalNodes directly.\r\n * @param localNode The LocalNode to resolve to a NamedNode.\r\n * @param resourceIri The Resource in which the Node will be saved.\r\n */\r\nfunction resolveIriForLocalNode(localNode, resourceIri) {\r\n    return DataFactory.namedNode(resolveLocalIri(getLocalNodeName(localNode.value), resourceIri));\r\n}\r\n/**\r\n * @internal API for internal use only.\r\n * @param name The name identifying a Thing.\r\n * @param resourceIri The Resource in which the Thing can be found.\r\n */\r\nfunction resolveLocalIri(name, resourceIri) {\r\n    /* istanbul ignore if [The URL interface is available in the testing environment, so we cannot test this] */\r\n    if (typeof URL !== \"function\") {\r\n        throw new Error(\"The URL interface is not available, so an IRI cannot be determined.\");\r\n    }\r\n    const thingIri = new URL(resourceIri);\r\n    thingIri.hash = name;\r\n    return thingIri.href;\r\n}\n\nexport { deserializeBoolean, deserializeDate, deserializeDatetime, deserializeDecimal, deserializeInteger, deserializeTime, internal_isValidUrl, isLiteral, isLocalNode, isNamedNode, isTerm, normalizeLocale, resolveIriForLocalNode, resolveLocalIri, serializeBoolean, serializeDate, serializeDatetime, serializeDecimal, serializeInteger, serializeTime, xmlSchemaTypes };\n","import RdfJsDataFactory from '@rdfjs/data-model';\nimport { freeze, getBlankNodeId, isBlankNodeId, getBlankNodeValue } from './rdf.internal.mjs';\nimport { xmlSchemaTypes } from './datatypes.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nconst DataFactory = RdfJsDataFactory;\r\nfunction addRdfJsQuadToDataset(dataset, quad, quadParseOptions = {}) {\r\n    var _a;\r\n    const supportedGraphTypes = [\r\n        \"NamedNode\",\r\n        \"DefaultGraph\",\r\n    ];\r\n    if (!supportedGraphTypes.includes(quad.graph.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.graph.termType}] as their Graph node.`);\r\n    }\r\n    const graphId = quad.graph.termType === \"DefaultGraph\" ? \"default\" : quad.graph.value;\r\n    const graph = (_a = dataset.graphs[graphId]) !== null && _a !== void 0 ? _a : {};\r\n    return freeze(Object.assign(Object.assign({}, dataset), { graphs: freeze(Object.assign(Object.assign({}, dataset.graphs), { [graphId]: addRdfJsQuadToGraph(graph, quad, quadParseOptions) })) }));\r\n}\r\nfunction addRdfJsQuadToGraph(graph, quad, quadParseOptions) {\r\n    var _a;\r\n    const supportedSubjectTypes = [\r\n        \"NamedNode\",\r\n        \"BlankNode\",\r\n    ];\r\n    if (!supportedSubjectTypes.includes(quad.subject.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.subject.termType}] as their Subject node.`);\r\n    }\r\n    const subjectIri = quad.subject.termType === \"BlankNode\"\r\n        ? `_:${quad.subject.value}`\r\n        : quad.subject.value;\r\n    const subject = (_a = graph[subjectIri]) !== null && _a !== void 0 ? _a : {\r\n        type: \"Subject\",\r\n        url: subjectIri,\r\n        predicates: {},\r\n    };\r\n    return freeze(Object.assign(Object.assign({}, graph), { [subjectIri]: addRdfJsQuadToSubject(subject, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToSubject(subject, quad, quadParseOptions) {\r\n    return freeze(Object.assign(Object.assign({}, subject), { predicates: addRdfJsQuadToPredicates(subject.predicates, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToPredicates(predicates, quad, quadParseOptions) {\r\n    var _a;\r\n    const supportedPredicateTypes = [\r\n        \"NamedNode\",\r\n    ];\r\n    if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n        throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n    }\r\n    const predicateIri = quad.predicate.value;\r\n    const objects = (_a = predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    return freeze(Object.assign(Object.assign({}, predicates), { [predicateIri]: addRdfJsQuadToObjects(objects, quad, quadParseOptions) }));\r\n}\r\nfunction addRdfJsQuadToObjects(objects, quad, quadParseOptions) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    if (quad.object.termType === \"NamedNode\") {\r\n        const namedNodes = freeze([\r\n            ...((_a = objects.namedNodes) !== null && _a !== void 0 ? _a : []),\r\n            quad.object.value,\r\n        ]);\r\n        return freeze(Object.assign(Object.assign({}, objects), { namedNodes: namedNodes }));\r\n    }\r\n    if (quad.object.termType === \"Literal\") {\r\n        if (quad.object.datatype.value === xmlSchemaTypes.langString) {\r\n            const locale = quad.object.language.toLowerCase();\r\n            const thisLocaleStrings = freeze([\r\n                ...((_c = (_b = objects.langStrings) === null || _b === void 0 ? void 0 : _b[locale]) !== null && _c !== void 0 ? _c : []),\r\n                quad.object.value,\r\n            ]);\r\n            const langStrings = freeze(Object.assign(Object.assign({}, ((_d = objects.langStrings) !== null && _d !== void 0 ? _d : {})), { [locale]: thisLocaleStrings }));\r\n            return freeze(Object.assign(Object.assign({}, objects), { langStrings: langStrings }));\r\n        }\r\n        // If the Object is a non-langString Literal\r\n        const thisTypeValues = freeze([\r\n            ...((_f = (_e = objects.literals) === null || _e === void 0 ? void 0 : _e[quad.object.datatype.value]) !== null && _f !== void 0 ? _f : []),\r\n            quad.object.value,\r\n        ]);\r\n        const literals = freeze(Object.assign(Object.assign({}, ((_g = objects.literals) !== null && _g !== void 0 ? _g : {})), { [quad.object.datatype.value]: thisTypeValues }));\r\n        return freeze(Object.assign(Object.assign({}, objects), { literals: literals }));\r\n    }\r\n    if (quad.object.termType === \"BlankNode\") {\r\n        const blankNodePredicates = getPredicatesForBlankNode(quad.object, quadParseOptions);\r\n        const blankNodes = freeze([\r\n            ...((_h = objects.blankNodes) !== null && _h !== void 0 ? _h : []),\r\n            blankNodePredicates,\r\n        ]);\r\n        return freeze(Object.assign(Object.assign({}, objects), { blankNodes: blankNodes }));\r\n    }\r\n    throw new Error(`Objects of type [${quad.object.termType}] are not supported.`);\r\n}\r\nfunction getPredicatesForBlankNode(node, quadParseOptions) {\r\n    var _a, _b;\r\n    const chainBlankNodes = (_a = quadParseOptions.chainBlankNodes) !== null && _a !== void 0 ? _a : [];\r\n    if (chainBlankNodes.find((chainBlankNode) => chainBlankNode.equals(node)) ===\r\n        undefined) {\r\n        // If this Blank Node is not used to provide nested values for another Subject,\r\n        // just return its identifier.\r\n        // That identifier will also be listed among the Subjects in the Graph.\r\n        return getBlankNodeId(node);\r\n    }\r\n    /* istanbul ignore next: If there are chain nodes, there will always be other Quads, so the `?? []` can't be reached: */\r\n    const quads = (_b = quadParseOptions.otherQuads) !== null && _b !== void 0 ? _b : [];\r\n    const quadsWithNodeAsSubject = quads.filter((quad) => quad.subject.equals(node));\r\n    // First add the Quads with regular Objects\r\n    const predicates = quadsWithNodeAsSubject\r\n        .filter((quad) => !isBlankNode(quad.object))\r\n        .reduce((predicatesAcc, quad) => {\r\n        var _a;\r\n        const supportedPredicateTypes = [\r\n            \"NamedNode\",\r\n        ];\r\n        if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n            throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n        }\r\n        const objects = (_a = predicatesAcc[quad.predicate.value]) !== null && _a !== void 0 ? _a : {};\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { [quad.predicate.value]: addRdfJsQuadToObjects(objects, quad, quadParseOptions) }));\r\n    }, {});\r\n    // And then also add the Quads that have another Blank Node as the Object\r\n    // in addition to the Blank Node `node` as the Subject:\r\n    const blankNodeObjectQuads = quadsWithNodeAsSubject.filter((quad) => isBlankNode(quad.object));\r\n    return blankNodeObjectQuads.reduce((predicatesAcc, quad) => {\r\n        var _a, _b;\r\n        const supportedPredicateTypes = [\r\n            \"NamedNode\",\r\n        ];\r\n        if (!supportedPredicateTypes.includes(quad.predicate.termType)) {\r\n            throw new Error(`Cannot parse Quads with nodes of type [${quad.predicate.termType}] as their Predicate node.`);\r\n        }\r\n        /* istanbul ignore next: The `?? {}` doesn't get hit; presumably it's initialised above. */\r\n        const objects = (_a = predicatesAcc[quad.predicate.value]) !== null && _a !== void 0 ? _a : {};\r\n        /* istanbul ignore next: The `?? []` doesn't get hit; presumably it's initialised above. */\r\n        const blankNodes = (_b = objects.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { \r\n            // The BlankNode assertions are valid because we filtered on BlankNodes above:\r\n            [quad.predicate.value]: Object.assign(Object.assign({}, objects), { blankNodes: [\r\n                    ...blankNodes,\r\n                    getPredicatesForBlankNode(quad.object, quadParseOptions),\r\n                ] }) }));\r\n    }, predicates);\r\n}\r\n/**\r\n * Given an array of Quads, returns all Blank Nodes that are used in a single chain of Nodes.\r\n *\r\n * This allows you to obtain which Blank Nodes are involved in e.g. RDF lists.\r\n * This is useful because those can be represented as nested data that will have\r\n * a deterministic structure, whereas a representation of Blank Nodes that\r\n * create a cycle or are re-used will need ad-hoc, non-deterministic identifiers\r\n * to allow for representation without inifinite nesting.\r\n */\r\nfunction getChainBlankNodes(quads) {\r\n    // All Blank Nodes that occur in Subject position:\r\n    const blankNodeSubjects = quads\r\n        .map((quad) => quad.subject)\r\n        .filter(isBlankNode);\r\n    // All Blank Nodes that occur in Object position:\r\n    const blankNodeObjects = quads.map((quad) => quad.object).filter(isBlankNode);\r\n    // Makes sure that all given Nodes are the same,\r\n    // which will be used to verify that a set of Quads all have the same Subject:\r\n    function everyNodeTheSame(nodes) {\r\n        // This could potentially be made more performant by mapping every term\r\n        // to their value and using native JS comparisons, assuming every node is\r\n        // either a Blank or a Named Node.\r\n        return nodes.every((otherNode) => nodes.every((anotherNode) => otherNode.equals(anotherNode)));\r\n    }\r\n    // Get all Blank Nodes that are part of a cycle in the graph:\r\n    const cycleBlankNodes = [];\r\n    blankNodeObjects.forEach((blankNodeObject) => {\r\n        cycleBlankNodes.push(...getCycleBlankNodes(blankNodeObject, quads));\r\n    });\r\n    // Get Blank Nodes that are used to provide nested values for a single Subject,\r\n    // which we'll represent as nested values as well\r\n    // (this allows us to avoid generating a non-deterministic, ad-hoc identifier\r\n    // for those Blank Nodes).\r\n    // We'll do this by taking all Blank Nodes in the given Quads...\r\n    const chainBlankNodes = blankNodeSubjects\r\n        .concat(blankNodeObjects)\r\n        .filter((blankNode) => {\r\n        // ....removing those Blank Nodes that are part of a cycle...\r\n        if (cycleBlankNodes.some((cycleBlankNode) => cycleBlankNode.equals(blankNode))) {\r\n            return false;\r\n        }\r\n        // ...and then returning only those Blank Nodes that only occur in the\r\n        // Object position for a single Subject, i.e. that are part of a single\r\n        // chain:\r\n        const subjectsWithThisNodeAsObject = quads\r\n            .filter((quad) => quad.object.equals(blankNode))\r\n            .map((quad) => quad.subject);\r\n        return (subjectsWithThisNodeAsObject.length > 0 &&\r\n            everyNodeTheSame(subjectsWithThisNodeAsObject));\r\n    });\r\n    return chainBlankNodes;\r\n}\r\nfunction toRdfJsQuads(dataset, options = {}) {\r\n    var _a;\r\n    const quads = [];\r\n    const dataFactory = (_a = options.dataFactory) !== null && _a !== void 0 ? _a : RdfJsDataFactory;\r\n    Object.keys(dataset.graphs).forEach((graphIri) => {\r\n        const graph = dataset.graphs[graphIri];\r\n        const graphNode = graphIri === \"default\"\r\n            ? dataFactory.defaultGraph()\r\n            : dataFactory.namedNode(graphIri);\r\n        Object.keys(graph).forEach((subjectIri) => {\r\n            const predicates = graph[subjectIri].predicates;\r\n            const subjectNode = isBlankNodeId(subjectIri)\r\n                ? dataFactory.blankNode(getBlankNodeValue(subjectIri))\r\n                : dataFactory.namedNode(subjectIri);\r\n            quads.push(...subjectToRdfJsQuads(predicates, subjectNode, graphNode, options));\r\n        });\r\n    });\r\n    return quads;\r\n}\r\nfunction subjectToRdfJsQuads(predicates, subjectNode, graphNode, options = {}) {\r\n    var _a;\r\n    const quads = [];\r\n    const dataFactory = (_a = options.dataFactory) !== null && _a !== void 0 ? _a : RdfJsDataFactory;\r\n    Object.keys(predicates).forEach((predicateIri) => {\r\n        var _a, _b, _c, _d;\r\n        const predicateNode = dataFactory.namedNode(predicateIri);\r\n        const langStrings = (_a = predicates[predicateIri].langStrings) !== null && _a !== void 0 ? _a : {};\r\n        const namedNodes = (_b = predicates[predicateIri].namedNodes) !== null && _b !== void 0 ? _b : [];\r\n        const literals = (_c = predicates[predicateIri].literals) !== null && _c !== void 0 ? _c : {};\r\n        const blankNodes = (_d = predicates[predicateIri].blankNodes) !== null && _d !== void 0 ? _d : [];\r\n        const literalTypes = Object.keys(literals);\r\n        literalTypes.forEach((typeIri) => {\r\n            const typeNode = dataFactory.namedNode(typeIri);\r\n            const literalValues = literals[typeIri];\r\n            literalValues.forEach((value) => {\r\n                const literalNode = dataFactory.literal(value, typeNode);\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, literalNode, graphNode));\r\n            });\r\n        });\r\n        const locales = Object.keys(langStrings);\r\n        locales.forEach((locale) => {\r\n            const localeValues = langStrings[locale];\r\n            localeValues.forEach((value) => {\r\n                const langStringNode = dataFactory.literal(value, locale);\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, langStringNode, graphNode));\r\n            });\r\n        });\r\n        namedNodes.forEach((namedNodeIri) => {\r\n            const node = dataFactory.namedNode(namedNodeIri);\r\n            quads.push(dataFactory.quad(subjectNode, predicateNode, node, graphNode));\r\n        });\r\n        blankNodes.forEach((blankNodeIdOrPredicates) => {\r\n            if (isBlankNodeId(blankNodeIdOrPredicates)) {\r\n                const blankNode = dataFactory.blankNode(getBlankNodeValue(blankNodeIdOrPredicates));\r\n                quads.push(dataFactory.quad(subjectNode, predicateNode, blankNode, graphNode));\r\n            }\r\n            else {\r\n                const node = dataFactory.blankNode();\r\n                const blankNodeObjectQuad = dataFactory.quad(subjectNode, predicateNode, node, graphNode);\r\n                const blankNodeSubjectQuads = subjectToRdfJsQuads(blankNodeIdOrPredicates, node, graphNode);\r\n                quads.push(blankNodeObjectQuad);\r\n                quads.push(...blankNodeSubjectQuads);\r\n            }\r\n        });\r\n    });\r\n    return quads;\r\n}\r\n/**\r\n * A recursive function that finds all Blank Nodes in an array of Quads that create a cycle in the graph.\r\n *\r\n * This function will traverse the graph starting from `currentNode`, keeping\r\n * track of all the Blank Nodes it encounters twice while doing so, and\r\n * returning those.\r\n */\r\nfunction getCycleBlankNodes(currentNode, quads, traversedBlankNodes = []) {\r\n    // If we've encountered `currentNode` before, all the Blank Nodes we've\r\n    // encountered so far are part of a cycle. Return those.\r\n    if (traversedBlankNodes.find((traversedBlankNode) => traversedBlankNode.equals(currentNode)) !== undefined) {\r\n        return traversedBlankNodes;\r\n    }\r\n    // Find all Blank Nodes that are connected to `currentNode`:\r\n    const blankNodeObjects = quads\r\n        .filter((quad) => quad.subject.equals(currentNode) && isBlankNode(quad.object))\r\n        .map((quad) => quad.object);\r\n    // If no Blank Nodes are connected to `currentNode`, and `currentNode` is not\r\n    // part of a cycle, we're done; the currently traversed Nodes do not form a\r\n    // cycle:\r\n    if (blankNodeObjects.length === 0) {\r\n        return [];\r\n    }\r\n    // Store that we've traversed `currentNode`, then move on to all the Blank\r\n    // Nodes connected to it, which will then take up the role of `currentNode`:\r\n    const nextTraversedNodes = [...traversedBlankNodes, currentNode];\r\n    const cycleBlankNodeArrays = blankNodeObjects.map((nextNode) => getCycleBlankNodes(nextNode, quads, nextTraversedNodes));\r\n    // Collect all the cycle Blank Nodes found in those traverals,\r\n    // then return them:\r\n    const allCycleBlankNodes = [];\r\n    for (const cycleBlankNodes of cycleBlankNodeArrays) {\r\n        allCycleBlankNodes.push(...cycleBlankNodes);\r\n    }\r\n    return allCycleBlankNodes;\r\n}\r\nfunction isBlankNode(term) {\r\n    return term.termType === \"BlankNode\";\r\n}\n\nexport { DataFactory, addRdfJsQuadToDataset, getChainBlankNodes, subjectToRdfJsQuads, toRdfJsQuads };\n","import { DataFactory } from '../rdfjs.internal.mjs';\nimport { getSourceUrl } from '../resource/resource.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even\r\n * in a non-major release.\r\n * ```\r\n * This returns a parser that transforms a JSON-LD string into a set of RDFJS quads.\r\n *\r\n * @returns A Parser object.\r\n * @since 1.15.0\r\n */\r\nconst getTurtleParser = () => {\r\n    const onQuadCallbacks = [];\r\n    const onCompleteCallbacks = [];\r\n    const onErrorCallbacks = [];\r\n    return {\r\n        onQuad: (callback) => {\r\n            onQuadCallbacks.push(callback);\r\n        },\r\n        onError: (callback) => {\r\n            onErrorCallbacks.push(callback);\r\n        },\r\n        onComplete: (callback) => {\r\n            onCompleteCallbacks.push(callback);\r\n        },\r\n        parse: async (source, resourceInfo) => {\r\n            const parser = await getParser(getSourceUrl(resourceInfo));\r\n            parser.parse(source, (error, quad, _prefixes) => {\r\n                if (error) {\r\n                    onErrorCallbacks.forEach((callback) => callback(error));\r\n                }\r\n                else if (quad) {\r\n                    onQuadCallbacks.forEach((callback) => callback(quad));\r\n                }\r\n                else {\r\n                    onCompleteCallbacks.forEach((callback) => callback());\r\n                }\r\n            });\r\n        },\r\n    };\r\n};\r\nasync function getParser(baseIri) {\r\n    const n3 = await loadN3();\r\n    return new n3.Parser({ format: \"text/turtle\", baseIRI: baseIri });\r\n}\r\n/**\r\n * @param quads Triples that should be serialised to Turtle\r\n * @internal Utility method for internal use; not part of the public API.\r\n */\r\nasync function triplesToTurtle(quads) {\r\n    const n3 = await loadN3();\r\n    const format = \"text/turtle\";\r\n    const writer = new n3.Writer({ format: format });\r\n    // Remove any potentially lingering references to Named Graphs in Quads;\r\n    // they'll be determined by the URL the Turtle will be sent to:\r\n    const triples = quads.map((quad) => DataFactory.quad(quad.subject, quad.predicate, quad.object, undefined));\r\n    writer.addQuads(triples);\r\n    const writePromise = new Promise((resolve, reject) => {\r\n        writer.end((error, result) => {\r\n            /* istanbul ignore if [n3.js doesn't actually pass an error nor a result, apparently: https://github.com/rdfjs/N3.js/blob/62682e48c02d8965b4d728cb5f2cbec6b5d1b1b8/src/N3Writer.js#L290] */\r\n            if (error) {\r\n                return reject(error);\r\n            }\r\n            resolve(result);\r\n        });\r\n    });\r\n    const rawTurtle = await writePromise;\r\n    return rawTurtle;\r\n}\r\nasync function loadN3() {\r\n    // When loaded via Webpack or another bundler that looks at the `modules` field in package.json,\r\n    // N3 serves up ES modules with named exports.\r\n    // However, when it is loaded in Node, it serves up a CommonJS module, which, when imported from\r\n    // a Node ES module, is in the shape of a default export that is an object with all the named\r\n    // exports as its properties.\r\n    // This means that if we were to import the default module, our code would fail in Webpack,\r\n    // whereas if we imported the named exports, our code would fail in Node.\r\n    // As a workaround, we use a dynamic import. This way, we can use the same syntax in every\r\n    // environment, where the differences between the environments are in whether the returned object\r\n    // includes a `default` property that contains all exported functions, or whether those functions\r\n    // are available on the returned object directly. We can then respond to those different\r\n    // situations at runtime.\r\n    // Unfortunately, that does mean that tree shaking will not work until N3 also provides ES modules\r\n    // for Node, or adds a default export for Webpack. See\r\n    // https://github.com/rdfjs/N3.js/issues/196\r\n    const n3Module = await import('n3');\r\n    /* istanbul ignore if: the package provides named exports in the unit test environment */\r\n    if (typeof n3Module.default !== \"undefined\") {\r\n        return n3Module.default;\r\n    }\r\n    return n3Module;\r\n}\n\nexport { getTurtleParser, triplesToTurtle };\n","import { isNamedNode, isLiteral, xmlSchemaTypes, deserializeInteger, deserializeDecimal, deserializeDatetime, deserializeBoolean } from '../datatypes.mjs';\nimport { hasChangelog } from '../interfaces.mjs';\nimport { isThing, ThingExpectedError } from './thing.mjs';\nimport { freeze } from '../rdf.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/** @hidden For internal use only. */\r\nfunction internal_getReadableValue(value) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h;\r\n    if (isNamedNode(value)) {\r\n        return `<${value.value}> (URL)`;\r\n    }\r\n    if (isLiteral(value)) {\r\n        /* istanbul ignore if: thingAsMarkdown always instantiates a NamedNode, so we can't hit this code path in tests. */\r\n        if (!isNamedNode(value.datatype)) {\r\n            return `[${value.value}] (RDF/JS Literal of unknown type)`;\r\n        }\r\n        let val;\r\n        switch (value.datatype.value) {\r\n            case xmlSchemaTypes.boolean:\r\n                val =\r\n                    (_b = (_a = deserializeBoolean(value.value)) === null || _a === void 0 ? void 0 : _a.valueOf()) !== null && _b !== void 0 ? _b : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (boolean)\";\r\n            case xmlSchemaTypes.dateTime:\r\n                val =\r\n                    (_d = (_c = deserializeDatetime(value.value)) === null || _c === void 0 ? void 0 : _c.toUTCString()) !== null && _d !== void 0 ? _d : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (datetime)\";\r\n            case xmlSchemaTypes.decimal:\r\n                val =\r\n                    (_f = (_e = deserializeDecimal(value.value)) === null || _e === void 0 ? void 0 : _e.toString()) !== null && _f !== void 0 ? _f : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (decimal)\";\r\n            case xmlSchemaTypes.integer:\r\n                val =\r\n                    (_h = (_g = deserializeInteger(value.value)) === null || _g === void 0 ? void 0 : _g.toString()) !== null && _h !== void 0 ? _h : `Invalid data: \\`${value.value}\\``;\r\n                return val + \" (integer)\";\r\n            case xmlSchemaTypes.langString:\r\n                return `\"${value.value}\" (${value.language} string)`;\r\n            case xmlSchemaTypes.string:\r\n                return `\"${value.value}\" (string)`;\r\n            default:\r\n                return `[${value.value}] (RDF/JS Literal of type: \\`${value.datatype.value}\\`)`;\r\n        }\r\n    }\r\n    /* istanbul ignore else: thingAsMarkdown doesn't generate other Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"BlankNode\") {\r\n        return `[${value.value}] (RDF/JS BlankNode)`;\r\n    }\r\n    /* istanbul ignore next: thingAsMarkdown doesn't generate Quad Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"Quad\") {\r\n        return `??? (nested RDF* Quad)`;\r\n    }\r\n    /* istanbul ignore else: The if statements are exhaustive; if not, TypeScript will complain. */\r\n    /* istanbul ignore next: thingAsMarkdown doesn't generate Variable Nodes, so we can't hit this path in tests. */\r\n    if (value.termType === \"Variable\") {\r\n        return `?${value.value} (RDF/JS Variable)`;\r\n    }\r\n    /* istanbul ignore next: The if statements are exhaustive; if not, TypeScript will complain. */\r\n    return value;\r\n}\r\n/**\r\n * @hidden\r\n */\r\nfunction internal_throwIfNotThing(thing) {\r\n    if (!isThing(thing)) {\r\n        throw new ThingExpectedError(thing);\r\n    }\r\n}\r\n/**\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_addAdditionsToChangeLog(solidDataset, additions) {\r\n    const changeLog = hasChangelog(solidDataset)\r\n        ? solidDataset.internal_changeLog\r\n        : /* istanbul ignore next: This function always gets called after addDeletionsToChangeLog, so the ChangeLog always already exists in tests: */\r\n            { additions: [], deletions: [] };\r\n    const [newAdditions, newDeletions] = additions\r\n        .filter((addition) => !containsBlankNode(addition))\r\n        .reduce(([additionsAcc, deletionsAcc], addition) => {\r\n        const existingDeletion = deletionsAcc.find((deletion) => deletion.equals(addition));\r\n        if (typeof existingDeletion !== \"undefined\") {\r\n            return [\r\n                additionsAcc,\r\n                deletionsAcc.filter((deletion) => !deletion.equals(addition)),\r\n            ];\r\n        }\r\n        return [additionsAcc.concat(addition), deletionsAcc];\r\n    }, [changeLog.additions, changeLog.deletions]);\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: {\r\n            additions: newAdditions,\r\n            deletions: newDeletions,\r\n        } }));\r\n}\r\n/**\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_addDeletionsToChangeLog(solidDataset, deletions) {\r\n    const changeLog = hasChangelog(solidDataset)\r\n        ? solidDataset.internal_changeLog\r\n        : { additions: [], deletions: [] };\r\n    const [newAdditions, newDeletions] = deletions\r\n        .filter((deletion) => !containsBlankNode(deletion))\r\n        .reduce(([additionsAcc, deletionsAcc], deletion) => {\r\n        const existingAddition = additionsAcc.find((addition) => addition.equals(deletion));\r\n        if (typeof existingAddition !== \"undefined\") {\r\n            return [\r\n                additionsAcc.filter((addition) => !addition.equals(deletion)),\r\n                deletionsAcc,\r\n            ];\r\n        }\r\n        return [additionsAcc, deletionsAcc.concat(deletion)];\r\n    }, [changeLog.additions, changeLog.deletions]);\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: {\r\n            additions: newAdditions,\r\n            deletions: newDeletions,\r\n        } }));\r\n}\r\n/**\r\n * Enforces the presence of a Changelog for a given dataset. If a changelog is\r\n * already present, it is unchanged. Otherwise, an empty changelog is created.\r\n * @hidden\r\n * @param solidDataset\r\n */\r\nfunction internal_withChangeLog(solidDataset) {\r\n    const newSolidDataset = hasChangelog(solidDataset)\r\n        ? solidDataset\r\n        : freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: { additions: [], deletions: [] } }));\r\n    return newSolidDataset;\r\n}\r\n/**\r\n * We don't currently support reading and writing Blank Nodes, so this function can be used to skip those Quads.\r\n *\r\n * This is needed because we cannot reconcile Blank Nodes in additions and\r\n * deletions. Down the road, we should do a diff before saving a SolidDataset\r\n * against a saved copy of the originally-fetched one, based on our own data\r\n * structures, which should make it easier to reconcile.\r\n */\r\nfunction containsBlankNode(quad) {\r\n    return (quad.subject.termType === \"BlankNode\" ||\r\n        quad.object.termType === \"BlankNode\");\r\n}\n\nexport { internal_addAdditionsToChangeLog, internal_addDeletionsToChangeLog, internal_getReadableValue, internal_throwIfNotThing, internal_withChangeLog };\n","import { internal_isValidUrl, deserializeBoolean, xmlSchemaTypes, deserializeDatetime, deserializeDate, deserializeTime, deserializeDecimal, deserializeInteger } from '../datatypes.mjs';\nimport { internal_throwIfNotThing } from './thing.internal.mjs';\nimport { ValidPropertyUrlExpectedError } from './thing.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { isLocalNodeIri, getLocalNodeName, isBlankNodeId, getBlankNodeValue } from '../rdf.internal.mjs';\nimport { DataFactory } from '../rdfjs.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Returns the URLs of all Properties that the given [[Thing ]]has values for.b\r\n *\r\n * @param thing The [[Thing]] of which to get that Property URLs that have a value.\r\n * @returns The URLs of the Properties for which values are defined for the given Thing.\r\n * @hidden This is an advanced API that should not be needed for most Solid use cases. If you do find yourself needing this, please file a feature request sharing your use case.\r\n */\r\nfunction getPropertyAll(thing) {\r\n    return Object.keys(thing.predicates).filter((predicate) => getTerm(thing, predicate) !== null);\r\n}\r\n/**\r\n * Returns the URL value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type URL, returns null.\r\n * If the Property has multiple URL values, returns one of its URL values.\r\n *\r\n * @param thing The [[Thing]] to read a URL value from.\r\n * @param property The Property whose URL value to return.\r\n * @returns A URL value for the given Property if present, or null if the Property is not present or the value is not of type URL.\r\n */\r\nfunction getUrl(thing, property) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateUrl = internal_toIriString(property);\r\n    const firstUrl = (_c = (_b = (_a = thing.predicates[predicateUrl]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b[0]) !== null && _c !== void 0 ? _c : null;\r\n    if (firstUrl === null) {\r\n        return null;\r\n    }\r\n    return isLocalNodeIri(firstUrl) ? `#${getLocalNodeName(firstUrl)}` : firstUrl;\r\n}\r\n/** @hidden Alias of [[getUrl]] for those who prefer IRI terminology. */\r\nconst getIri = getUrl;\r\n/**\r\n * Returns the URL values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type URL, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the URL values from.\r\n * @param property The Property whose URL values to return.\r\n * @returns An array of URL values for the given Property.\r\n */\r\nfunction getUrlAll(thing, property) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateUrl = internal_toIriString(property);\r\n    return ((_c = (_b = (_a = thing.predicates[predicateUrl]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b.map((iri) => isLocalNodeIri(iri) ? `#${getLocalNodeName(iri)}` : iri)) !== null && _c !== void 0 ? _c : []);\r\n}\r\n/** @hidden Alias of [[getUrlAll]] for those who prefer IRI terminology. */\r\nconst getIriAll = getUrlAll;\r\n/**\r\n * Returns the boolean value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type boolean, returns null.\r\n * If the Property has multiple boolean values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a boolean value from.\r\n * @param property The Property whose boolean value to return.\r\n * @returns A boolean value for the given Property if present, or null if the Property is not present or the value is not of type boolean.\r\n */\r\nfunction getBoolean(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.boolean);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeBoolean(literalString);\r\n}\r\n/**\r\n * Returns the boolean values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type boolean, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the boolean values from.\r\n * @param property The Property whose boolean values to return.\r\n * @returns An array of boolean values for the given Property.\r\n */\r\nfunction getBooleanAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.boolean);\r\n    return literalStrings\r\n        .map(deserializeBoolean)\r\n        .filter((possibleBoolean) => possibleBoolean !== null);\r\n}\r\n/**\r\n * Returns the datetime value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type datetime, returns null.\r\n * If the Property has multiple datetime values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a datetime value from.\r\n * @param property The Property whose datetime value to return.\r\n * @returns A datetime value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\r\n */\r\nfunction getDatetime(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.dateTime);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDatetime(literalString);\r\n}\r\n/**\r\n * Returns the datetime values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type datetime, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the datetime values from.\r\n * @param property The Property whose datetime values to return.\r\n * @returns An array of datetime values for the given Property.\r\n */\r\nfunction getDatetimeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.dateTime);\r\n    return literalStrings\r\n        .map(deserializeDatetime)\r\n        .filter((potentialDatetime) => potentialDatetime !== null);\r\n}\r\n/**\r\n * Returns the date value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type date, returns null.\r\n * If the Property has multiple date values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a date value from.\r\n * @param property The Property whose date value to return.\r\n * @returns A date value for the given Property if present, or null if the Property is not present or the value is not of type date.\r\n * @since 1.10.0\r\n */\r\nfunction getDate(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.date);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDate(literalString);\r\n}\r\n/**\r\n * Returns the date values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type date, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the date values from.\r\n * @param property The Property whose date values to return.\r\n * @returns An array of date values for the given Property.\r\n * @since 1.10.0\r\n */\r\nfunction getDateAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.date);\r\n    return literalStrings\r\n        .map(deserializeDate)\r\n        .filter((potentialDate) => potentialDate !== null);\r\n}\r\n/**\r\n * Returns the time value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type time, returns null.\r\n * If the Property has multiple time values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a time value from.\r\n * @param property The Property whose time value to return.\r\n * @returns A time value for the given Property if present, or null if the Property is not present or the value is not of type time.\r\n * @since 1.10.0\r\n */\r\nfunction getTime(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.time);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeTime(literalString);\r\n}\r\n/**\r\n * Returns the time values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type time, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the time values from.\r\n * @param property The Property whose time values to return.\r\n * @returns An array of time values for the given Property.\r\n * @since 1.10.0\r\n */\r\nfunction getTimeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.time);\r\n    return literalStrings\r\n        .map(deserializeTime)\r\n        .filter((potentialTime) => potentialTime !== null);\r\n}\r\n/**\r\n * Returns the decimal value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type decimal, returns null.\r\n * If the Property has multiple decimal values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a decimal value from.\r\n * @param property The Property whose decimal value to return.\r\n * @returns A decimal value for the given Property if present, or null if the Property is not present or the value is not of type decimal.\r\n */\r\nfunction getDecimal(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.decimal);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeDecimal(literalString);\r\n}\r\n/**\r\n * Returns the decimal values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type decimal, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the decimal values from.\r\n * @param property The Property whose decimal values to return.\r\n * @returns An array of decimal values for the given Property.\r\n */\r\nfunction getDecimalAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.decimal);\r\n    return literalStrings\r\n        .map((literalString) => deserializeDecimal(literalString))\r\n        .filter((potentialDecimal) => potentialDecimal !== null);\r\n}\r\n/**\r\n * Returns the integer value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type integer, returns null.\r\n * If the Property has multiple integer values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read an integer value from.\r\n * @param property The Property whose integer value to return.\r\n * @returns A integer value for the given Property if present, or null if the Property is not present or the value is not of type datetime.\r\n */\r\nfunction getInteger(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.integer);\r\n    if (literalString === null) {\r\n        return null;\r\n    }\r\n    return deserializeInteger(literalString);\r\n}\r\n/**\r\n * Returns the integer values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type integer, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the integer values from.\r\n * @param property The Property whose integer values to return.\r\n * @returns An array of integer values for the given Property.\r\n */\r\nfunction getIntegerAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.integer);\r\n    return literalStrings\r\n        .map((literalString) => deserializeInteger(literalString))\r\n        .filter((potentialInteger) => potentialInteger !== null);\r\n}\r\n/**\r\n * Returns the English (language tag \"en\") string value of the specified Property from a [[Thing]].\r\n * If the Property is not present as a string in English, returns null.\r\n * If the Property has multiple English string values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @returns An English string value for the given Property if present, or null otherwise.\r\n * @since 1.13.0\r\n */\r\nfunction getStringEnglish(thing, property) {\r\n    return getStringWithLocale(thing, property, \"en\");\r\n}\r\n/**\r\n * Returns the localized string value of the specified Property from a [[Thing]].\r\n * If the Property is not present as a string in the specified locale, returns null.\r\n * If the Property has multiple string values for the specified locale, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @param locale The desired locale for the string value.\r\n * @returns A localised string value for the given Property if present in the specified `locale`, or null otherwise.\r\n */\r\nfunction getStringWithLocale(thing, property, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingLocales = Object.keys(langStrings);\r\n    const matchingLocale = existingLocales.find((existingLocale) => existingLocale.toLowerCase() === locale.toLowerCase() &&\r\n        Array.isArray(langStrings[existingLocale]) &&\r\n        langStrings[existingLocale].length > 0);\r\n    return typeof matchingLocale === \"string\"\r\n        ? langStrings[matchingLocale][0]\r\n        : null;\r\n}\r\n/**\r\n * Returns the English (language tag \"en\") string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not an English string, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read a localised string value from.\r\n * @param property The Property whose localised string value to return.\r\n * @returns An array of English string values for the given Property.\r\n */\r\nfunction getStringEnglishAll(thing, property) {\r\n    return getStringWithLocaleAll(thing, property, \"en\");\r\n}\r\n/**\r\n * Returns the localized string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not a string of the specified locale, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the localised string values from.\r\n * @param property The Property whose localised string values to return.\r\n * @param locale The desired locale for the string values.\r\n * @returns An array of localised string values for the given Property.\r\n */\r\nfunction getStringWithLocaleAll(thing, property, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingLocales = Object.keys(langStrings);\r\n    const matchingLocale = existingLocales.find((existingLocale) => existingLocale.toLowerCase() === locale.toLowerCase() &&\r\n        Array.isArray(langStrings[existingLocale]) &&\r\n        langStrings[existingLocale].length > 0);\r\n    return typeof matchingLocale === \"string\"\r\n        ? [...langStrings[matchingLocale]]\r\n        : [];\r\n}\r\n/**\r\n * Returns all localized string values mapped by the locales for the specified property from the\r\n * specified [[Thing]] (explicitly filters out non-language string literals).\r\n *\r\n * @param thing The [[Thing]] to read the localised string values from.\r\n * @param property The Property whose localised string values to return.\r\n * @returns A Map of objects, keyed on locale with the value an array of string values (for that locale).\r\n */\r\nfunction getStringByLocaleAll(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const stringsByLocale = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    return new Map(Object.entries(stringsByLocale).map(([locale, values]) => [\r\n        locale,\r\n        [...values],\r\n    ]));\r\n}\r\n/**\r\n * Returns the string value of the specified Property from a [[Thing]].\r\n * If the Property is not present or its value is not of type string, returns null.\r\n * If the Property has multiple string values, returns one of its values.\r\n *\r\n * @param thing The [[Thing]] to read a string value from.\r\n * @param property The Property whose string value to return.\r\n * @returns A string value for the given Property if present, or null if the Property is not present or the value is not of type string.\r\n */\r\nfunction getStringNoLocale(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalString = getLiteralOfType(thing, property, xmlSchemaTypes.string);\r\n    return literalString;\r\n}\r\n/**\r\n * Returns the string values of the specified Property from a [[Thing]].\r\n * If the Property is not present, returns an empty array.\r\n * If the Property's value is not of type string, omits that value in the array.\r\n *\r\n * @param thing The [[Thing]] to read the string values from.\r\n * @param property The Property whose string values to return.\r\n * @returns An array of string values for the given Property.\r\n */\r\nfunction getStringNoLocaleAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    const literalStrings = getLiteralAllOfType(thing, property, xmlSchemaTypes.string);\r\n    return literalStrings;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a NamedNode value from.\r\n * @param property The given Property for which you want the NamedNode value.\r\n * @returns A NamedNode value for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\r\n */\r\nfunction getNamedNode(thing, property) {\r\n    const iriString = getIri(thing, property);\r\n    if (iriString === null) {\r\n        return null;\r\n    }\r\n    return DataFactory.namedNode(iriString);\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the NamedNode values from.\r\n * @param property The given Property for which you want the NamedNode values.\r\n * @returns The NamedNode values for the given Property.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#namednode-interface\r\n */\r\nfunction getNamedNodeAll(thing, property) {\r\n    const iriStrings = getIriAll(thing, property);\r\n    return iriStrings.map((iriString) => DataFactory.namedNode(iriString));\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a Literal value from.\r\n * @param property The given Property for which you want the Literal value.\r\n * @returns A Literal value for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#literal-interface\r\n */\r\nfunction getLiteral(thing, property) {\r\n    var _a, _b, _c, _d;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const locales = Object.keys(langStrings);\r\n    if (locales.length > 0) {\r\n        const nonEmptyLocale = locales.find((locale) => Array.isArray(langStrings[locale]) && langStrings[locale].length > 0);\r\n        if (typeof nonEmptyLocale === \"string\") {\r\n            return DataFactory.literal(langStrings[nonEmptyLocale][0], nonEmptyLocale);\r\n        }\r\n    }\r\n    const otherLiterals = (_d = (_c = thing.predicates[predicateIri]) === null || _c === void 0 ? void 0 : _c.literals) !== null && _d !== void 0 ? _d : {};\r\n    const dataTypes = Object.keys(otherLiterals);\r\n    if (dataTypes.length > 0) {\r\n        const nonEmptyDataType = dataTypes.find((dataType) => Array.isArray(otherLiterals[dataType]) &&\r\n            otherLiterals[dataType].length > 0);\r\n        if (typeof nonEmptyDataType === \"string\") {\r\n            return DataFactory.literal(otherLiterals[nonEmptyDataType][0], DataFactory.namedNode(nonEmptyDataType));\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the Literal values from.\r\n * @param property The given Property for which you want the Literal values.\r\n * @returns The Literal values for the given Property.\r\n * @ignore This should not be needed due to the other get*All() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/#literal-interface\r\n */\r\nfunction getLiteralAll(thing, property) {\r\n    var _a, _b, _c, _d;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    let literals = [];\r\n    const langStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const locales = Object.keys(langStrings);\r\n    for (const locale of locales) {\r\n        const stringsInLocale = langStrings[locale];\r\n        const localeLiterals = stringsInLocale.map((langString) => DataFactory.literal(langString, locale));\r\n        literals = literals.concat(localeLiterals);\r\n    }\r\n    const otherLiterals = (_d = (_c = thing.predicates[predicateIri]) === null || _c === void 0 ? void 0 : _c.literals) !== null && _d !== void 0 ? _d : {};\r\n    const dataTypes = Object.keys(otherLiterals);\r\n    for (const dataType of dataTypes) {\r\n        const values = otherLiterals[dataType];\r\n        const typeNode = DataFactory.namedNode(dataType);\r\n        const dataTypeLiterals = values.map((value) => DataFactory.literal(value, typeNode));\r\n        literals = literals.concat(dataTypeLiterals);\r\n    }\r\n    return literals;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read a raw RDF/JS value from.\r\n * @param property The given Property for which you want the raw value.\r\n * @returns A Term for the given Property, if present, or null otherwise.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/\r\n * @since 0.3.0\r\n */\r\nfunction getTerm(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    const namedNode = getNamedNode(thing, property);\r\n    if (namedNode !== null) {\r\n        return namedNode;\r\n    }\r\n    const literal = getLiteral(thing, property);\r\n    if (literal !== null) {\r\n        return literal;\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const blankNodes = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n    if (blankNodes.length > 0) {\r\n        const blankNodeValue = isBlankNodeId(blankNodes[0])\r\n            ? getBlankNodeValue(blankNodes[0])\r\n            : undefined;\r\n        return DataFactory.blankNode(blankNodeValue);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @param thing The [[Thing]] to read the raw RDF/JS values from.\r\n * @param property The given Property for which you want the raw values.\r\n * @returns The Terms for the given Property.\r\n * @ignore This should not be needed due to the other get*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @see https://rdf.js.org/data-model-spec/\r\n * @since 0.3.0\r\n */\r\nfunction getTermAll(thing, property) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    const namedNodes = getNamedNodeAll(thing, property);\r\n    const literals = getLiteralAll(thing, property);\r\n    const predicateIri = internal_toIriString(property);\r\n    const blankNodeValues = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n    const blankNodes = blankNodeValues.map((rawBlankNode) => {\r\n        const blankNodeName = isBlankNodeId(rawBlankNode)\r\n            ? getBlankNodeValue(rawBlankNode)\r\n            : undefined;\r\n        return DataFactory.blankNode(blankNodeName);\r\n    });\r\n    const terms = namedNodes\r\n        .concat(literals)\r\n        .concat(blankNodes);\r\n    return terms;\r\n}\r\n/**\r\n * @param thing The [Thing]] to read a Literal of the given type from.\r\n * @param property The given Property for which you want the Literal value.\r\n * @param literalType Set type of the Literal data.\r\n * @returns The stringified value for the given Property and type, if present, or null otherwise.\r\n */\r\nfunction getLiteralOfType(thing, property, literalType) {\r\n    var _a, _b, _c, _d;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    return (_d = (_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.literals) === null || _b === void 0 ? void 0 : _b[literalType]) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : null;\r\n}\r\n/**\r\n * @param thing The [Thing]] to read the Literals of the given type from.\r\n * @param property The given Property for which you want the Literal values.\r\n * @param literalType Set type of the Literal data.\r\n * @returns The stringified values for the given Property and type.\r\n */\r\nfunction getLiteralAllOfType(thing, property, literalType) {\r\n    var _a, _b, _c;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const literalsOfType = (_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.literals) === null || _b === void 0 ? void 0 : _b[literalType]) !== null && _c !== void 0 ? _c : [];\r\n    return [...literalsOfType];\r\n}\n\nexport { getBoolean, getBooleanAll, getDate, getDateAll, getDatetime, getDatetimeAll, getDecimal, getDecimalAll, getInteger, getIntegerAll, getIri, getIriAll, getLiteral, getLiteralAll, getNamedNode, getNamedNodeAll, getPropertyAll, getStringByLocaleAll, getStringEnglish, getStringEnglishAll, getStringNoLocale, getStringNoLocaleAll, getStringWithLocale, getStringWithLocaleAll, getTerm, getTermAll, getTime, getTimeAll, getUrl, getUrlAll };\n","import { internal_isValidUrl, resolveLocalIri, isNamedNode } from '../datatypes.mjs';\nimport { hasServerResourceInfo, SolidClientError } from '../interfaces.mjs';\nimport { DataFactory, subjectToRdfJsQuads } from '../rdfjs.internal.mjs';\nimport { getSourceUrl } from '../resource/resource.mjs';\nimport { internal_addAdditionsToChangeLog, internal_addDeletionsToChangeLog, internal_getReadableValue } from './thing.internal.mjs';\nimport { isLocalNodeIri, getLocalNodeName, isBlankNodeId, freeze, getLocalNodeIri } from '../rdf.internal.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { getTermAll } from './get.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Extract Quads with a given Subject from a [[SolidDataset]] into a [[Thing]].\r\n *\r\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]] from.\r\n * @param thingUrl The URL of the desired [[Thing]].\r\n * @param options Not yet implemented.\r\n */\r\nfunction getThing(solidDataset, thingUrl, options = {}) {\r\n    var _a;\r\n    if (!internal_isValidUrl(thingUrl)) {\r\n        throw new ValidThingUrlExpectedError(thingUrl);\r\n    }\r\n    const graph = typeof options.scope !== \"undefined\"\r\n        ? internal_toIriString(options.scope)\r\n        : \"default\";\r\n    const thingsByIri = (_a = solidDataset.graphs[graph]) !== null && _a !== void 0 ? _a : {};\r\n    const thingIri = internal_toIriString(thingUrl);\r\n    const resolvedThingIri = isLocalNodeIri(thingIri) && hasServerResourceInfo(solidDataset)\r\n        ? resolveLocalIri(getLocalNodeName(thingIri), getSourceUrl(solidDataset))\r\n        : thingIri;\r\n    const thing = thingsByIri[resolvedThingIri];\r\n    if (typeof thing === \"undefined\") {\r\n        return null;\r\n    }\r\n    return thing;\r\n}\r\n/**\r\n * Get all [[Thing]]s about which a [[SolidDataset]] contains Quads.\r\n *\r\n * @param solidDataset The [[SolidDataset]] to extract the [[Thing]]s from.\r\n * @param options Not yet implemented.\r\n */\r\nfunction getThingAll(solidDataset, options = { acceptBlankNodes: false }) {\r\n    var _a;\r\n    const graph = typeof options.scope !== \"undefined\"\r\n        ? internal_toIriString(options.scope)\r\n        : \"default\";\r\n    const thingsByIri = (_a = solidDataset.graphs[graph]) !== null && _a !== void 0 ? _a : {};\r\n    return Object.values(thingsByIri).filter((thing) => !isBlankNodeId(thing.url) || options.acceptBlankNodes);\r\n}\r\n/**\r\n * Insert a [[Thing]] into a [[SolidDataset]], replacing previous instances of that Thing.\r\n *\r\n * @param solidDataset The SolidDataset to insert a Thing into.\r\n * @param thing The Thing to insert into the given SolidDataset.\r\n * @returns A new SolidDataset equal to the given SolidDataset, but with the given Thing.\r\n */\r\nfunction setThing(solidDataset, thing) {\r\n    var _a;\r\n    const thingIri = isThingLocal(thing) && hasServerResourceInfo(solidDataset)\r\n        ? resolveLocalIri(getLocalNodeName(thing.url), getSourceUrl(solidDataset))\r\n        : thing.url;\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const updatedDefaultGraph = freeze(Object.assign(Object.assign({}, defaultGraph), { [thingIri]: freeze(Object.assign(Object.assign({}, thing), { url: thingIri })) }));\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: updatedDefaultGraph }));\r\n    const subjectNode = DataFactory.namedNode(thingIri);\r\n    const deletedThingPredicates = (_a = solidDataset.graphs.default[thingIri]) === null || _a === void 0 ? void 0 : _a.predicates;\r\n    const deletions = typeof deletedThingPredicates !== \"undefined\"\r\n        ? subjectToRdfJsQuads(deletedThingPredicates, subjectNode, DataFactory.defaultGraph())\r\n        : [];\r\n    const additions = subjectToRdfJsQuads(thing.predicates, subjectNode, DataFactory.defaultGraph());\r\n    return internal_addAdditionsToChangeLog(internal_addDeletionsToChangeLog(freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs })), deletions), additions);\r\n}\r\n/**\r\n * Remove a Thing from a SolidDataset.\r\n *\r\n * @param solidDataset The SolidDataset to remove a Thing from.\r\n * @param thing The Thing to remove from `solidDataset`.\r\n * @returns A new [[SolidDataset]] equal to the input SolidDataset, excluding the given Thing.\r\n */\r\nfunction removeThing(solidDataset, thing) {\r\n    var _a;\r\n    let thingIri;\r\n    if (isNamedNode(thing)) {\r\n        thingIri = thing.value;\r\n    }\r\n    else if (typeof thing === \"string\") {\r\n        thingIri =\r\n            isLocalNodeIri(thing) && hasServerResourceInfo(solidDataset)\r\n                ? resolveLocalIri(getLocalNodeName(thing), getSourceUrl(solidDataset))\r\n                : thing;\r\n    }\r\n    else if (isThingLocal(thing)) {\r\n        thingIri = thing.url;\r\n    }\r\n    else {\r\n        thingIri = asIri(thing);\r\n    }\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const updatedDefaultGraph = Object.assign({}, defaultGraph);\r\n    delete updatedDefaultGraph[thingIri];\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: freeze(updatedDefaultGraph) }));\r\n    const subjectNode = DataFactory.namedNode(thingIri);\r\n    const deletedThingPredicates = (_a = solidDataset.graphs.default[thingIri]) === null || _a === void 0 ? void 0 : _a.predicates;\r\n    const deletions = typeof deletedThingPredicates !== \"undefined\"\r\n        ? subjectToRdfJsQuads(deletedThingPredicates, subjectNode, DataFactory.defaultGraph())\r\n        : [];\r\n    return internal_addDeletionsToChangeLog(freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs })), deletions);\r\n}\r\nfunction createThing(options = {}) {\r\n    var _a;\r\n    if (typeof options.url !== \"undefined\") {\r\n        const url = options.url;\r\n        if (!internal_isValidUrl(url)) {\r\n            throw new ValidThingUrlExpectedError(url);\r\n        }\r\n        const thing = freeze({\r\n            type: \"Subject\",\r\n            predicates: freeze({}),\r\n            url: url,\r\n        });\r\n        return thing;\r\n    }\r\n    const name = (_a = options.name) !== null && _a !== void 0 ? _a : generateName();\r\n    const localNodeIri = getLocalNodeIri(name);\r\n    const thing = freeze({\r\n        type: \"Subject\",\r\n        predicates: freeze({}),\r\n        url: localNodeIri,\r\n    });\r\n    return thing;\r\n}\r\n/**\r\n * @param input An value that might be a [[Thing]].\r\n * @returns Whether `input` is a Thing.\r\n * @since 0.2.0\r\n */\r\nfunction isThing(input) {\r\n    return (typeof input === \"object\" &&\r\n        input !== null &&\r\n        typeof input.type === \"string\" &&\r\n        input.type === \"Subject\");\r\n}\r\nfunction asUrl(thing, baseUrl) {\r\n    if (isThingLocal(thing)) {\r\n        if (typeof baseUrl === \"undefined\") {\r\n            throw new Error(\"The URL of a Thing that has not been persisted cannot be determined without a base URL.\");\r\n        }\r\n        return resolveLocalIri(getLocalNodeName(thing.url), baseUrl);\r\n    }\r\n    return thing.url;\r\n}\r\n/** @hidden Alias of [[asUrl]] for those who prefer IRI terminology. */\r\nconst asIri = asUrl;\r\n/**\r\n * Gets a human-readable representation of the given Thing to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param thing The Thing to get a human-readable representation of.\r\n * @since 0.3.0\r\n */\r\nfunction thingAsMarkdown(thing) {\r\n    let thingAsMarkdown = \"\";\r\n    if (isThingLocal(thing)) {\r\n        thingAsMarkdown += `## Thing (no URL yet — identifier: \\`#${getLocalNodeName(thing.url)}\\`)\\n`;\r\n    }\r\n    else {\r\n        thingAsMarkdown += `## Thing: ${thing.url}\\n`;\r\n    }\r\n    const predicateIris = Object.keys(thing.predicates);\r\n    if (predicateIris.length === 0) {\r\n        thingAsMarkdown += \"\\n<empty>\\n\";\r\n    }\r\n    else {\r\n        for (const predicate of predicateIris) {\r\n            thingAsMarkdown += `\\nProperty: ${predicate}\\n`;\r\n            const values = getTermAll(thing, predicate);\r\n            values.forEach((value) => {\r\n                thingAsMarkdown += `- ${internal_getReadableValue(value)}\\n`;\r\n            });\r\n        }\r\n    }\r\n    return thingAsMarkdown;\r\n}\r\n/**\r\n * @param thing The [[Thing]] of which a URL might or might not be known.\r\n * @return `true` if `thing` has no known URL yet.\r\n * @since 1.7.0\r\n */\r\nfunction isThingLocal(thing) {\r\n    return isLocalNodeIri(thing.url);\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a [[Thing]] but received something else.\r\n * @since 1.2.0\r\n */\r\nclass ThingExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const message = `Expected a Thing, but received: [${receivedValue}].`;\r\n        super(message);\r\n        this.receivedValue = receivedValue;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL to identify a property but received something else.\r\n */\r\nclass ValidPropertyUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL to identify a property, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedProperty = value;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL value but received something else.\r\n */\r\nclass ValidValueUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL value, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedValue = value;\r\n    }\r\n}\r\n/**\r\n * This error is thrown when a function expected to receive a valid URL to identify a [[Thing]] but received something else.\r\n */\r\nclass ValidThingUrlExpectedError extends SolidClientError {\r\n    constructor(receivedValue) {\r\n        const value = isNamedNode(receivedValue)\r\n            ? receivedValue.value\r\n            : receivedValue;\r\n        const message = `Expected a valid URL to identify a Thing, but received: [${value}].`;\r\n        super(message);\r\n        this.receivedValue = value;\r\n    }\r\n}\r\n/**\r\n * Generate a string that can be used as the unique identifier for a Thing\r\n *\r\n * This function works by starting with a date string (so that Things can be\r\n * sorted chronologically), followed by a random number generated by taking a\r\n * random number between 0 and 1, and cutting off the `0.`.\r\n *\r\n * @internal\r\n * @returns An string that's likely to be unique\r\n */\r\nconst generateName = () => {\r\n    return (Date.now().toString() + Math.random().toString().substring(\"0.\".length));\r\n};\n\nexport { ThingExpectedError, ValidPropertyUrlExpectedError, ValidThingUrlExpectedError, ValidValueUrlExpectedError, asIri, asUrl, createThing, getThing, getThingAll, isThing, isThingLocal, removeThing, setThing, thingAsMarkdown };\n","/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * This function normalizes IRIs as managed by the server to ease accurate comparison.\r\n * @param iri\r\n * @hidden\r\n */\r\nfunction normalizeServerSideIri(iri) {\r\n    const iriObj = new URL(iri);\r\n    iriObj.hash = \"\";\r\n    return iriObj.href;\r\n}\n\nexport { normalizeServerSideIri };\n","import { addRdfJsQuadToDataset, getChainBlankNodes, toRdfJsQuads, DataFactory } from '../rdfjs.internal.mjs';\nimport { ldp, pim } from '../constants.mjs';\nimport { getJsonLdParser } from '../formats/jsonLd.mjs';\nimport { getTurtleParser, triplesToTurtle } from '../formats/turtle.mjs';\nimport { isLocalNode, resolveIriForLocalNode, isNamedNode } from '../datatypes.mjs';\nimport { hasChangelog, hasResourceInfo } from '../interfaces.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { FetchError, responseToResourceInfo, getContentType, getSourceUrl, internal_defaultFetchOptions, getResourceInfo, isContainer, getLinkedResourceUrlAll } from './resource.mjs';\nimport { internal_isUnsuccessfulResponse, internal_parseResourceInfo } from './resource.internal.mjs';\nimport { getThing, getThingAll, thingAsMarkdown } from '../thing/thing.mjs';\nimport { internal_withChangeLog, internal_getReadableValue } from '../thing/thing.internal.mjs';\nimport { getIriAll } from '../thing/get.mjs';\nimport { normalizeServerSideIri } from './iri.internal.mjs';\nimport { freeze, isLocalNodeIri, getLocalNodeName } from '../rdf.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Initialise a new [[SolidDataset]] in memory.\r\n *\r\n * @returns An empty [[SolidDataset]].\r\n */\r\nfunction createSolidDataset() {\r\n    return freeze({\r\n        type: \"Dataset\",\r\n        graphs: {\r\n            default: {},\r\n        },\r\n    });\r\n}\r\n/**\r\n * @hidden This interface is not exposed yet until we've tried it out in practice.\r\n */\r\nasync function responseToSolidDataset(response, parseOptions = {}) {\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the SolidDataset at [${response.url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = responseToResourceInfo(response);\r\n    const parsers = Object.assign({ \"text/turtle\": getTurtleParser() }, parseOptions.parsers);\r\n    const contentType = getContentType(resourceInfo);\r\n    if (contentType === null) {\r\n        throw new Error(`Could not determine the content type of the Resource at [${getSourceUrl(resourceInfo)}].`);\r\n    }\r\n    const mimeType = contentType.split(\";\")[0];\r\n    const parser = parsers[mimeType];\r\n    if (typeof parser === \"undefined\") {\r\n        throw new Error(`The Resource at [${getSourceUrl(resourceInfo)}] has a MIME type of [${mimeType}], but the only parsers available are for the following MIME types: [${Object.keys(parsers).join(\", \")}].`);\r\n    }\r\n    const data = await response.text();\r\n    const parsingPromise = new Promise((resolve, reject) => {\r\n        let solidDataset = freeze({\r\n            graphs: freeze({ default: freeze({}) }),\r\n            type: \"Dataset\",\r\n        });\r\n        // While Quads without Blank Nodes can be added to the SolidDataset as we\r\n        // encounter them, to parse Quads with Blank Nodes, we'll have to wait until\r\n        // we've seen all the Quads, so that we can reconcile equal Blank Nodes.\r\n        const quadsWithBlankNodes = [];\r\n        const allQuads = [];\r\n        parser.onError((error) => {\r\n            reject(new Error(`Encountered an error parsing the Resource at [${getSourceUrl(resourceInfo)}] with content type [${contentType}]: ${error}`));\r\n        });\r\n        parser.onQuad((quad) => {\r\n            allQuads.push(quad);\r\n            if (quad.subject.termType === \"BlankNode\" ||\r\n                quad.object.termType === \"BlankNode\") {\r\n                // Quads with Blank Nodes will be parsed when all Quads are known,\r\n                // so that equal Blank Nodes can be reconciled:\r\n                quadsWithBlankNodes.push(quad);\r\n            }\r\n            else {\r\n                solidDataset = addRdfJsQuadToDataset(solidDataset, quad);\r\n            }\r\n        });\r\n        parser.onComplete(async () => {\r\n            // If a Resource contains more than this number of Blank Nodes,\r\n            // we consider the detection of chains (O(n^2), I think) to be too\r\n            // expensive, and just incorporate them as regular Blank Nodes with\r\n            // non-deterministic, ad-hoc identifiers into the SolidDataset:\r\n            const maxBlankNodesToDetectChainsFor = 20;\r\n            // Some Blank Nodes only serve to use a set of Quads as the Object for a\r\n            // single Subject. Those Quads will be added to the SolidDataset when\r\n            // their Subject's Blank Node is encountered in the Object position.\r\n            const chainBlankNodes = quadsWithBlankNodes.length <= maxBlankNodesToDetectChainsFor\r\n                ? getChainBlankNodes(quadsWithBlankNodes)\r\n                : [];\r\n            const quadsWithoutChainBlankNodeSubjects = quadsWithBlankNodes.filter((quad) => chainBlankNodes.every((chainBlankNode) => !chainBlankNode.equals(quad.subject)));\r\n            solidDataset = quadsWithoutChainBlankNodeSubjects.reduce((datasetAcc, quad) => addRdfJsQuadToDataset(datasetAcc, quad, {\r\n                otherQuads: allQuads,\r\n                chainBlankNodes: chainBlankNodes,\r\n            }), solidDataset);\r\n            const solidDatasetWithResourceInfo = freeze(Object.assign(Object.assign({}, solidDataset), resourceInfo));\r\n            resolve(solidDatasetWithResourceInfo);\r\n        });\r\n        parser.parse(data, resourceInfo);\r\n    });\r\n    return await parsingPromise;\r\n}\r\n/**\r\n * Fetch a SolidDataset from the given URL. Currently requires the SolidDataset to be available as [Turtle](https://www.w3.org/TR/turtle/).\r\n *\r\n * @param url URL to fetch a [[SolidDataset]] from.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a [[SolidDataset]] containing the data at the given Resource, or rejecting if fetching it failed.\r\n */\r\nasync function getSolidDataset(url, options = internal_defaultFetchOptions) {\r\n    var _a;\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const parserContentTypes = Object.keys((_a = options.parsers) !== null && _a !== void 0 ? _a : {});\r\n    const acceptedContentTypes = parserContentTypes.length > 0\r\n        ? parserContentTypes.join(\", \")\r\n        : \"text/turtle\";\r\n    const response = await config.fetch(url, {\r\n        headers: {\r\n            Accept: acceptedContentTypes,\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Fetching the Resource at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const solidDataset = await responseToSolidDataset(response, options);\r\n    return solidDataset;\r\n}\r\n/**\r\n * Create a SPARQL UPDATE Patch request from a [[SolidDataset]] with a changelog.\r\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\r\n * @returns an HTTP PATCH request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a SPARQL UPDATE.\r\n * @hidden\r\n */\r\nasync function prepareSolidDatasetUpdate(solidDataset) {\r\n    const deleteStatement = solidDataset.internal_changeLog.deletions.length > 0\r\n        ? `DELETE DATA {${(await triplesToTurtle(solidDataset.internal_changeLog.deletions.map(getNamedNodesForLocalNodes))).trim()}};`\r\n        : \"\";\r\n    const insertStatement = solidDataset.internal_changeLog.additions.length > 0\r\n        ? `INSERT DATA {${(await triplesToTurtle(solidDataset.internal_changeLog.additions.map(getNamedNodesForLocalNodes))).trim()}};`\r\n        : \"\";\r\n    return {\r\n        method: \"PATCH\",\r\n        body: `${deleteStatement} ${insertStatement}`,\r\n        headers: {\r\n            \"Content-Type\": \"application/sparql-update\",\r\n        },\r\n    };\r\n}\r\n/**\r\n * Create a Put request to write a locally created [[SolidDataset]] to a Pod.\r\n * @param solidDataset the [[SolidDataset]] that has been locally updated, and that should be persisted.\r\n * @returns an HTTP PUT request configuration object, aligned with the [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters), containing a serialization of the [[SolidDataset]].\r\n * @hidden\r\n */\r\nasync function prepareSolidDatasetCreation(solidDataset) {\r\n    return {\r\n        method: \"PUT\",\r\n        body: await triplesToTurtle(toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes)),\r\n        headers: {\r\n            \"Content-Type\": \"text/turtle\",\r\n            \"If-None-Match\": \"*\",\r\n            Link: `<${ldp.Resource}>; rel=\"type\"`,\r\n        },\r\n    };\r\n}\r\n/**\r\n * Given a SolidDataset, store it in a Solid Pod (overwriting the existing data at the given URL).\r\n *\r\n * A SolidDataset keeps track of the data changes compared to the data in the Pod; i.e.,\r\n * the changelog tracks both the old value and new values of the property being modified. This\r\n * function applies the changes to the current SolidDataset. If the old value specified in the\r\n * changelog does not correspond to the value currently in the Pod, this function will throw an\r\n * error.\r\n * The SolidDataset returned by this function will contain the data sent to the Pod, and a ChangeLog\r\n * up-to-date with the saved data. Note that if the data on the server was modified in between the\r\n * first fetch and saving it, the updated data will not be reflected in the returned SolidDataset.\r\n * To make sure you have the latest data, call [[getSolidDataset]] again after saving the data.\r\n *\r\n * The Solid server will create any intermediary Containers that do not exist yet, so they do not\r\n * need to be created in advance. For example, if the target URL is\r\n * https://example.pod/container/resource and https://example.pod/container/ does not exist yet,\r\n * it will exist after this function resolves successfully.\r\n *\r\n * @param url URL to save `solidDataset` to.\r\n * @param solidDataset The [[SolidDataset]] to save.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Promise resolving to a [[SolidDataset]] containing the stored data, or rejecting if saving it failed.\r\n */\r\nasync function saveSolidDatasetAt(url, solidDataset, options = internal_defaultFetchOptions) {\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const datasetWithChangelog = internal_withChangeLog(solidDataset);\r\n    const requestInit = isUpdate(datasetWithChangelog, url)\r\n        ? await prepareSolidDatasetUpdate(datasetWithChangelog)\r\n        : await prepareSolidDatasetCreation(datasetWithChangelog);\r\n    const response = await config.fetch(url, requestInit);\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        const diagnostics = isUpdate(datasetWithChangelog, url)\r\n            ? \"The changes that were sent to the Pod are listed below.\\n\\n\" +\r\n                changeLogAsMarkdown(datasetWithChangelog)\r\n            : \"The SolidDataset that was sent to the Pod is listed below.\\n\\n\" +\r\n                solidDatasetAsMarkdown(datasetWithChangelog);\r\n        throw new FetchError(`Storing the Resource at [${url}] failed: [${response.status}] [${response.statusText}].\\n\\n` +\r\n            diagnostics, response);\r\n    }\r\n    const resourceInfo = Object.assign(Object.assign({}, internal_parseResourceInfo(response)), { isRawData: false });\r\n    const storedDataset = freeze(Object.assign(Object.assign({}, solidDataset), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    const storedDatasetWithResolvedIris = resolveLocalIrisInSolidDataset(storedDataset);\r\n    return storedDatasetWithResolvedIris;\r\n}\r\n/**\r\n * Deletes the SolidDataset at a given URL.\r\n *\r\n * If operating on a container, the container must be empty otherwise a 409 CONFLICT will be raised.\r\n *\r\n * @param file The (URL of the) SolidDataset to delete\r\n * @since 0.6.0\r\n */\r\nasync function deleteSolidDataset(solidDataset, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const url = hasResourceInfo(solidDataset)\r\n        ? internal_toIriString(getSourceUrl(solidDataset))\r\n        : internal_toIriString(solidDataset);\r\n    const response = await config.fetch(url, { method: \"DELETE\" });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the SolidDataset at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * Create a Container at the given URL. Some content may optionally be specified,\r\n * e.g. to add metadata describing the container.\r\n *\r\n * Throws an error if creating the Container failed, e.g. because the current user does not have\r\n * permissions to, or because the Container already exists.\r\n *\r\n * Note that a Solid server will automatically create the necessary Containers when storing a\r\n * Resource; i.e. there is no need to call this function if it is immediately followed by\r\n * [[saveSolidDatasetAt]] or [[overwriteFile]].\r\n *\r\n * @param url URL of the empty Container that is to be created.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @param solidDataset Optional parameter - if provided we use this dataset as the body of the HTT request, meaning it's data is included in the Container resource.\r\n * @since 0.2.0\r\n */\r\nasync function createContainerAt(url, options = internal_defaultFetchOptions) {\r\n    var _a;\r\n    url = internal_toIriString(url);\r\n    url = url.endsWith(\"/\") ? url : url + \"/\";\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, {\r\n        method: \"PUT\",\r\n        body: config.initialContent\r\n            ? await triplesToTurtle(toRdfJsQuads(config.initialContent).map(getNamedNodesForLocalNodes))\r\n            : undefined,\r\n        headers: {\r\n            Accept: \"text/turtle\",\r\n            \"Content-Type\": \"text/turtle\",\r\n            \"If-None-Match\": \"*\",\r\n            // This header should not be required to create a Container,\r\n            // but ESS currently expects it:\r\n            Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        if (response.status === 409 &&\r\n            response.statusText === \"Conflict\" &&\r\n            (await response.text()).trim() ===\r\n                internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465) {\r\n            return createContainerWithNssWorkaroundAt(url, options);\r\n        }\r\n        const containerType = config.initialContent === undefined ? \"empty\" : \"non-empty\";\r\n        throw new FetchError(`Creating the ${containerType} Container at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const resourceInfo = internal_parseResourceInfo(response);\r\n    const containerDataset = freeze(Object.assign(Object.assign({}, ((_a = options.initialContent) !== null && _a !== void 0 ? _a : createSolidDataset())), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    return containerDataset;\r\n}\r\n/**\r\n * Unfortunately Node Solid Server does not confirm to the Solid spec when it comes to Container\r\n * creation. When we make the (valid, according to the Solid protocol) request to create a\r\n * Container, NSS responds with the following exact error message. Thus, when we encounter exactly\r\n * this message, we use an NSS-specific workaround ([[createContainerWithNssWorkaroundAt]]). Both\r\n * this constant and that workaround should be removed once the NSS issue has been fixed and\r\n * no versions of NSS with the issue are in common use/supported anymore.\r\n *\r\n * @see https://github.com/solid/node-solid-server/issues/1465\r\n * @internal\r\n */\r\nconst internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465 = \"Can't write file: PUT not supported on containers, use POST instead\";\r\n/**\r\n * Unfortunately Node Solid Server does not confirm to the Solid spec when it comes to Container\r\n * creation. As a workaround, we create a dummy file _inside_ the desired Container (which should\r\n * create the desired Container on the fly), and then delete it again.\r\n *\r\n * @see https://github.com/solid/node-solid-server/issues/1465\r\n */\r\nconst createContainerWithNssWorkaroundAt = async (url, options) => {\r\n    url = internal_toIriString(url);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    let existingContainer;\r\n    try {\r\n        existingContainer = await getResourceInfo(url, options);\r\n    }\r\n    catch (e) {\r\n        // To create the Container, we'd want it to not exist yet. In other words, we'd expect to get\r\n        // a 404 error here in the happy path - so do nothing if that's the case.\r\n        if (!(e instanceof FetchError) || e.statusCode !== 404) {\r\n            // (But if we get an error other than a 404, just throw that error like we usually would.)\r\n            throw e;\r\n        }\r\n    }\r\n    if (typeof existingContainer !== \"undefined\") {\r\n        throw new Error(`The Container at [${url}] already exists, and therefore cannot be created again.`);\r\n    }\r\n    const dummyUrl = url + \".dummy\";\r\n    const createResponse = await config.fetch(dummyUrl, {\r\n        method: \"PUT\",\r\n        headers: {\r\n            Accept: \"text/turtle\",\r\n            \"Content-Type\": \"text/turtle\",\r\n        },\r\n    });\r\n    if (internal_isUnsuccessfulResponse(createResponse)) {\r\n        throw new FetchError(`Creating the empty Container at [${url}] failed: [${createResponse.status}] [${createResponse.statusText}].`, createResponse);\r\n    }\r\n    await config.fetch(dummyUrl, { method: \"DELETE\" });\r\n    const containerInfoResponse = await config.fetch(url, { method: \"HEAD\" });\r\n    const resourceInfo = internal_parseResourceInfo(containerInfoResponse);\r\n    const containerDataset = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_changeLog: { additions: [], deletions: [] }, internal_resourceInfo: resourceInfo }));\r\n    return containerDataset;\r\n};\r\nfunction isSourceIriEqualTo(dataset, iri) {\r\n    return (normalizeServerSideIri(dataset.internal_resourceInfo.sourceIri) ===\r\n        normalizeServerSideIri(iri));\r\n}\r\nfunction isUpdate(solidDataset, url) {\r\n    return (hasChangelog(solidDataset) &&\r\n        hasResourceInfo(solidDataset) &&\r\n        typeof solidDataset.internal_resourceInfo.sourceIri === \"string\" &&\r\n        isSourceIriEqualTo(solidDataset, url));\r\n}\r\n/**\r\n * Given a SolidDataset, store it in a Solid Pod in a new Resource inside a Container.\r\n *\r\n * The Container at the given URL should already exist; if it does not, you can initialise it first\r\n * using [[createContainerAt]], or directly save the SolidDataset at the desired location using\r\n * [[saveSolidDatasetAt]].\r\n *\r\n * This function is primarily useful if the current user does not have access to change existing files in\r\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\r\n * access to a Container. This is useful in situations where someone wants to allow others to,\r\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\r\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\r\n * another name — for example, if a Resource with that name already exists inside the given\r\n * Container.\r\n * If the user does have access to write directly to a given location, [[saveSolidDatasetAt]]\r\n * will do the job just fine, and does not require the parent Container to exist in advance.\r\n *\r\n * @param containerUrl URL of the Container in which to create a new Resource.\r\n * @param solidDataset The [[SolidDataset]] to save to a new Resource in the given Container.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Promise resolving to a [[SolidDataset]] containing the saved data. The Promise rejects if the save failed.\r\n */\r\nasync function saveSolidDatasetInContainer(containerUrl, solidDataset, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    containerUrl = internal_toIriString(containerUrl);\r\n    const rawTurtle = await triplesToTurtle(toRdfJsQuads(solidDataset).map(getNamedNodesForLocalNodes));\r\n    const headers = {\r\n        \"Content-Type\": \"text/turtle\",\r\n        Link: `<${ldp.Resource}>; rel=\"type\"`,\r\n    };\r\n    if (options.slugSuggestion) {\r\n        headers.slug = options.slugSuggestion;\r\n    }\r\n    const response = await config.fetch(containerUrl, {\r\n        method: \"POST\",\r\n        body: rawTurtle,\r\n        headers: headers,\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Storing the Resource in the Container at [${containerUrl}] failed: [${response.status}] [${response.statusText}].\\n\\n` +\r\n            \"The SolidDataset that was sent to the Pod is listed below.\\n\\n\" +\r\n            solidDatasetAsMarkdown(solidDataset), response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly saved SolidDataset.\");\r\n    }\r\n    const resourceIri = new URL(locationHeader, response.url).href;\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: false,\r\n            sourceIri: resourceIri,\r\n        },\r\n    };\r\n    const resourceWithResourceInfo = freeze(Object.assign(Object.assign({}, solidDataset), resourceInfo));\r\n    const resourceWithResolvedIris = resolveLocalIrisInSolidDataset(resourceWithResourceInfo);\r\n    return resourceWithResolvedIris;\r\n}\r\n/**\r\n * Create an empty Container inside the Container at the given URL.\r\n *\r\n * Throws an error if creating the Container failed, e.g. because the current user does not have\r\n * permissions to.\r\n *\r\n * The Container in which to create the new Container should itself already exist.\r\n *\r\n * This function is primarily useful if the current user does not have access to change existing files in\r\n * a Container, but is allowed to add new files; in other words, they have Append, but not Write\r\n * access to a Container. This is useful in situations where someone wants to allow others to,\r\n * for example, send notifications to their Pod, but not to view or delete existing notifications.\r\n * You can pass a suggestion for the new Resource's name, but the server may decide to give it\r\n * another name — for example, if a Resource with that name already exists inside the given\r\n * Container.\r\n * If the user does have access to write directly to a given location, [[createContainerAt]]\r\n * will do the job just fine, and does not require the parent Container to exist in advance.\r\n *\r\n * @param containerUrl URL of the Container in which the empty Container is to be created.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @since 0.2.0\r\n */\r\nasync function createContainerInContainer(containerUrl, options = internal_defaultFetchOptions) {\r\n    containerUrl = internal_toIriString(containerUrl);\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const headers = {\r\n        \"Content-Type\": \"text/turtle\",\r\n        Link: `<${ldp.BasicContainer}>; rel=\"type\"`,\r\n    };\r\n    if (options.slugSuggestion) {\r\n        headers.slug = options.slugSuggestion;\r\n    }\r\n    const response = await config.fetch(containerUrl, {\r\n        method: \"POST\",\r\n        headers: headers,\r\n    });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Creating an empty Container in the Container at [${containerUrl}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n    const locationHeader = response.headers.get(\"Location\");\r\n    if (locationHeader === null) {\r\n        throw new Error(\"Could not determine the location of the newly created Container.\");\r\n    }\r\n    const resourceIri = new URL(locationHeader, response.url).href;\r\n    const resourceInfo = {\r\n        internal_resourceInfo: {\r\n            isRawData: false,\r\n            sourceIri: resourceIri,\r\n        },\r\n    };\r\n    const resourceWithResourceInfo = freeze(Object.assign(Object.assign({}, createSolidDataset()), resourceInfo));\r\n    return resourceWithResourceInfo;\r\n}\r\n/**\r\n * Deletes the Container at a given URL.\r\n *\r\n * @param file The (URL of the) Container to delete\r\n * @since 0.6.0\r\n */\r\nasync function deleteContainer(container, options = internal_defaultFetchOptions) {\r\n    const url = hasResourceInfo(container)\r\n        ? internal_toIriString(getSourceUrl(container))\r\n        : internal_toIriString(container);\r\n    if (!isContainer(container)) {\r\n        throw new Error(`You're trying to delete the Container at [${url}], but Container URLs should end in a \\`/\\`. Are you sure this is a Container?`);\r\n    }\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(url, { method: \"DELETE\" });\r\n    if (internal_isUnsuccessfulResponse(response)) {\r\n        throw new FetchError(`Deleting the Container at [${url}] failed: [${response.status}] [${response.statusText}].`, response);\r\n    }\r\n}\r\n/**\r\n * Given a [[SolidDataset]] representing a Container (see [[isContainer]]), fetch the URLs of all\r\n * contained resources.\r\n * If the solidDataset given is not a container, or is missing resourceInfo, throw an error.\r\n *\r\n * @param solidDataset The container from which to fetch all contained Resource URLs.\r\n * @returns A list of URLs, each of which points to a contained Resource of the given SolidDataset.\r\n * @since 1.3.0\r\n */\r\nfunction getContainedResourceUrlAll(solidDataset) {\r\n    const container = getThing(solidDataset, getSourceUrl(solidDataset));\r\n    // See https://www.w3.org/TR/2015/REC-ldp-20150226/#h-ldpc-http_post:\r\n    // > a containment triple MUST be added to the state of the LDPC whose subject is the LDPC URI,\r\n    // > whose predicate is ldp:contains and whose object is the URI for the newly created document\r\n    return container !== null ? getIriAll(container, ldp.contains) : [];\r\n}\r\n/**\r\n * Gets a human-readable representation of the given SolidDataset to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param solidDataset The [[SolidDataset]] to get a human-readable representation of.\r\n * @since 0.3.0\r\n */\r\nfunction solidDatasetAsMarkdown(solidDataset) {\r\n    let readableSolidDataset = \"\";\r\n    if (hasResourceInfo(solidDataset)) {\r\n        readableSolidDataset += `# SolidDataset: ${getSourceUrl(solidDataset)}\\n`;\r\n    }\r\n    else {\r\n        readableSolidDataset += `# SolidDataset (no URL yet)\\n`;\r\n    }\r\n    const things = getThingAll(solidDataset);\r\n    if (things.length === 0) {\r\n        readableSolidDataset += \"\\n<empty>\\n\";\r\n    }\r\n    else {\r\n        things.forEach((thing) => {\r\n            readableSolidDataset += \"\\n\" + thingAsMarkdown(thing);\r\n            if (hasChangelog(solidDataset)) {\r\n                readableSolidDataset +=\r\n                    \"\\n\" + getReadableChangeLogSummary(solidDataset, thing) + \"\\n\";\r\n            }\r\n        });\r\n    }\r\n    return readableSolidDataset;\r\n}\r\n/**\r\n * Gets a human-readable representation of the local changes to a Resource to aid debugging.\r\n *\r\n * Note that changes to the exact format of the return value are not considered a breaking change;\r\n * it is intended to aid in debugging, not as a serialisation method that can be reliably parsed.\r\n *\r\n * @param solidDataset The Resource of which to get a human-readable representation of the changes applied to it locally.\r\n * @since 0.3.0\r\n */\r\nfunction changeLogAsMarkdown(solidDataset) {\r\n    if (!hasResourceInfo(solidDataset)) {\r\n        return \"This is a newly initialized SolidDataset, so there is no source to compare it to.\";\r\n    }\r\n    if (!hasChangelog(solidDataset) ||\r\n        (solidDataset.internal_changeLog.additions.length === 0 &&\r\n            solidDataset.internal_changeLog.deletions.length === 0)) {\r\n        return (`## Changes compared to ${getSourceUrl(solidDataset)}\\n\\n` +\r\n            `This SolidDataset has not been modified since it was fetched from ${getSourceUrl(solidDataset)}.\\n`);\r\n    }\r\n    let readableChangeLog = `## Changes compared to ${getSourceUrl(solidDataset)}\\n`;\r\n    const changeLogsByThingAndProperty = sortChangeLogByThingAndProperty(solidDataset);\r\n    Object.keys(changeLogsByThingAndProperty).forEach((thingUrl) => {\r\n        readableChangeLog += `\\n### Thing: ${thingUrl}\\n`;\r\n        const changeLogByProperty = changeLogsByThingAndProperty[thingUrl];\r\n        Object.keys(changeLogByProperty).forEach((propertyUrl) => {\r\n            readableChangeLog += `\\nProperty: ${propertyUrl}\\n`;\r\n            const deleted = changeLogByProperty[propertyUrl].deleted;\r\n            const added = changeLogByProperty[propertyUrl].added;\r\n            if (deleted.length > 0) {\r\n                readableChangeLog += \"- Removed:\\n\";\r\n                deleted.forEach((deletedValue) => (readableChangeLog += `  - ${internal_getReadableValue(deletedValue)}\\n`));\r\n            }\r\n            if (added.length > 0) {\r\n                readableChangeLog += \"- Added:\\n\";\r\n                added.forEach((addedValue) => (readableChangeLog += `  - ${internal_getReadableValue(addedValue)}\\n`));\r\n            }\r\n        });\r\n    });\r\n    return readableChangeLog;\r\n}\r\nfunction sortChangeLogByThingAndProperty(solidDataset) {\r\n    const changeLogsByThingAndProperty = {};\r\n    solidDataset.internal_changeLog.deletions.forEach((deletion) => {\r\n        var _a, _b;\r\n        var _c;\r\n        const subjectNode = isLocalNode(deletion.subject)\r\n            ? /* istanbul ignore next: Unsaved deletions should be removed from the additions list instead, so this code path shouldn't be hit: */\r\n                resolveIriForLocalNode(deletion.subject, getSourceUrl(solidDataset))\r\n            : deletion.subject;\r\n        if (!isNamedNode(subjectNode) || !isNamedNode(deletion.predicate)) {\r\n            return;\r\n        }\r\n        const thingUrl = internal_toIriString(subjectNode);\r\n        const propertyUrl = internal_toIriString(deletion.predicate);\r\n        (_a = changeLogsByThingAndProperty[thingUrl]) !== null && _a !== void 0 ? _a : (changeLogsByThingAndProperty[thingUrl] = {});\r\n        (_b = (_c = changeLogsByThingAndProperty[thingUrl])[propertyUrl]) !== null && _b !== void 0 ? _b : (_c[propertyUrl] = {\r\n            added: [],\r\n            deleted: [],\r\n        });\r\n        changeLogsByThingAndProperty[thingUrl][propertyUrl].deleted.push(deletion.object);\r\n    });\r\n    solidDataset.internal_changeLog.additions.forEach((addition) => {\r\n        var _a, _b;\r\n        var _c;\r\n        const subjectNode = isLocalNode(addition.subject)\r\n            ? /* istanbul ignore next: setThing already resolves local Subjects when adding them, so this code path should never be hit. */\r\n                resolveIriForLocalNode(addition.subject, getSourceUrl(solidDataset))\r\n            : addition.subject;\r\n        if (!isNamedNode(subjectNode) || !isNamedNode(addition.predicate)) {\r\n            return;\r\n        }\r\n        const thingUrl = internal_toIriString(subjectNode);\r\n        const propertyUrl = internal_toIriString(addition.predicate);\r\n        (_a = changeLogsByThingAndProperty[thingUrl]) !== null && _a !== void 0 ? _a : (changeLogsByThingAndProperty[thingUrl] = {});\r\n        (_b = (_c = changeLogsByThingAndProperty[thingUrl])[propertyUrl]) !== null && _b !== void 0 ? _b : (_c[propertyUrl] = {\r\n            added: [],\r\n            deleted: [],\r\n        });\r\n        changeLogsByThingAndProperty[thingUrl][propertyUrl].added.push(addition.object);\r\n    });\r\n    return changeLogsByThingAndProperty;\r\n}\r\nfunction getReadableChangeLogSummary(solidDataset, thing) {\r\n    const subject = DataFactory.namedNode(thing.url);\r\n    const nrOfAdditions = solidDataset.internal_changeLog.additions.reduce((count, addition) => (addition.subject.equals(subject) ? count + 1 : count), 0);\r\n    const nrOfDeletions = solidDataset.internal_changeLog.deletions.reduce((count, deletion) => (deletion.subject.equals(subject) ? count + 1 : count), 0);\r\n    const additionString = nrOfAdditions === 1\r\n        ? \"1 new value added\"\r\n        : nrOfAdditions + \" new values added\";\r\n    const deletionString = nrOfDeletions === 1 ? \"1 value removed\" : nrOfDeletions + \" values removed\";\r\n    return `(${additionString} / ${deletionString})`;\r\n}\r\nfunction getNamedNodesForLocalNodes(quad) {\r\n    const subject = isNamedNode(quad.subject)\r\n        ? getNamedNodeFromLocalNode(quad.subject)\r\n        : /* istanbul ignore next: We don't allow non-NamedNodes as the Subject, so this code path should never be hit: */\r\n            quad.subject;\r\n    const object = isNamedNode(quad.object)\r\n        ? getNamedNodeFromLocalNode(quad.object)\r\n        : quad.object;\r\n    return DataFactory.quad(subject, quad.predicate, object, quad.graph);\r\n}\r\nfunction getNamedNodeFromLocalNode(node) {\r\n    if (isLocalNodeIri(node.value)) {\r\n        return DataFactory.namedNode(\"#\" + getLocalNodeName(node.value));\r\n    }\r\n    return node;\r\n}\r\nfunction resolveLocalIrisInSolidDataset(solidDataset) {\r\n    const resourceIri = getSourceUrl(solidDataset);\r\n    const defaultGraph = solidDataset.graphs.default;\r\n    const thingIris = Object.keys(defaultGraph);\r\n    const updatedDefaultGraph = thingIris.reduce((graphAcc, thingIri) => {\r\n        const resolvedThing = resolveLocalIrisInThing(graphAcc[thingIri], resourceIri);\r\n        const resolvedThingIri = isLocalNodeIri(thingIri)\r\n            ? `${resourceIri}#${getLocalNodeName(thingIri)}`\r\n            : thingIri;\r\n        const updatedGraph = Object.assign({}, graphAcc);\r\n        delete updatedGraph[thingIri];\r\n        updatedGraph[resolvedThingIri] = resolvedThing;\r\n        return freeze(updatedGraph);\r\n    }, defaultGraph);\r\n    const updatedGraphs = freeze(Object.assign(Object.assign({}, solidDataset.graphs), { default: updatedDefaultGraph }));\r\n    return freeze(Object.assign(Object.assign({}, solidDataset), { graphs: updatedGraphs }));\r\n}\r\nfunction resolveLocalIrisInThing(thing, baseIri) {\r\n    const predicateIris = Object.keys(thing.predicates);\r\n    const updatedPredicates = predicateIris.reduce((predicatesAcc, predicateIri) => {\r\n        var _a;\r\n        const namedNodes = (_a = predicatesAcc[predicateIri].namedNodes) !== null && _a !== void 0 ? _a : [];\r\n        if (namedNodes.every((namedNode) => !isLocalNodeIri(namedNode))) {\r\n            // This Predicate has no local node Objects, so return it unmodified:\r\n            return predicatesAcc;\r\n        }\r\n        const updatedNamedNodes = freeze(namedNodes.map((namedNode) => isLocalNodeIri(namedNode)\r\n            ? `${baseIri}#${getLocalNodeName(namedNode)}`\r\n            : namedNode));\r\n        const updatedPredicate = freeze(Object.assign(Object.assign({}, predicatesAcc[predicateIri]), { namedNodes: updatedNamedNodes }));\r\n        return freeze(Object.assign(Object.assign({}, predicatesAcc), { [predicateIri]: updatedPredicate }));\r\n    }, thing.predicates);\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates, url: isLocalNodeIri(thing.url)\r\n            ? `${baseIri}#${getLocalNodeName(thing.url)}`\r\n            : thing.url }));\r\n}\r\n/**\r\n * Fetch the contents of '.well-known/solid' for a given resource URL.\r\n *\r\n * The contents of the '.well-known/solid' endpoint define the capabilities of the server, and provide their associated endpoints/locations.\r\n * This behaves similarly to the use of '.well-known' endpoints in e.g. (OIDC servers)[https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig]\r\n *\r\n * @param url URL of a Resource.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns Promise resolving to a [[SolidDataset]] containing the data at '.well-known/solid' for the given Resource, or rejecting if fetching it failed.\r\n * @since 1.12.0\r\n */\r\nasync function getWellKnownSolid(url, options = internal_defaultFetchOptions) {\r\n    const urlString = internal_toIriString(url);\r\n    const resourceMetadata = await getResourceInfo(urlString, {\r\n        fetch: options.fetch,\r\n        // Discovering the .well-known/solid document is useful even for resources\r\n        // we don't have access to.\r\n        ignoreAuthenticationErrors: true,\r\n    });\r\n    const linkedResources = getLinkedResourceUrlAll(resourceMetadata);\r\n    const rootResources = linkedResources[pim.storage];\r\n    const rootResource = (rootResources === null || rootResources === void 0 ? void 0 : rootResources.length) === 1 ? rootResources[0] : null;\r\n    if (rootResource !== null) {\r\n        const wellKnownSolidUrl = new URL(\".well-known/solid\", rootResource.endsWith(\"/\") ? rootResource : rootResource + \"/\").href;\r\n        try {\r\n            return await getSolidDataset(wellKnownSolidUrl, Object.assign(Object.assign({}, options), { parsers: {\r\n                    \"application/ld+json\": getJsonLdParser(),\r\n                } }));\r\n        }\r\n        catch (e) {\r\n            // In case of error, do nothing and try to discover the .well-known\r\n            // at the root of the domain.\r\n        }\r\n    }\r\n    const wellKnownSolidUrl = new URL(\"/.well-known/solid\", new URL(urlString).origin).href;\r\n    return getSolidDataset(wellKnownSolidUrl, Object.assign(Object.assign({}, options), { parsers: {\r\n            \"application/ld+json\": getJsonLdParser(),\r\n        } }));\r\n}\n\nexport { changeLogAsMarkdown, createContainerAt, createContainerInContainer, createSolidDataset, deleteContainer, deleteSolidDataset, getContainedResourceUrlAll, getSolidDataset, getWellKnownSolid, internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465, responseToSolidDataset, saveSolidDatasetAt, saveSolidDatasetInContainer, solidDatasetAsMarkdown };\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","import { internal_throwIfNotThing } from './thing.internal.mjs';\nimport { internal_isValidUrl, isNamedNode, serializeDatetime, serializeDate, serializeTime, serializeDecimal, serializeInteger, normalizeLocale, xmlSchemaTypes, serializeBoolean } from '../datatypes.mjs';\nimport { ValidPropertyUrlExpectedError, isThing, ValidValueUrlExpectedError, isThingLocal, asIri } from './thing.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { freeze, getBlankNodeId } from '../rdf.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create a new Thing with a URL added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setUrl]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a URL value to.\r\n * @param property Property for which to add the given URL value.\r\n * @param url URL to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addUrl = (thing, property, url) => {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    if (!isThing(url) && !internal_isValidUrl(url)) {\r\n        throw new ValidValueUrlExpectedError(url);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingNamedNodes = (_b = existingPredicate.namedNodes) !== null && _b !== void 0 ? _b : [];\r\n    let iriToAdd;\r\n    if (isNamedNode(url)) {\r\n        iriToAdd = url.value;\r\n    }\r\n    else if (typeof url === \"string\") {\r\n        iriToAdd = url;\r\n    }\r\n    else if (isThingLocal(url)) {\r\n        iriToAdd = url.url;\r\n    }\r\n    else {\r\n        iriToAdd = asIri(url);\r\n    }\r\n    const updatedNamedNodes = freeze(existingNamedNodes.concat(internal_toIriString(iriToAdd)));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { namedNodes: updatedNamedNodes }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n};\r\n/** @hidden Alias for [[addUrl]] for those who prefer IRI terminology. */\r\nconst addIri = addUrl;\r\n/**\r\n * Create a new Thing with a boolean added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setBoolean]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a boolean value to.\r\n * @param property Property for which to add the given boolean value.\r\n * @param value Boolean to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeBoolean(value), xmlSchemaTypes.boolean);\r\n};\r\n/**\r\n * Create a new Thing with a datetime added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a datetime value to.\r\n * @param property Property for which to add the given datetime value.\r\n * @param value Datetime to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDatetime(value), xmlSchemaTypes.dateTime);\r\n};\r\n/**\r\n * Create a new Thing with a date added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDate]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a date value to.\r\n * @param property Property for which to add the given date value.\r\n * @param value Date to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst addDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDate(value), xmlSchemaTypes.date);\r\n};\r\n/**\r\n * Create a new Thing with a time added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a datetime value to.\r\n * @param property Property for which to add the given datetime value.\r\n * @param value time to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst addTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeTime(value), xmlSchemaTypes.time);\r\n};\r\n/**\r\n * Create a new Thing with a decimal added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setDecimal]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a decimal value to.\r\n * @param property Property for which to add the given decimal value.\r\n * @param value Decimal to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeDecimal(value), xmlSchemaTypes.decimal);\r\n};\r\n/**\r\n * Create a new Thing with an integer added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setInteger]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add an integer value to.\r\n * @param property Property for which to add the given integer value.\r\n * @param value Integer to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, serializeInteger(value), xmlSchemaTypes.integer);\r\n};\r\n/**\r\n * Create a new Thing with an English string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringEnglish]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a localised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 1.13.0\r\n */\r\nfunction addStringEnglish(thing, property, value) {\r\n    return addStringWithLocale(thing, property, value, \"en\");\r\n}\r\n/**\r\n * Create a new Thing with a localised string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringWithLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add a localised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @param locale Locale of the added string.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addStringWithLocale(thing, property, value, locale) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const normalizedLocale = normalizeLocale(locale);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLangStrings = (_b = existingPredicate.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const existingStringsInLocale = (_c = existingLangStrings[normalizedLocale]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedStringsInLocale = freeze(existingStringsInLocale.concat(value));\r\n    const updatedLangStrings = freeze(Object.assign(Object.assign({}, existingLangStrings), { [normalizedLocale]: updatedStringsInLocale }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { langStrings: updatedLangStrings }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\r\n/**\r\n * Create a new Thing with an unlocalised string added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setStringNoLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to add an unlocalised string value to.\r\n * @param property Property for which to add the given string value.\r\n * @param value String to add to `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nconst addStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteralOfType(thing, property, value, xmlSchemaTypes.string);\r\n};\r\n/**\r\n * Create a new Thing with a Named Node added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setNamedNode]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Named Node to.\r\n * @param property Property for which to add a value.\r\n * @param value The Named Node to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addNamedNode(thing, property, value) {\r\n    return addUrl(thing, property, value.value);\r\n}\r\n/**\r\n * Create a new Thing with a Literal added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setLiteral]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Literal to.\r\n * @param property Property for which to add a value.\r\n * @param value The Literal to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n */\r\nfunction addLiteral(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const typeIri = value.datatype.value;\r\n    if (typeIri === xmlSchemaTypes.langString) {\r\n        return addStringWithLocale(thing, property, value.value, value.language);\r\n    }\r\n    return addLiteralOfType(thing, property, value.value, value.datatype.value);\r\n}\r\n/**\r\n * Creates a new Thing with a Term added for a Property.\r\n *\r\n * This preserves existing values for the given Property. To replace them, see [[setTerm]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other add*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to add a Term to.\r\n * @param property Property for which to add a value.\r\n * @param value The Term to add.\r\n * @returns A new Thing equal to the input Thing with the given value added for the given Property.\r\n * @since 0.3.0\r\n */\r\nfunction addTerm(thing, property, value) {\r\n    var _a, _b;\r\n    if (value.termType === \"NamedNode\") {\r\n        return addNamedNode(thing, property, value);\r\n    }\r\n    if (value.termType === \"Literal\") {\r\n        return addLiteral(thing, property, value);\r\n    }\r\n    if (value.termType === \"BlankNode\") {\r\n        internal_throwIfNotThing(thing);\r\n        if (!internal_isValidUrl(property)) {\r\n            throw new ValidPropertyUrlExpectedError(property);\r\n        }\r\n        const predicateIri = internal_toIriString(property);\r\n        const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n        const existingBlankNodes = (_b = existingPredicate.blankNodes) !== null && _b !== void 0 ? _b : [];\r\n        const updatedBlankNodes = freeze(existingBlankNodes.concat(getBlankNodeId(value)));\r\n        const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { blankNodes: updatedBlankNodes }));\r\n        const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n        const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n        return updatedThing;\r\n    }\r\n    throw new Error(`Term type [${value.termType}] is not supported by @inrupt/solid-client.`);\r\n}\r\nfunction addLiteralOfType(thing, property, value, type) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicate = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicate.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[type]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValuesOfType = freeze(existingValuesOfType.concat(value));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [type]: updatedValuesOfType }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicate), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\n\nexport { addBoolean, addDate, addDatetime, addDecimal, addInteger, addIri, addLiteral, addNamedNode, addStringEnglish, addStringNoLocale, addStringWithLocale, addTerm, addTime, addUrl };\n","import { internal_isValidUrl, isNamedNode, normalizeLocale, xmlSchemaTypes, deserializeBoolean, deserializeDatetime, deserializeDate, deserializeTime, deserializeDecimal, deserializeInteger } from '../datatypes.mjs';\nimport { internal_throwIfNotThing } from './thing.internal.mjs';\nimport { ValidPropertyUrlExpectedError, isThing, ValidValueUrlExpectedError, asIri } from './thing.mjs';\nimport { internal_toIriString } from '../interfaces.internal.mjs';\nimport { freeze } from '../rdf.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nfunction removeAll(thing, property) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const newPredicates = Object.assign({}, thing.predicates);\r\n    delete newPredicates[predicateIri];\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: freeze(newPredicates) }));\r\n}\r\n/**\r\n * Create a new Thing with the given URL removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a URL value from.\r\n * @param property Property for which to remove the given URL value.\r\n * @param value URL to remove from `thing` for the given `Property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeUrl = (thing, property, value) => {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    if (!isThing(value) && !internal_isValidUrl(value)) {\r\n        throw new ValidValueUrlExpectedError(value);\r\n    }\r\n    const iriToRemove = isNamedNode(value)\r\n        ? value.value\r\n        : typeof value === \"string\"\r\n            ? value\r\n            : asIri(value);\r\n    const updatedNamedNodes = freeze((_c = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.namedNodes) === null || _b === void 0 ? void 0 : _b.filter((namedNode) => namedNode.toLowerCase() !== iriToRemove.toLowerCase())) !== null && _c !== void 0 ? _c : []);\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, thing.predicates[predicateIri]), { namedNodes: updatedNamedNodes }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n};\r\n/** @hidden Alias of [[removeUrl]] for those who prefer IRI terminology. */\r\nconst removeIri = removeUrl;\r\n/**\r\n * Create a new Thing with the given boolean removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a boolean value from.\r\n * @param property Property for which to remove the given boolean value.\r\n * @param value Boolean to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.boolean, (foundBoolean) => deserializeBoolean(foundBoolean) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given datetime removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a datetime value from.\r\n * @param property Property for which to remove the given datetime value.\r\n * @param value Datetime to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.dateTime, (foundDatetime) => { var _a; return ((_a = deserializeDatetime(foundDatetime)) === null || _a === void 0 ? void 0 : _a.getTime()) === value.getTime(); });\r\n};\r\n/**\r\n * Create a new Thing with the given date removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a date value from.\r\n * @param property Property for which to remove the given date value.\r\n * @param value Date to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst removeDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.date, function (foundDate) {\r\n        const deserializedDate = deserializeDate(foundDate);\r\n        if (deserializedDate) {\r\n            return (deserializedDate.getFullYear() === value.getFullYear() &&\r\n                deserializedDate.getMonth() === value.getMonth() &&\r\n                deserializedDate.getDate() === value.getDate());\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n};\r\n/**\r\n * Create a new Thing with the given datetime removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a datetime value from.\r\n * @param property Property for which to remove the given datetime value.\r\n * @param value Time to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst removeTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.time, function (foundTime) {\r\n        const deserializedTime = deserializeTime(foundTime);\r\n        if (deserializedTime) {\r\n            return (deserializedTime.hour === value.hour &&\r\n                deserializedTime.minute === value.minute &&\r\n                deserializedTime.second === value.second &&\r\n                deserializedTime.millisecond === value.millisecond &&\r\n                deserializedTime.timezoneHourOffset === value.timezoneHourOffset &&\r\n                deserializedTime.timezoneMinuteOffset === value.timezoneMinuteOffset);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    });\r\n};\r\n/**\r\n * Create a new Thing with the given decimal removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a decimal value from.\r\n * @param property Property for which to remove the given decimal value.\r\n * @param value Decimal to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.decimal, (foundDecimal) => deserializeDecimal(foundDecimal) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given integer removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove an integer value from.\r\n * @param property Property for which to remove the given integer value.\r\n * @param value Integer to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.integer, (foundInteger) => deserializeInteger(foundInteger) === value);\r\n};\r\n/**\r\n * Create a new Thing with the given English string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a localised string value from.\r\n * @param property Property for which to remove the given localised string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n * @since 1.13.0\r\n */\r\nfunction removeStringEnglish(thing, property, value) {\r\n    return removeStringWithLocale(thing, property, value, \"en\");\r\n}\r\n/**\r\n * Create a new Thing with the given localised string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove a localised string value from.\r\n * @param property Property for which to remove the given localised string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @param locale Locale of the string to remove.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeStringWithLocale(thing, property, value, locale) {\r\n    var _a, _b;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingLangStrings = (_b = (_a = thing.predicates[predicateIri]) === null || _a === void 0 ? void 0 : _a.langStrings) !== null && _b !== void 0 ? _b : {};\r\n    const matchingLocale = Object.keys(existingLangStrings).find((existingLocale) => normalizeLocale(existingLocale) === normalizeLocale(locale) &&\r\n        Array.isArray(existingLangStrings[existingLocale]) &&\r\n        existingLangStrings[existingLocale].length > 0);\r\n    if (typeof matchingLocale !== \"string\") {\r\n        // Nothing to remove.\r\n        return thing;\r\n    }\r\n    const existingStringsInLocale = existingLangStrings[matchingLocale];\r\n    const updatedStringsInLocale = freeze(existingStringsInLocale.filter((existingString) => existingString !== value));\r\n    const updatedLangStrings = freeze(Object.assign(Object.assign({}, existingLangStrings), { [matchingLocale]: updatedStringsInLocale }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, thing.predicates[predicateIri]), { langStrings: updatedLangStrings }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    return freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n}\r\n/**\r\n * Create a new Thing with the given unlocalised string removed for the given Property.\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to remove an unlocalised string value from.\r\n * @param property Property for which to remove the given string value.\r\n * @param value String to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nconst removeStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return removeLiteralMatching(thing, property, xmlSchemaTypes.string, (foundString) => foundString === value);\r\n};\r\n/**\r\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing Thing to remove a NamedNode value from.\r\n * @param property Property for which to remove the given NamedNode value.\r\n * @param value NamedNode to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeNamedNode(thing, property, value) {\r\n    return removeUrl(thing, property, value.value);\r\n}\r\n/**\r\n * @ignore This should not be needed due to the other remove*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing Thing to remove a Literal value from.\r\n * @param property Property for which to remove the given Literal value.\r\n * @param value Literal to remove from `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with the given value removed for the given Property.\r\n */\r\nfunction removeLiteral(thing, property, value) {\r\n    var _a, _b, _c;\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const typeIri = value.datatype.value;\r\n    if (typeIri === xmlSchemaTypes.langString) {\r\n        return removeStringWithLocale(thing, property, value.value, value.language);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicateValues = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicateValues.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[typeIri]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValues = freeze(existingValuesOfType.filter((existingValue) => existingValue !== value.value));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [typeIri]: updatedValues }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicateValues), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\r\n/**\r\n * @param thing Thing to remove a Literal value from.\r\n * @param property Property for which to remove the given Literal value.\r\n * @param type Data type that the Literal should be stored as.\r\n * @param matcher Function that returns true if the given value is an equivalent serialisation of the value to remove. For example, when removing a `false` boolean, the matcher should return true for both \"0\" and \"false\".\r\n */\r\nfunction removeLiteralMatching(thing, property, type, matcher) {\r\n    var _a, _b, _c;\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    const predicateIri = internal_toIriString(property);\r\n    const existingPredicateValues = (_a = thing.predicates[predicateIri]) !== null && _a !== void 0 ? _a : {};\r\n    const existingLiterals = (_b = existingPredicateValues.literals) !== null && _b !== void 0 ? _b : {};\r\n    const existingValuesOfType = (_c = existingLiterals[type]) !== null && _c !== void 0 ? _c : [];\r\n    const updatedValues = freeze(existingValuesOfType.filter((existingValue) => !matcher(existingValue)));\r\n    const updatedLiterals = freeze(Object.assign(Object.assign({}, existingLiterals), { [type]: updatedValues }));\r\n    const updatedPredicate = freeze(Object.assign(Object.assign({}, existingPredicateValues), { literals: updatedLiterals }));\r\n    const updatedPredicates = freeze(Object.assign(Object.assign({}, thing.predicates), { [predicateIri]: updatedPredicate }));\r\n    const updatedThing = freeze(Object.assign(Object.assign({}, thing), { predicates: updatedPredicates }));\r\n    return updatedThing;\r\n}\n\nexport { removeAll, removeBoolean, removeDate, removeDatetime, removeDecimal, removeInteger, removeIri, removeLiteral, removeNamedNode, removeStringEnglish, removeStringNoLocale, removeStringWithLocale, removeTime, removeUrl };\n","import { internal_isValidUrl } from '../datatypes.mjs';\nimport { internal_throwIfNotThing } from './thing.internal.mjs';\nimport { removeAll } from './remove.mjs';\nimport { ValidPropertyUrlExpectedError, isThing, ValidValueUrlExpectedError } from './thing.mjs';\nimport { addUrl, addBoolean, addDatetime, addDate, addTime, addDecimal, addInteger, addStringWithLocale, addStringNoLocale, addNamedNode, addLiteral, addTerm } from './add.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create a new Thing with existing values replaced by the given URL for the given Property.\r\n *\r\n * To preserve existing values, see [[addUrl]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a URL value on.\r\n * @param property Property for which to set the given URL value.\r\n * @param url URL to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setUrl = (thing, property, url) => {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    if (!isThing(url) && !internal_isValidUrl(url)) {\r\n        throw new ValidValueUrlExpectedError(url);\r\n    }\r\n    return addUrl(removeAll(thing, property), property, url);\r\n};\r\n/** @hidden Alias of [[setUrl]] for those who prefer IRI terminology. */\r\nconst setIri = setUrl;\r\n/**\r\n * Create a new Thing with existing values replaced by the given boolean for the given Property.\r\n *\r\n * To preserve existing values, see [[addBoolean]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a boolean value on.\r\n * @param property Property for which to set the given boolean value.\r\n * @param value Boolean to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setBoolean = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addBoolean(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given datetime for the given Property.\r\n *\r\n * To preserve existing values, see [[addDatetime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an datetime value on.\r\n * @param property Property for which to set the given datetime value.\r\n * @param value Datetime to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setDatetime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDatetime(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given date for the given Property.\r\n *\r\n * To preserve existing values, see [[addDate]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an date value on.\r\n * @param property Property for which to set the given date value.\r\n * @param value Date to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst setDate = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDate(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given time for the given Property.\r\n *\r\n * To preserve existing values, see [[addTime]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an time value on.\r\n * @param property Property for which to set the given time value.\r\n * @param value time to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 1.10.0\r\n */\r\nconst setTime = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addTime(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given decimal for the given Property.\r\n *\r\n * To preserve existing values, see [[addDecimal]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a decimal value on.\r\n * @param property Property for which to set the given decimal value.\r\n * @param value Decimal to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setDecimal = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addDecimal(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given integer for the given Property.\r\n *\r\n * To preserve existing values, see [[addInteger]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an integer value on.\r\n * @param property Property for which to set the given integer value.\r\n * @param value Integer to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setInteger = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addInteger(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given localised string for the given Property.\r\n *\r\n * To preserve existing values, see [[addStringWithLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set a localised string value on.\r\n * @param property Property for which to set the given localised string value.\r\n * @param value Localised string to set on `thing` for the given `property`.\r\n * @param locale Locale of the added string.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setStringWithLocale(thing, property, value, locale) {\r\n    internal_throwIfNotThing(thing);\r\n    return addStringWithLocale(removeAll(thing, property), property, value, locale);\r\n}\r\n/**\r\n * Create a new Thing with existing values replaced by the given unlocalised string for the given Property.\r\n *\r\n * To preserve existing values, see [[addStringNoLocale]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @param thing Thing to set an unlocalised string value on.\r\n * @param property Property for which to set the given unlocalised string value.\r\n * @param value Unlocalised string to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nconst setStringNoLocale = (thing, property, value) => {\r\n    internal_throwIfNotThing(thing);\r\n    return addStringNoLocale(removeAll(thing, property), property, value);\r\n};\r\n/**\r\n * Create a new Thing with existing values replaced by the given Named Node for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addNamedNode]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a NamedNode on.\r\n * @param property Property for which to set the value.\r\n * @param value The NamedNode to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setNamedNode(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    return addNamedNode(removeAll(thing, property), property, value);\r\n}\r\n/**\r\n * Create a new Thing with existing values replaced by the given Literal for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addLiteral]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a Literal on.\r\n * @param property Property for which to set the value.\r\n * @param value The Literal to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n */\r\nfunction setLiteral(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    return addLiteral(removeAll(thing, property), property, value);\r\n}\r\n/**\r\n * Creates a new Thing with existing values replaced by the given Term for the given Property.\r\n *\r\n * This replaces existing values for the given Property. To preserve them, see [[addTerm]].\r\n *\r\n * The original `thing` is not modified; this function returns a cloned Thing with updated values.\r\n *\r\n * @ignore This should not be needed due to the other set*() functions. If you do find yourself needing it, please file a feature request for your use case.\r\n * @param thing The [[Thing]] to set a Term on.\r\n * @param property Property for which to set the value.\r\n * @param value The raw RDF/JS value to set on `thing` for the given `property`.\r\n * @returns A new Thing equal to the input Thing with existing values replaced by the given value for the given Property.\r\n * @since 0.3.0\r\n */\r\nfunction setTerm(thing, property, value) {\r\n    internal_throwIfNotThing(thing);\r\n    if (!internal_isValidUrl(property)) {\r\n        throw new ValidPropertyUrlExpectedError(property);\r\n    }\r\n    return addTerm(removeAll(thing, property), property, value);\r\n}\n\nexport { setBoolean, setDate, setDatetime, setDecimal, setInteger, setIri, setLiteral, setNamedNode, setStringNoLocale, setStringWithLocale, setTerm, setTime, setUrl };\n","import { addIri, addBoolean, addDatetime, addDate, addTime, addDecimal, addInteger, addStringNoLocale, addStringWithLocale, addNamedNode, addLiteral, addTerm, addUrl } from './add.mjs';\nimport { removeAll, removeIri, removeBoolean, removeDatetime, removeDate, removeTime, removeDecimal, removeInteger, removeStringNoLocale, removeStringWithLocale, removeNamedNode, removeLiteral, removeUrl } from './remove.mjs';\nimport { setIri, setBoolean, setDatetime, setDate, setTime, setDecimal, setInteger, setStringNoLocale, setStringWithLocale, setNamedNode, setLiteral, setTerm, setUrl } from './set.mjs';\nimport { createThing, isThing } from './thing.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Create or modify a [[Thing]], setting multiple properties in a single expresssion.\r\n *\r\n * For example, you can create a new Thing and initialise several properties as follows:\r\n *\r\n *     const me = buildThing()\r\n *       .addUrl(rdf.type, schema.Person)\r\n *       .addStringNoLocale(schema.givenName, \"Vincent\")\r\n *       .build();\r\n *\r\n * Take note of the final call to `.build()` to obtain the actual Thing.\r\n *\r\n * @param init Optionally pass an existing [[Thing]] to modify the properties of. If left empty, `buildThing` will initialise a new Thing.\r\n * @returns a [[ThingBuilder]], a Fluent API that allows you to set multiple properties in a single expression.\r\n * @since 1.9.0\r\n */\r\nfunction buildThing(init = createThing()) {\r\n    let thing = isThing(init) ? init : createThing(init);\r\n    function getAdder(adder) {\r\n        return (property, value) => {\r\n            thing = adder(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getSetter(setter) {\r\n        return (property, value) => {\r\n            thing = setter(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    function getRemover(remover) {\r\n        return (property, value) => {\r\n            thing = remover(thing, property, value);\r\n            return builder;\r\n        };\r\n    }\r\n    const builder = {\r\n        build: () => thing,\r\n        addUrl: getAdder(addUrl),\r\n        addIri: getAdder(addIri),\r\n        addBoolean: getAdder(addBoolean),\r\n        addDatetime: getAdder(addDatetime),\r\n        addDate: getAdder(addDate),\r\n        addTime: getAdder(addTime),\r\n        addDecimal: getAdder(addDecimal),\r\n        addInteger: getAdder(addInteger),\r\n        addStringNoLocale: getAdder(addStringNoLocale),\r\n        addStringEnglish: (property, value) => {\r\n            thing = addStringWithLocale(thing, property, value, \"en\");\r\n            return builder;\r\n        },\r\n        addStringWithLocale: (property, value, locale) => {\r\n            thing = addStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        addNamedNode: getAdder(addNamedNode),\r\n        addLiteral: getAdder(addLiteral),\r\n        addTerm: getAdder(addTerm),\r\n        setUrl: getSetter(setUrl),\r\n        setIri: getSetter(setIri),\r\n        setBoolean: getSetter(setBoolean),\r\n        setDatetime: getSetter(setDatetime),\r\n        setDate: getSetter(setDate),\r\n        setTime: getSetter(setTime),\r\n        setDecimal: getSetter(setDecimal),\r\n        setInteger: getSetter(setInteger),\r\n        setStringNoLocale: getSetter(setStringNoLocale),\r\n        setStringEnglish: (property, value) => {\r\n            thing = setStringWithLocale(thing, property, value, \"en\");\r\n            return builder;\r\n        },\r\n        setStringWithLocale: (property, value, locale) => {\r\n            thing = setStringWithLocale(thing, property, value, locale);\r\n            return builder;\r\n        },\r\n        setNamedNode: getSetter(setNamedNode),\r\n        setLiteral: getSetter(setLiteral),\r\n        setTerm: getSetter(setTerm),\r\n        removeAll: (property) => {\r\n            thing = removeAll(thing, property);\r\n            return builder;\r\n        },\r\n        removeUrl: getRemover(removeUrl),\r\n        removeIri: getRemover(removeIri),\r\n        removeBoolean: getRemover(removeBoolean),\r\n        removeDatetime: getRemover(removeDatetime),\r\n        removeDate: getRemover(removeDate),\r\n        removeTime: getRemover(removeTime),\r\n        removeDecimal: getRemover(removeDecimal),\r\n        removeInteger: getRemover(removeInteger),\r\n        removeStringNoLocale: getRemover(removeStringNoLocale),\r\n        removeStringEnglish: (property, value) => buildThing(removeStringWithLocale(thing, property, value, \"en\")),\r\n        removeStringWithLocale: (property, value, locale) => buildThing(removeStringWithLocale(thing, property, value, locale)),\r\n        removeNamedNode: getRemover(removeNamedNode),\r\n        removeLiteral: getRemover(removeLiteral),\r\n    };\r\n    return builder;\r\n}\n\nexport { buildThing };\n","import { getSolidDataset } from '../resource/solidDataset.mjs';\nimport { internal_defaultFetchOptions, getSourceUrl, getResourceInfo, getSourceIri } from '../resource/resource.mjs';\nimport { acl, rdf } from '../constants.mjs';\nimport { subjectToRdfJsQuads, DataFactory } from '../rdfjs.internal.mjs';\nimport { getThingAll, removeThing, setThing, createThing } from '../thing/thing.mjs';\nimport { getIriAll, getIri } from '../thing/get.mjs';\nimport { setIri } from '../thing/set.mjs';\nimport { addIri } from '../thing/add.mjs';\nimport { hasAccessibleAcl } from './acl.mjs';\nimport { removeIri, removeAll } from '../thing/remove.mjs';\nimport { freeze } from '../rdf.internal.mjs';\nimport { internal_cloneResource } from '../resource/resource.internal.mjs';\nimport { isAcr } from '../acp/acp.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * This (currently internal) function fetches the ACL indicated in the [[WithServerResourceInfo]]\r\n * attached to a resource.\r\n *\r\n * @internal\r\n * @param resourceInfo The Resource info with the ACL URL\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters).\r\n */\r\nasync function internal_fetchAcl(resourceInfo, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(resourceInfo)) {\r\n        return {\r\n            resourceAcl: null,\r\n            fallbackAcl: null,\r\n        };\r\n    }\r\n    try {\r\n        const resourceAcl = await internal_fetchResourceAcl(resourceInfo, options);\r\n        const acl = resourceAcl === null\r\n            ? {\r\n                resourceAcl: null,\r\n                fallbackAcl: await internal_fetchFallbackAcl(resourceInfo, options),\r\n            }\r\n            : { resourceAcl: resourceAcl, fallbackAcl: null };\r\n        return acl;\r\n    }\r\n    catch (e) {\r\n        /* istanbul ignore else: fetchResourceAcl swallows all non-AclIsAcrErrors */\r\n        if (e instanceof AclIsAcrError) {\r\n            return {\r\n                resourceAcl: null,\r\n                fallbackAcl: null,\r\n            };\r\n        }\r\n        /* istanbul ignore next: fetchResourceAcl swallows all non-AclIsAcrErrors */\r\n        throw e;\r\n    }\r\n}\r\n/** @internal */\r\nasync function internal_fetchResourceAcl(dataset, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(dataset)) {\r\n        return null;\r\n    }\r\n    try {\r\n        const aclSolidDataset = await getSolidDataset(dataset.internal_resourceInfo.aclUrl, options);\r\n        if (isAcr(aclSolidDataset)) {\r\n            throw new AclIsAcrError(dataset, aclSolidDataset);\r\n        }\r\n        return freeze(Object.assign(Object.assign({}, aclSolidDataset), { internal_accessTo: getSourceUrl(dataset) }));\r\n    }\r\n    catch (e) {\r\n        if (e instanceof AclIsAcrError) {\r\n            throw e;\r\n        }\r\n        // Since a Solid server adds a `Link` header to an ACL even if that ACL does not exist,\r\n        // failure to fetch the ACL is expected to happen - we just return `null` and let callers deal\r\n        // with it.\r\n        return null;\r\n    }\r\n}\r\n/** @internal */\r\nasync function internal_fetchFallbackAcl(resource, options = internal_defaultFetchOptions) {\r\n    const resourceUrl = new URL(getSourceUrl(resource));\r\n    const resourcePath = resourceUrl.pathname;\r\n    // Note: we're currently assuming that the Origin is the root of the Pod. However, it is not yet\r\n    //       set in stone that that will always be the case. We might need to check the Container's\r\n    //       metadata at some point in time to check whether it is actually the root of the Pod.\r\n    //       See: https://github.com/solid/specification/issues/153#issuecomment-624630022\r\n    if (resourcePath === \"/\") {\r\n        // We're already at the root, so there's no Container we can retrieve:\r\n        return null;\r\n    }\r\n    const containerPath = internal_getContainerPath(resourcePath);\r\n    const containerIri = new URL(containerPath, resourceUrl.origin).href;\r\n    const containerInfo = await getResourceInfo(containerIri, options);\r\n    if (!hasAccessibleAcl(containerInfo)) {\r\n        // If the current user does not have access to this Container's ACL,\r\n        // we cannot determine whether its ACL is the one that applies. Thus, return null:\r\n        return null;\r\n    }\r\n    const containerAcl = await internal_fetchResourceAcl(containerInfo, options);\r\n    if (containerAcl === null) {\r\n        return internal_fetchFallbackAcl(containerInfo, options);\r\n    }\r\n    return containerAcl;\r\n}\r\n/**\r\n * Given the path to a Resource, get the URL of the Container one level up in the hierarchy.\r\n * @param resourcePath The path of the Resource of which we need to determine the Container's path.\r\n * @hidden For internal use only.\r\n */\r\nfunction internal_getContainerPath(resourcePath) {\r\n    const resourcePathWithoutTrailingSlash = resourcePath.substring(resourcePath.length - 1) === \"/\"\r\n        ? resourcePath.substring(0, resourcePath.length - 1)\r\n        : resourcePath;\r\n    const containerPath = resourcePath.substring(0, resourcePathWithoutTrailingSlash.lastIndexOf(\"/\")) + \"/\";\r\n    return containerPath;\r\n}\r\n/** @internal */\r\nfunction internal_getAclRules(aclDataset) {\r\n    const things = getThingAll(aclDataset);\r\n    return things.filter(isAclRule);\r\n}\r\nfunction isAclRule(thing) {\r\n    return getIriAll(thing, rdf.type).includes(acl.Authorization);\r\n}\r\n/** @internal */\r\nfunction internal_getResourceAclRulesForResource(aclRules, resource) {\r\n    return aclRules.filter((rule) => appliesToResource(rule, resource));\r\n}\r\nfunction appliesToResource(aclRule, resource) {\r\n    return getIriAll(aclRule, acl.accessTo).includes(resource);\r\n}\r\n/** @internal */\r\nfunction internal_getDefaultAclRulesForResource(aclRules, resource) {\r\n    return aclRules.filter((rule) => isDefaultForResource(rule, resource));\r\n}\r\nfunction isDefaultForResource(aclRule, resource) {\r\n    return (getIriAll(aclRule, acl.default).includes(resource) ||\r\n        getIriAll(aclRule, acl.defaultForNew).includes(resource));\r\n}\r\n/** @internal */\r\nfunction internal_getAccess(rule) {\r\n    const ruleAccessModes = getIriAll(rule, acl.mode);\r\n    const writeAccess = ruleAccessModes.includes(internal_accessModeIriStrings.write);\r\n    return writeAccess\r\n        ? {\r\n            read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\r\n            append: true,\r\n            write: true,\r\n            control: ruleAccessModes.includes(internal_accessModeIriStrings.control),\r\n        }\r\n        : {\r\n            read: ruleAccessModes.includes(internal_accessModeIriStrings.read),\r\n            append: ruleAccessModes.includes(internal_accessModeIriStrings.append),\r\n            write: false,\r\n            control: ruleAccessModes.includes(internal_accessModeIriStrings.control),\r\n        };\r\n}\r\n/** @internal */\r\nfunction internal_combineAccessModes(modes) {\r\n    return modes.reduce((accumulator, current) => {\r\n        const writeAccess = accumulator.write || current.write;\r\n        return writeAccess\r\n            ? {\r\n                read: accumulator.read || current.read,\r\n                append: true,\r\n                write: true,\r\n                control: accumulator.control || current.control,\r\n            }\r\n            : {\r\n                read: accumulator.read || current.read,\r\n                append: accumulator.append || current.append,\r\n                write: false,\r\n                control: accumulator.control || current.control,\r\n            };\r\n    }, { read: false, append: false, write: false, control: false });\r\n}\r\n/** @internal */\r\nfunction internal_removeEmptyAclRules(aclDataset) {\r\n    const aclRules = internal_getAclRules(aclDataset);\r\n    const aclRulesToRemove = aclRules.filter(isEmptyAclRule);\r\n    // Is this too clever? It iterates over aclRulesToRemove, one by one removing them from aclDataset.\r\n    const updatedAclDataset = aclRulesToRemove.reduce(removeThing, aclDataset);\r\n    return updatedAclDataset;\r\n}\r\nfunction isEmptyAclRule(aclRule) {\r\n    // If there are Quads in there unrelated to Access Control,\r\n    // this is not an empty ACL rule that can be deleted:\r\n    if (subjectToRdfJsQuads(aclRule.predicates, DataFactory.namedNode(aclRule.url), DataFactory.defaultGraph()).some((quad) => !isAclQuad(quad))) {\r\n        return false;\r\n    }\r\n    // If the rule does not apply to any Resource, it is no longer working:\r\n    if (getIri(aclRule, acl.accessTo) === null &&\r\n        getIri(aclRule, acl.default) === null &&\r\n        getIri(aclRule, acl.defaultForNew) === null) {\r\n        return true;\r\n    }\r\n    // If the rule does not specify Access Modes, it is no longer working:\r\n    if (getIri(aclRule, acl.mode) === null) {\r\n        return true;\r\n    }\r\n    // If the rule does not specify whom it applies to, it is no longer working:\r\n    if (getIri(aclRule, acl.agent) === null &&\r\n        getIri(aclRule, acl.agentGroup) === null &&\r\n        getIri(aclRule, acl.agentClass) === null) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction isAclQuad(quad) {\r\n    const predicate = quad.predicate;\r\n    const object = quad.object;\r\n    if (predicate.equals(DataFactory.namedNode(rdf.type)) &&\r\n        object.equals(DataFactory.namedNode(acl.Authorization))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.accessTo)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.default)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.defaultForNew))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.mode)) &&\r\n        Object.values(internal_accessModeIriStrings).some((mode) => object.equals(DataFactory.namedNode(mode)))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.agent)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.agentGroup)) ||\r\n        predicate.equals(DataFactory.namedNode(acl.agentClass))) {\r\n        return true;\r\n    }\r\n    if (predicate.equals(DataFactory.namedNode(acl.origin))) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * IRIs of potential Access Modes\r\n * @internal\r\n */\r\nconst internal_accessModeIriStrings = {\r\n    read: \"http://www.w3.org/ns/auth/acl#Read\",\r\n    append: \"http://www.w3.org/ns/auth/acl#Append\",\r\n    write: \"http://www.w3.org/ns/auth/acl#Write\",\r\n    control: \"http://www.w3.org/ns/auth/acl#Control\",\r\n};\r\n/** @internal\r\n * This function finds, among a set of ACL rules, the ones granting access to a given entity (the target)\r\n * and identifying it with a specific property (`acl:agent` or `acl:agentGroup`).\r\n * @param aclRules The set of rules to filter\r\n * @param targetIri The IRI of the target\r\n * @param targetType The property linking the rule to the target\r\n */\r\nfunction internal_getAclRulesForIri(aclRules, targetIri, targetType) {\r\n    return aclRules.filter((rule) => getIriAll(rule, targetType).includes(targetIri));\r\n}\r\n/** @internal\r\n * This function transforms a given set of rules into a map associating the IRIs\r\n * of the entities to which permissions are granted by these rules, and the permissions\r\n * granted to them. Additionally, it filters these entities based on the predicate\r\n * that refers to them in the rule.\r\n */\r\nfunction internal_getAccessByIri(aclRules, targetType) {\r\n    const targetIriAccess = {};\r\n    aclRules.forEach((rule) => {\r\n        const ruleTargetIri = getIriAll(rule, targetType);\r\n        const access = internal_getAccess(rule);\r\n        // A rule might apply to multiple agents. If multiple rules apply to the same agent, the Access\r\n        // Modes granted by those rules should be combined:\r\n        ruleTargetIri.forEach((targetIri) => {\r\n            targetIriAccess[targetIri] =\r\n                typeof targetIriAccess[targetIri] === \"undefined\"\r\n                    ? access\r\n                    : internal_combineAccessModes([targetIriAccess[targetIri], access]);\r\n        });\r\n    });\r\n    return targetIriAccess;\r\n}\r\n/**\r\n * Initialises a new ACL Rule that grants some access - but does not yet specify to whom.\r\n *\r\n * @hidden This is an internal utility function that should not be used directly by downstreams.\r\n * @param access Access mode that this Rule will grant\r\n */\r\nfunction internal_initialiseAclRule(access) {\r\n    let newRule = createThing();\r\n    newRule = setIri(newRule, rdf.type, acl.Authorization);\r\n    if (access.read) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.read);\r\n    }\r\n    if (access.append && !access.write) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.append);\r\n    }\r\n    if (access.write) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.write);\r\n    }\r\n    if (access.control) {\r\n        newRule = addIri(newRule, acl.mode, internal_accessModeIriStrings.control);\r\n    }\r\n    return newRule;\r\n}\r\n/**\r\n * Creates a new ACL Rule with the same ACL values as the input ACL Rule, but having a different IRI.\r\n *\r\n * Note that non-ACL values will not be copied over.\r\n *\r\n * @hidden This is an internal utility function that should not be used directly by downstreams.\r\n * @param sourceRule ACL rule to duplicate.\r\n */\r\nfunction internal_duplicateAclRule(sourceRule) {\r\n    let targetRule = createThing();\r\n    targetRule = setIri(targetRule, rdf.type, acl.Authorization);\r\n    function copyIris(inputRule, outputRule, predicate) {\r\n        return getIriAll(inputRule, predicate).reduce((outputRule, iriTarget) => addIri(outputRule, predicate, iriTarget), outputRule);\r\n    }\r\n    targetRule = copyIris(sourceRule, targetRule, acl.accessTo);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.default);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.defaultForNew);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agent);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agentGroup);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.agentClass);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.origin);\r\n    targetRule = copyIris(sourceRule, targetRule, acl.mode);\r\n    return targetRule;\r\n}\r\nfunction internal_setAcl(resource, acl) {\r\n    return Object.assign(internal_cloneResource(resource), { internal_acl: acl });\r\n}\r\nconst supportedActorPredicates = [\r\n    acl.agent,\r\n    acl.agentClass,\r\n    acl.agentGroup,\r\n    acl.origin,\r\n];\r\n/**\r\n * Given an ACL Rule, returns two new ACL Rules that cover all the input Rule's use cases,\r\n * except for giving the given Actor access to the given Resource.\r\n *\r\n * @param rule The ACL Rule that should no longer apply for a given Actor to a given Resource.\r\n * @param actor The Actor that should be removed from the Rule for the given Resource.\r\n * @param resourceIri The Resource to which the Rule should no longer apply for the given Actor.\r\n * @returns A tuple with the original ACL Rule without the given Actor, and a new ACL Rule for the given Actor for the remaining Resources, respectively.\r\n */\r\nfunction internal_removeActorFromRule(rule, actor, actorPredicate, resourceIri, ruleType) {\r\n    // If the existing Rule does not apply to the given Actor, we don't need to split up.\r\n    // Without this check, we'd be creating a new rule for the given Actor (ruleForOtherTargets)\r\n    // that would give it access it does not currently have:\r\n    if (!getIriAll(rule, actorPredicate).includes(actor)) {\r\n        const emptyRule = internal_initialiseAclRule({\r\n            read: false,\r\n            append: false,\r\n            write: false,\r\n            control: false,\r\n        });\r\n        return [rule, emptyRule];\r\n    }\r\n    // The existing rule will keep applying to Actors other than the given one:\r\n    const ruleWithoutActor = removeIri(rule, actorPredicate, actor);\r\n    // The actor might have been given other access in the existing rule, so duplicate it...\r\n    let ruleForOtherTargets = internal_duplicateAclRule(rule);\r\n    // ...but remove access to the original Resource...\r\n    ruleForOtherTargets = removeIri(ruleForOtherTargets, ruleType === \"resource\" ? acl.accessTo : acl.default, resourceIri);\r\n    // Prevents the legacy predicate 'acl:defaultForNew' to lead to privilege escalation\r\n    if (ruleType === \"default\") {\r\n        ruleForOtherTargets = removeIri(ruleForOtherTargets, acl.defaultForNew, resourceIri);\r\n    }\r\n    // ...and only apply the new Rule to the given Actor (because the existing Rule covers the others):\r\n    ruleForOtherTargets = setIri(ruleForOtherTargets, actorPredicate, actor);\r\n    supportedActorPredicates\r\n        .filter((predicate) => predicate !== actorPredicate)\r\n        .forEach((predicate) => {\r\n        ruleForOtherTargets = removeAll(ruleForOtherTargets, predicate);\r\n    });\r\n    return [ruleWithoutActor, ruleForOtherTargets];\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Actor's access.\r\n *\r\n * If rules for Actor's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Actors through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Actors for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param actor The Actor to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Actor for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction internal_setActorAccess(aclDataset, access, actorPredicate, accessType, actor) {\r\n    // First make sure that none of the pre-existing rules in the given ACL SolidDataset\r\n    // give the Agent access to the Resource:\r\n    let filteredAcl = aclDataset;\r\n    getThingAll(aclDataset).forEach((aclRule) => {\r\n        // Obtain both the Rule that no longer includes the given Actor,\r\n        // and a new Rule that includes all ACL Quads\r\n        // that do not pertain to the given Actor-Resource combination.\r\n        // Note that usually, the latter will no longer include any meaningful statements;\r\n        // we'll clean them up afterwards.\r\n        const [filteredRule, remainingRule] = internal_removeActorFromRule(aclRule, actor, actorPredicate, aclDataset.internal_accessTo, accessType);\r\n        filteredAcl = setThing(filteredAcl, filteredRule);\r\n        filteredAcl = setThing(filteredAcl, remainingRule);\r\n    });\r\n    // Create a new Rule that only grants the given Actor the given Access Modes:\r\n    let newRule = internal_initialiseAclRule(access);\r\n    newRule = setIri(newRule, accessType === \"resource\" ? acl.accessTo : acl.default, aclDataset.internal_accessTo);\r\n    newRule = setIri(newRule, actorPredicate, actor);\r\n    const updatedAcl = setThing(filteredAcl, newRule);\r\n    // Remove any remaining Rules that do not contain any meaningful statements:\r\n    return internal_removeEmptyAclRules(updatedAcl);\r\n}\r\nfunction internal_setResourceAcl(resource, acl) {\r\n    const newAcl = {\r\n        resourceAcl: acl,\r\n        fallbackAcl: null,\r\n    };\r\n    return internal_setAcl(resource, newAcl);\r\n}\r\nfunction internal_getResourceAcl(resource) {\r\n    return resource.internal_acl.resourceAcl;\r\n}\r\n/**\r\n * This error indicates that, if we're following a Link with rel=\"acl\",\r\n * it does not result in a WAC ACL, but in an ACP ACR.\r\n */\r\nclass AclIsAcrError extends Error {\r\n    constructor(sourceResource, aclResource) {\r\n        super(`[${getSourceIri(sourceResource)}] is governed by Access Control Policies in [${getSourceIri(aclResource)}] rather than by Web Access Control.`);\r\n    }\r\n}\n\nexport { internal_accessModeIriStrings, internal_combineAccessModes, internal_duplicateAclRule, internal_fetchAcl, internal_fetchFallbackAcl, internal_fetchResourceAcl, internal_getAccess, internal_getAccessByIri, internal_getAclRules, internal_getAclRulesForIri, internal_getContainerPath, internal_getDefaultAclRulesForResource, internal_getResourceAcl, internal_getResourceAclRulesForResource, internal_initialiseAclRule, internal_removeEmptyAclRules, internal_setAcl, internal_setActorAccess, internal_setResourceAcl };\n","import { acp } from '../constants.mjs';\nimport { getLinkedResourceUrlAll } from '../resource/resource.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * @param linkedAccessResource A Resource exposed via the Link header of another Resource with rel=\"acl\".\r\n * @returns Whether that Resource is an ACP ACR or not (in which case it's likely a WAC ACL).\r\n */\r\nfunction isAcr(linkedAccessResource) {\r\n    const relTypeLinks = getLinkedResourceUrlAll(linkedAccessResource)[\"type\"];\r\n    return (Array.isArray(relTypeLinks) &&\r\n        relTypeLinks.includes(acp.AccessControlResource));\r\n}\n\nexport { isAcr };\n","import { acl } from '../constants.mjs';\nimport { getSolidDataset, createSolidDataset, saveSolidDatasetAt } from '../resource/solidDataset.mjs';\nimport { setThing } from '../thing/thing.mjs';\nimport { removeAll } from '../thing/remove.mjs';\nimport { setIri } from '../thing/set.mjs';\nimport { getSourceUrl, internal_defaultFetchOptions, getResourceInfo } from '../resource/resource.mjs';\nimport { getFile } from '../resource/file.mjs';\nimport { internal_cloneResource } from '../resource/resource.internal.mjs';\nimport { internal_fetchAcl, internal_setAcl, internal_getAclRules, internal_getDefaultAclRulesForResource } from './acl.internal.mjs';\nimport { freeze } from '../rdf.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verify whether a given SolidDataset was fetched together with its Access Control List.\r\n *\r\n * @param dataset A [[SolidDataset]] that may have its ACLs attached.\r\n * @returns True if `dataset` was fetched together with its ACLs.\r\n */\r\nfunction hasAcl(dataset) {\r\n    const potentialAcl = dataset;\r\n    return typeof potentialAcl.internal_acl === \"object\";\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verifies whether the given Resource has a resource ACL (Access Control List) attached.\r\n *\r\n * The [[hasResourceAcl]] function checks that:\r\n * - a given Resource has a resource ACL attached, and\r\n * - the user calling [[hasResourceAcl]] has Control access to the Resource.\r\n *\r\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\r\n *\r\n * @param resource A Resource that might have an ACL attached.\r\n * @returns `true` if the Resource has a resource ACL attached that is accessible by the user.\r\n */\r\nfunction hasResourceAcl(resource) {\r\n    return (resource.internal_acl.resourceAcl !== null &&\r\n        getSourceUrl(resource) ===\r\n            resource.internal_acl.resourceAcl.internal_accessTo &&\r\n        resource.internal_resourceInfo.aclUrl ===\r\n            getSourceUrl(resource.internal_acl.resourceAcl));\r\n}\r\n/**\r\n * Experimental: fetch a SolidDataset and its associated Access Control List.\r\n *\r\n * This is an experimental function that fetches both a Resource, the linked ACL Resource (if\r\n * available), and the ACL that applies to it if the linked ACL Resource is not available. This can\r\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\r\n * provide this info in a single request. Therefore, and because this function is still\r\n * experimental, prefer [[getSolidDataset]] instead.\r\n *\r\n * If the Resource does not advertise the ACL Resource (because the authenticated user does not have\r\n * access to it), the `acl` property in the returned value will be null. `acl.resourceAcl` will be\r\n * undefined if the Resource's linked ACL Resource could not be fetched (because it does not exist),\r\n * and `acl.fallbackAcl` will be null if the applicable Container's ACL is not accessible to the\r\n * authenticated user.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A SolidDataset and the ACLs that apply to it, if available to the authenticated user.\r\n */\r\nasync function getSolidDatasetWithAcl(url, options = internal_defaultFetchOptions) {\r\n    const solidDataset = await getSolidDataset(url, options);\r\n    const acl = await internal_fetchAcl(solidDataset, options);\r\n    return internal_setAcl(solidDataset, acl);\r\n}\r\n/**\r\n * ```{note} This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Retrieves a file, its resource ACL (Access Control List) if available,\r\n * and its fallback ACL from a URL and returns them as a blob.\r\n *\r\n * If the user calling the function does not have access to the file's resource ACL,\r\n * [[hasAccessibleAcl]] on the returned blob returns false.\r\n * If the user has access to the file's resource ACL but the resource ACL does not exist,\r\n * [[getResourceAcl]] on the returned blob returns null.\r\n * If the fallback ACL is inaccessible by the user,\r\n * [[getFallbackAcl]] on the returned blob returns null.\r\n *\r\n * ```{tip}\r\n * To retrieve the ACLs, the function results in multiple HTTP requests rather than a single\r\n * request as mandated by the Solid spec. As such, prefer [[getFile]] instead if you do not need the ACL.\r\n * ```\r\n *\r\n * @param url The URL of the fetched file\r\n * @param options Fetching options: a custom fetcher and/or headers.\r\n * @returns A file and its ACLs, if available to the authenticated user, as a blob.\r\n * @since 0.2.0\r\n */\r\nasync function getFileWithAcl(input, options = internal_defaultFetchOptions) {\r\n    const file = await getFile(input, options);\r\n    const acl = await internal_fetchAcl(file, options);\r\n    return internal_setAcl(file, acl);\r\n}\r\n/**\r\n * Experimental: fetch a Resource's metadata and its associated Access Control List.\r\n *\r\n * This is an experimental function that fetches both a Resource's metadata, the linked ACL Resource (if\r\n * available), and the ACL that applies to it if the linked ACL Resource is not available (if accessible). This can\r\n * result in many HTTP requests being executed, in lieu of the Solid spec mandating servers to\r\n * provide this info in a single request.\r\n *\r\n * If the Resource's linked ACL Resource could not be fetched (because it does not exist, or because\r\n * the authenticated user does not have access to it), `acl.resourceAcl` will be `null`. If the\r\n * applicable Container's ACL is not accessible to the authenticated user, `acl.fallbackAcl` will be\r\n * `null`.\r\n *\r\n * @param url URL of the SolidDataset to fetch.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n * @returns A Resource's metadata and the ACLs that apply to the Resource, if available to the authenticated user.\r\n */\r\nasync function getResourceInfoWithAcl(url, options = internal_defaultFetchOptions) {\r\n    const resourceInfo = await getResourceInfo(url, options);\r\n    const acl = await internal_fetchAcl(resourceInfo, options);\r\n    return internal_setAcl(resourceInfo, acl);\r\n}\r\nfunction getResourceAcl(resource) {\r\n    if (!hasResourceAcl(resource)) {\r\n        return null;\r\n    }\r\n    return resource.internal_acl.resourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Verifies whether the given Resource has a fallback ACL (Access Control List) attached.\r\n *\r\n * A fallback ACL for a Resource is inherited from the Resource's parent Container\r\n * (or another of its ancestor Containers) and applies if the Resource does\r\n * not have its own resource ACL.\r\n *\r\n * The [[hasFallbackAcl]] function checks that:\r\n * - a given Resource has a fallback ACL attached, and\r\n * - the user calling [[hasFallbackAcl]] has Control access to the Container\r\n * from which the Resource inherits its ACL.\r\n *\r\n * To retrieve a Resource with its ACLs, see [[getSolidDatasetWithAcl]].\r\n *\r\n * @param resource A [[SolidDataset]] that might have a fallback ACL attached.\r\n *\r\n * @returns `true` if the Resource has a fallback ACL attached that is accessible to the user.\r\n */\r\nfunction hasFallbackAcl(resource) {\r\n    return resource.internal_acl.fallbackAcl !== null;\r\n}\r\nfunction getFallbackAcl(dataset) {\r\n    if (!hasFallbackAcl(dataset)) {\r\n        return null;\r\n    }\r\n    return dataset.internal_acl.fallbackAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Creates an empty resource ACL (Access Control List) for a given Resource.\r\n *\r\n * @param targetResource A Resource that does not have its own ACL yet (see [[hasResourceAcl]]).\r\n * @returns An empty resource ACL for the given Resource.\r\n */\r\nfunction createAcl(targetResource) {\r\n    const emptyResourceAcl = freeze(Object.assign(Object.assign({}, createSolidDataset()), { internal_accessTo: getSourceUrl(targetResource), internal_resourceInfo: {\r\n            sourceIri: targetResource.internal_resourceInfo.aclUrl,\r\n            isRawData: false,\r\n            linkedResources: {},\r\n        } }));\r\n    return emptyResourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Creates a resource ACL (Access Control List), initialised from the fallback ACL\r\n * inherited from the given Resource's Container (or another of its ancestor Containers).\r\n * That is, the new ACL has the same rules/entries as the fallback ACL that currently\r\n * applies to the Resource.\r\n *\r\n * @param resource A Resource without its own resource ACL (see [[hasResourceAcl]]) but with an accessible fallback ACL (see [[hasFallbackAcl]]).\r\n * @returns A resource ACL initialised with the rules/entries from the Resource's fallback ACL.\r\n */\r\nfunction createAclFromFallbackAcl(resource) {\r\n    const emptyResourceAcl = createAcl(resource);\r\n    const fallbackAclRules = internal_getAclRules(resource.internal_acl.fallbackAcl);\r\n    const defaultAclRules = internal_getDefaultAclRulesForResource(fallbackAclRules, resource.internal_acl.fallbackAcl.internal_accessTo);\r\n    const newAclRules = defaultAclRules.map((rule) => {\r\n        rule = removeAll(rule, acl.default);\r\n        rule = removeAll(rule, acl.defaultForNew);\r\n        rule = setIri(rule, acl.accessTo, getSourceUrl(resource));\r\n        rule = setIri(rule, acl.default, getSourceUrl(resource));\r\n        return rule;\r\n    });\r\n    // Iterate over every ACL Rule we want to import, inserting them into `emptyResourceAcl` one by one:\r\n    const initialisedResourceAcl = newAclRules.reduce(setThing, emptyResourceAcl);\r\n    return initialisedResourceAcl;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Saves the resource ACL for a Resource.\r\n *\r\n * @param resource The Resource to which the given resource ACL applies.\r\n * @param resourceAcl An [[AclDataset]] whose ACL Rules will apply to `resource`.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n */\r\nasync function saveAclFor(resource, resourceAcl, options = internal_defaultFetchOptions) {\r\n    if (!hasAccessibleAcl(resource)) {\r\n        throw new Error(`Could not determine the location of the ACL for the Resource at [${getSourceUrl(resource)}]; possibly the current user does not have Control access to that Resource. Try calling \\`hasAccessibleAcl()\\` before calling \\`saveAclFor()\\`.`);\r\n    }\r\n    const savedDataset = await saveSolidDatasetAt(resource.internal_resourceInfo.aclUrl, resourceAcl, options);\r\n    const savedAclDataset = Object.assign(Object.assign({}, savedDataset), { internal_accessTo: getSourceUrl(resource) });\r\n    return savedAclDataset;\r\n}\r\n/**\r\n * ```{note} The Web Access Control specification is not yet finalised. As such, this\r\n * function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Removes the resource ACL (Access Control List) from a Resource.\r\n *\r\n * Once the resource ACL is removed from the Resource, the Resource relies on the\r\n * fallback ACL inherited from the Resource's parent Container (or another of its ancestor Containers).\r\n *\r\n * @param resource The Resource for which you want to delete the ACL.\r\n * @param options Optional parameter `options.fetch`: An alternative `fetch` function to make the HTTP request, compatible with the browser-native [fetch API](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/fetch#parameters).\r\n */\r\nasync function deleteAclFor(resource, options = internal_defaultFetchOptions) {\r\n    const config = Object.assign(Object.assign({}, internal_defaultFetchOptions), options);\r\n    const response = await config.fetch(resource.internal_resourceInfo.aclUrl, {\r\n        method: \"DELETE\",\r\n    });\r\n    if (!response.ok) {\r\n        throw new Error(`Deleting the ACL of the Resource at [${getSourceUrl(resource)}] failed: [${response.status}] [${response.statusText}].`);\r\n    }\r\n    const storedResource = Object.assign(internal_cloneResource(resource), {\r\n        acl: {\r\n            resourceAcl: null,\r\n        },\r\n    });\r\n    return storedResource;\r\n}\r\n/**\r\n * Given a [[SolidDataset]], verify whether its Access Control List is accessible to the current user.\r\n *\r\n * This should generally only be true for SolidDatasets fetched by\r\n * [[getSolidDatasetWithAcl]].\r\n *\r\n * Please note that the Web Access Control specification is not yet finalised, and hence, this\r\n * function is still experimental and can change in a non-major release.\r\n *\r\n * @param dataset A [[SolidDataset]].\r\n * @returns Whether the given `dataset` has a an ACL that is accessible to the current user.\r\n */\r\nfunction hasAccessibleAcl(dataset) {\r\n    return typeof dataset.internal_resourceInfo.aclUrl === \"string\";\r\n}\n\nexport { createAcl, createAclFromFallbackAcl, deleteAclFor, getFallbackAcl, getFileWithAcl, getResourceAcl, getResourceInfoWithAcl, getSolidDatasetWithAcl, hasAccessibleAcl, hasAcl, hasFallbackAcl, hasResourceAcl, saveAclFor };\n","import { getIri } from '../thing/get.mjs';\nimport { acl } from '../constants.mjs';\nimport { hasResourceAcl, hasFallbackAcl, getResourceAcl, getFallbackAcl } from './acl.mjs';\nimport { internal_combineAccessModes, internal_getAccessByIri, internal_getAclRules, internal_getResourceAclRulesForResource, internal_getAclRulesForIri, internal_getAccess, internal_setActorAccess, internal_getDefaultAclRulesForResource } from './acl.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's explicitly-granted Access Modes for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to the Agent through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to the Agent for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccess(resourceInfo, agent) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getAgentResourceAccess(resourceInfo.internal_acl.resourceAcl, agent);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getAgentDefaultAccess(resourceInfo.internal_acl.fallbackAcl, agent);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Returns all explicitly-granted Access Modes per Agent for the given Resource.\r\n *\r\n * The function does not return Access Modes granted indirectly to Agents through other\r\n * ACL rules, e.g., public or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which Agents may have been granted access.\r\n * @returns Access Modes per Agent that have been explicitly granted for the given Resource, or `null` if it could not be determined (e.g. because the current user does not have Control access to a given Resource or its Container).\r\n */\r\nfunction getAgentAccessAll(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        const resourceAcl = getResourceAcl(resourceInfo);\r\n        return getAgentResourceAccessAll(resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        const fallbackAcl = getFallbackAcl(resourceInfo);\r\n        return getAgentDefaultAccessAll(fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes explicitly granted to an Agent for the Resource\r\n * associated with an ACL (Access ControlList).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the child Resources if the associated Resource is a Container (see [[getAgentDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Resource.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the explicitly granted Access Modes per Agent for the Resource associated\r\n * with an ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n *\r\n * @param aclDataset The SolidDataset that contains ACL rules.\r\n * @returns Access Modes per Agent that have been explicitly granted for the Resource associated with an ACL SolidDataset.\r\n */\r\nfunction getAgentResourceAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the given Agent.\r\n * Specifically, the function returns a new resource ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules for Agent's access already exist in the given ACL, in the returned ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n *\r\n * - Access Modes granted indirectly to Agents through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to Agents for the child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent for the Resource.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentResourceAccess(aclDataset, agent, access) {\r\n    return internal_setActorAccess(aclDataset, access, acl.agent, \"resource\", agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns an Agent's Access Modes explicitly granted for the children of the\r\n * Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself (see [[getAgentResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules for a certain Container.\r\n * @param agent WebID of the Agent for which to retrieve what access it has to the Container's children.\r\n * @returns Access Modes that have been explicitly granted to an Agent for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccess(aclDataset, agent) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRulesForAgent(resourceRules, agent);\r\n    const agentAccessModes = agentResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(agentAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes, per Agent, that have been explicitly granted for the children\r\n * of the Container associated with the given ACL (Access Control List).\r\n *\r\n * The function does not return:\r\n *\r\n * - Access Modes granted indirectly to the Agents through other ACL rules, e.g. public or group-specific permissions.\r\n * - Access Modes granted to the Agents for the Container Resource itself (see [[getAgentResourceAccessAll]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @returns Access Modes, per Agent, that have been explicitly granted for the children of the Container associated with the given ACL.\r\n */\r\nfunction getAgentDefaultAccessAll(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const agentResourceRules = getAgentAclRules(resourceRules);\r\n    return getAccessByAgent(agentResourceRules);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set an Agent's Access Modes for the Container's children.\r\n * Specifically, the function returns a new default ACL initialised with the given ACL and\r\n * new rules for the Agent's access.\r\n *\r\n * If rules already exist for the Agent in the given ACL, in the returned ACL, they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted indirectly to the Agent through other ACL rules, e.g., public or group-specific permissions.\r\n * - Access Modes granted to the Agent for the Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access-Control List rules.\r\n * @param agent The Agent to grant specific Access Modes.\r\n * @param access The Access Modes to grant to the Agent.\r\n * @returns A new default ACL initialised with the given `aclDataset` and `access` for the `agent`.\r\n */\r\nfunction setAgentDefaultAccess(aclDataset, agent, access) {\r\n    return internal_setActorAccess(aclDataset, access, acl.agent, \"default\", agent);\r\n}\r\nfunction getAgentAclRulesForAgent(aclRules, agent) {\r\n    return internal_getAclRulesForIri(aclRules, agent, acl.agent);\r\n}\r\nfunction getAgentAclRules(aclRules) {\r\n    return aclRules.filter(isAgentAclRule);\r\n}\r\nfunction isAgentAclRule(aclRule) {\r\n    return getIri(aclRule, acl.agent) !== null;\r\n}\r\nfunction getAccessByAgent(aclRules) {\r\n    return internal_getAccessByIri(aclRules, acl.agent);\r\n}\n\nexport { getAgentAccess, getAgentAccessAll, getAgentDefaultAccess, getAgentDefaultAccessAll, getAgentResourceAccess, getAgentResourceAccessAll, setAgentDefaultAccess, setAgentResourceAccess };\n","export interface JSONLD{\n    \"@context\": any,\n    \"@graph\": any[]\n}\n\nexport class AccessRights{\n    public read: boolean = false;\n    public append: boolean = false;\n    public write: boolean = false;\n    public control: boolean = false;\n}\n\nexport enum ResourceType{\n    FILE=\"file\",\n    DATASET=\"dataset\",\n    CONTAINER=\"container\"\n}\n\nexport enum Mimetype{\n    NTriples=\"application/n-triples\",\n    Turtle=\"text/turtle\",\n    NQuads=\"application/n-quads\",\n    Trig=\"application/trig\",\n    SPARQLJSON=\"application/sparql-results+json\",\n    JSONLD=\"application/ld+json\",\n    DLOG=\"application/x.datalog\",\n    Text=\"text/plain\"\n}","// Import from \"@inrupt/solid-client\"\nimport {\n    getSolidDatasetWithAcl,\n    setPublicResourceAccess,\n    hasResourceAcl,\n    hasAccessibleAcl,\n    getResourceAcl,\n    createAclFromFallbackAcl,\n    hasFallbackAcl,\n    saveAclFor,\n    setAgentResourceAccess,\n    getFileWithAcl\n} from \"@inrupt/solid-client\";\nimport { AccessRights, ResourceType } from \"./BaseDefinitions\";\n\nexport class AccessService{\n\n    public fetch;\n    public verbose: boolean = false;\n\n    constructor(fetch: any, verbose: boolean = false){\n        this.fetch = fetch;\n        this.verbose = verbose;\n    }\n\n    // Make a resource public\n    public async makePublic(resourceURL: string) {\n        const accessRights: AccessRights = { read: true, append: true, write: false, control: false };\n        return this.setResourceAccess(resourceURL, accessRights, ResourceType.CONTAINER);\n    }\n\n    public async makeFilePublic(resourceURL: string) {\n        const accessRights: AccessRights = { read: true, append: true, write: false, control: false };\n        return this.setResourceAccess(resourceURL, accessRights, ResourceType.FILE);\n    }\n\n    public async setResourceAccess(resourceURL: string, accessRights: AccessRights, type: ResourceType, userWebID?: string){\n\n        // Get resource with ACL\n        let resourceWithAcl: any\n        if(type == ResourceType.DATASET || type == ResourceType.CONTAINER){\n            resourceWithAcl = await getSolidDatasetWithAcl(resourceURL, {fetch: this.fetch});\n        }\n\n        if(type == ResourceType.FILE){\n            resourceWithAcl = await getFileWithAcl(resourceURL, {fetch: this.fetch});\n        }\n        \n        // Get resource ACL\n        const resourceAcl = await this.getResourceAcl(resourceWithAcl);\n        \n        // Update ACL access\n        let updatedAcl;\n\n        // If no user webID provided, set the public access\n        if(!userWebID || userWebID == undefined){\n            updatedAcl = setPublicResourceAccess(\n                resourceAcl,\n                accessRights,\n            );\n        }\n        \n        // If user webID provided, set the access for that particular user\n        else{\n            updatedAcl = setAgentResourceAccess(\n                resourceAcl,\n                userWebID,\n                accessRights,\n            );\n        }\n\n        // Save ACL\n        const newAccess = await saveAclFor(resourceWithAcl, updatedAcl, {fetch: this.fetch});\n\n        this.verbose && this.logAccessInfo(accessRights, resourceURL);\n\n        return newAccess;\n\n    }\n\n    // Obtain the SolidDataset's own ACL, if available,\n    // or initialise a new one, if possible:\n    private async getResourceAcl(datasetWithAcl: any){\n\n        let resourceAcl;\n        if (!hasResourceAcl(datasetWithAcl)) {\n        if (!hasAccessibleAcl(datasetWithAcl)) {\n            throw new Error(\n            \"The current user does not have permission to change access rights to this Resource.\"\n            );\n        }\n        if (!hasFallbackAcl(datasetWithAcl)) {\n            throw new Error(\n            \"The current user does not have permission to see who currently has access to this Resource.\"\n            );\n            // Alternatively, initialise a new empty ACL as follows,\n            // but be aware that if you do not give someone Control access,\n            // **nobody will ever be able to change Access permissions in the future**:\n            // resourceAcl = createAcl(myDatasetWithAcl);\n        }\n            resourceAcl = createAclFromFallbackAcl(datasetWithAcl);\n        } else {\n            resourceAcl = getResourceAcl(datasetWithAcl);\n        }\n\n        return resourceAcl;\n    }\n\n    private logAccessInfo(access: any, resource: string, agent: string = \"\"){\n        if (access === null) {\n            console.log(\"Could not load access details for this Resource.\");\n        } else {\n            if(!agent) console.log(`${agent}'s Access:: `, JSON.stringify(access));\n            else console.log(`Public Access:: `, JSON.stringify(access));\n            console.log(\"...\", agent, (access.read ? 'CAN' : 'CANNOT'), \"read the Resource\", resource);\n            console.log(\"...\", agent, (access.append ? 'CAN' : 'CANNOT'), \"add data to the Resource\", resource);\n            console.log(\"...\", agent, (access.write ? 'CAN' : 'CANNOT'), \"change data in the Resource\", resource);\n\n            if ('controlRead' in access){\n                console.log(\"...\", agent, (access.controlRead ? 'CAN' : 'CANNOT'), \"see access to the Resource\", resource);\n                console.log(\"...\", agent, (access.controlWrite ? 'CAN' : 'CANNOT'), \"change access to the Resource\", resource);\n            }else{\n                console.log(\"...\", agent, (access.control ? 'CAN' : 'CANNOT'), \"change access to the Resource\", resource);\n            }\n\n        }\n    }\n\n}","import { acl, foaf } from '../constants.mjs';\nimport { getIriAll } from '../thing/get.mjs';\nimport { hasResourceAcl, hasFallbackAcl } from './acl.mjs';\nimport { internal_combineAccessModes, internal_getAclRules, internal_getResourceAclRulesForResource, internal_getAccess, internal_getDefaultAclRulesForResource, internal_setActorAccess } from './acl.internal.mjs';\n\n/**\r\n * Copyright 2021 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the \"Software\"), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for a Resource.\r\n *\r\n * This function does not return Access Modes granted to specific Agents\r\n * through other ACL (Access Control List) rules, e.g., agent- or group-specific permissions.\r\n *\r\n * @param resourceInfo Information about the Resource to which the given Agent may have been granted access.\r\n * @returns Access Modes granted to the public in general for the Resource, or `null` if it could not be determined (e.g. because the current user does not have Control Access to a given Resource or its Container).\r\n */\r\nfunction getPublicAccess(resourceInfo) {\r\n    if (hasResourceAcl(resourceInfo)) {\r\n        return getPublicResourceAccess(resourceInfo.internal_acl.resourceAcl);\r\n    }\r\n    if (hasFallbackAcl(resourceInfo)) {\r\n        return getPublicDefaultAccess(resourceInfo.internal_acl.fallbackAcl);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for the Resource\r\n * associated with an ACL (Access Control List).\r\n *\r\n * This function does not return:\r\n * - Access Modes granted to specific Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to child Resources if the associated Resource is a Container (see [[getPublicDefaultAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @returns Access Modes granted to the public in general for the Resource associated with the `aclDataset`.\r\n */\r\nfunction getPublicResourceAccess(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getResourceAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const publicResourceRules = getClassAclRulesForClass(resourceRules, foaf.Agent);\r\n    const publicAccessModes = publicResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(publicAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Returns the Access Modes granted to the public in general for the child Resources\r\n * of the Container associated with an ACL (Access Control List).\r\n *\r\n * This function does not return:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to the Container Resource itself (see [[getPublicResourceAccess]] instead).\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules for a certain Container.\r\n * @returns Access Modes granted to the public in general for the children of the Container associated with the given `aclDataset`.\r\n */\r\nfunction getPublicDefaultAccess(aclDataset) {\r\n    const allRules = internal_getAclRules(aclDataset);\r\n    const resourceRules = internal_getDefaultAclRulesForResource(allRules, aclDataset.internal_accessTo);\r\n    const publicResourceRules = getClassAclRulesForClass(resourceRules, foaf.Agent);\r\n    const publicAccessModes = publicResourceRules.map(internal_getAccess);\r\n    return internal_combineAccessModes(publicAccessModes);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the resource ACL (Access Control List) to set the Access Modes for the public.\r\n * Specifically, the function returns a new resource ACL (Access Control List) initialised\r\n * with the given resource ACL and new rules for the given public access.\r\n *\r\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to child Resources if the associated Resource is a Container.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param access The Access Modes to grant to the public.\r\n * @returns A new resource ACL initialised with the given `aclDataset` and public `access`.\r\n */\r\nfunction setPublicResourceAccess(aclDataset, access) {\r\n    return internal_setActorAccess(aclDataset, access, acl.agentClass, \"resource\", foaf.Agent);\r\n}\r\n/**\r\n * ```{note}\r\n * This function is still experimental and subject to change, even in a non-major release.\r\n * ```\r\n *\r\n * Modifies the default ACL (Access Control List) to set the public's default Access Modes\r\n * to child resources. Specifically, the function returns a new default ACL initialised\r\n * with the given default ACL and new rules for the given public access.\r\n *\r\n * If rules for public access already exist in the given ACL, in the *returned* ACL,\r\n * they are replaced by the new rules.\r\n *\r\n * This function does not modify:\r\n * - Access Modes granted to Agents through other ACL rules, e.g., agent- or group-specific permissions.\r\n * - Access Modes to Container Resource itself.\r\n * - The original ACL.\r\n *\r\n * @param aclDataset The SolidDataset that contains Access Control List rules.\r\n * @param access The Access Modes to grant to the public.\r\n * @returns A new default ACL initialised with the given `aclDataset` and public `access`.\r\n */\r\nfunction setPublicDefaultAccess(aclDataset, access) {\r\n    return internal_setActorAccess(aclDataset, access, acl.agentClass, \"default\", foaf.Agent);\r\n}\r\nfunction getClassAclRulesForClass(aclRules, agentClass) {\r\n    return aclRules.filter((rule) => appliesToClass(rule, agentClass));\r\n}\r\nfunction appliesToClass(aclRule, agentClass) {\r\n    return getIriAll(aclRule, acl.agentClass).includes(agentClass);\r\n}\n\nexport { getPublicAccess, getPublicDefaultAccess, getPublicResourceAccess, setPublicDefaultAccess, setPublicResourceAccess };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DELIMITER_PATH = '/';\nexports.DELIMITER_URL_PARTS = '?';\nexports.DELIMITER_SEARCH_PARAMS = '&';\nexports.DELIMITER_SEARCH_VALUES = '=';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst constants_1 = require(\"./constants\");\nconst trimRegex = /^\\/|\\/$/g;\nconst trimPath = (path = '') => path.replace(trimRegex, '');\nconst trimPathNotFirst = (path = '', index) => (index === 0 ? path : path.replace(trimRegex, ''));\nclass UrlJoin {\n    constructor(baseUrl, paths) {\n        this.baseUrl = baseUrl;\n        this.paths = paths;\n        this.params = null;\n    }\n    toString() {\n        const hasBaseUrl = this.baseUrl !== null && this.baseUrl !== undefined;\n        let resultUrl = [this.baseUrl, ...this.paths]\n            .filter(Boolean)\n            .map(hasBaseUrl ? trimPath : trimPathNotFirst)\n            .join(constants_1.DELIMITER_PATH);\n        if (this.hasParams()) {\n            const queryParams = Object.keys(this.params)\n                .map(key => {\n                return encodeURIComponent(key) + constants_1.DELIMITER_SEARCH_VALUES + encodeURIComponent(this.params[key]);\n            })\n                .join(constants_1.DELIMITER_SEARCH_PARAMS);\n            resultUrl += constants_1.DELIMITER_URL_PARTS + queryParams;\n        }\n        return resultUrl;\n    }\n    queryParams(params) {\n        this.params = params;\n        return this;\n    }\n    hasParams() {\n        return !!this.params && Object.keys(this.params).length > 0;\n    }\n}\nexports.UrlJoin = UrlJoin;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst urlJoin_1 = require(\"./urlJoin\");\nfunction urlJoin(baseUrl, ...paths) {\n    return new urlJoin_1.UrlJoin(baseUrl, paths).toString();\n}\nexports.urlJoin = urlJoin;\nfunction urlJoinP(baseUrl, paths, params = {}) {\n    return new urlJoin_1.UrlJoin(baseUrl, paths).queryParams(params).toString();\n}\nexports.urlJoinP = urlJoinP;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./urlJoin\"));\n__export(require(\"./urlJoinFunc\"));\n","// Import from \"@inrupt/solid-client\"\nimport {\n    getSolidDataset,\n    getFile,\n    createContainerAt,\n    deleteFile,\n    deleteContainer,\n    getContainedResourceUrlAll,\n    overwriteFile,\n    getSourceUrl,\n    isContainer\n} from \"@inrupt/solid-client\";\nimport { AccessService } from \"./access-service\";\nimport { Mimetype } from \"./BaseDefinitions\";\n\nexport class DataService{\n\n    public fetch;\n    public verbose: boolean = false;\n    public accessService: AccessService;\n\n    constructor(fetch: any, verbose: boolean = false){\n        this.fetch = fetch;\n        this.verbose = verbose;\n        this.accessService = new AccessService(fetch);\n    }\n\n    /**\n     * FILES\n     */\n\n    // Upload File to the targetFileURL.\n    // If the targetFileURL exists, overwrite the file.\n    // If the targetFileURL does not exist, create the file at the location.\n    public async writeFileToPod(file: File|Buffer, targetFileURL: string, makePublic: boolean = false, contentType: Mimetype = Mimetype.Text) {\n\n        const savedFile = await overwriteFile(\n          targetFileURL,                            // URL for the file.\n          file,                                     // File\n          { contentType, fetch: this.fetch }        // mimetype if known, fetch from the authenticated session\n        );\n        this.verbose && console.log(`File saved at ${getSourceUrl(savedFile)}`);\n\n        if(makePublic){\n            await this.accessService.makeFilePublic(targetFileURL);\n        }\n\n        return savedFile;\n\n    }\n\n    public async getFile(fileURL: string) {\n        this.verbose && console.log(`Getting file ${fileURL}...`);\n        return getFile(\n            fileURL,                // File in Pod to Read\n            { fetch: this.fetch }   // fetch from authenticated session\n        );\n    }\n\n    public async deleteFile(fileURL: string) {\n        this.verbose && console.log(`Deleting file ${fileURL}...`);\n        return deleteFile(\n            fileURL,                // File in Pod to Read\n            { fetch: this.fetch }   // fetch from authenticated session\n        );\n    }\n\n    /**\n     * CONTAINERS\n     */\n\n    public async deleteContainer(containerURL: string, includeSubContainers: boolean = true) {\n\n        // If deleting subcontainers, we need to first get these\n        if(includeSubContainers){\n            console.log(`Deleting container ${containerURL} including its subfolders...`);\n            const dataset = await getSolidDataset( containerURL, { fetch: this.fetch } );\n            const containerResources = await getContainedResourceUrlAll( dataset );\n\n            // Delete resources (containers and files)\n            for(let resource of containerResources){\n                if(isContainer(resource)){\n                    await this.deleteContainer(resource, true);\n                }\n                else{\n                    await this.deleteFile(resource);\n                }\n            }\n        }\n\n        console.log(`Deleting container ${containerURL}...`);\n        return deleteContainer( containerURL, { fetch: this.fetch } );\n        \n    }\n\n    public async createContainer(containerURL: string, makePublic: boolean = false) {\n        \n        this.verbose && console.log(`Creating container ${containerURL}...`);\n\n        const datasetWithAcl = await createContainerAt(\n            containerURL,           // File in Pod to Read\n            { fetch: this.fetch }   // fetch from authenticated session\n        );\n\n        if(makePublic){\n            await this.accessService.makePublic(containerURL);\n        }\n\n        return datasetWithAcl;\n    }\n\n}","import * as SparkMD5 from 'spark-md5';\n\nexport function computeChecksumMd5(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const chunkSize = 5242880; // Read in chunks of 5MB\n      const spark = new SparkMD5.ArrayBuffer();\n      const fileReader = new FileReader();\n  \n      let cursor = 0; // current cursor in file\n  \n      fileReader.onerror = function(): void {\n        reject('MD5 computation failed - error reading the file');\n      };\n  \n      // read chunk starting at `cursor` into memory\n      function processChunk(chunk_start: number): void {\n        const chunk_end = Math.min(file.size, chunk_start + chunkSize);\n        \n        fileReader.readAsArrayBuffer(file.slice(chunk_start, chunk_end));\n      }\n  \n      // when it's available in memory, process it\n      // If using TS >= 3.6, you can use `FileReaderProgressEvent` type instead \n      // of `any` for `e` variable, otherwise stick with `any`\n      // See https://github.com/Microsoft/TypeScript/issues/25510\n      fileReader.onload = function(e: any): void {\n        spark.append(e.target.result); // Accumulate chunk to md5 computation\n        cursor += chunkSize; // Move past this chunk\n  \n        if (cursor < file.size) {\n          // Enqueue next chunk to be accumulated\n          processChunk(cursor);\n        } else {\n          // Computation ended, last chunk has been processed. Return as Promise value.\n          // This returns the base64 encoded md5 hash, which is what\n          // Rails ActiveStorage or cloud services expect\n          // resolve(btoa(spark.end(true)));\n  \n          // If you prefer the hexdigest form (looking like\n          // '7cf530335b8547945f1a48880bc421b2'), replace the above line with:\n          resolve(spark.end());\n        }\n      };\n  \n      processChunk(0);\n    });\n  }","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash.slice()\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} [raw] True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} [raw]     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     [raw] True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Web Access Control Vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$C = \"http://www.w3.org/ns/auth/acl#\";\r\nfunction _NS$C(localName) {\r\n    return (_NAMESPACE$C + localName);\r\n}\r\n/**\r\n * [Generator provided] - Web Access Control Vocabulary\r\n */\r\nvar ACL = {\r\n    PREFIX: \"acl\",\r\n    NAMESPACE: _NAMESPACE$C,\r\n    PREFIX_AND_NAMESPACE: { \"acl\": \"http://www.w3.org/ns/auth/acl#\" },\r\n    NS: _NS$C,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Any kind of access to a resource. Don't use this, use R W and RW\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [NoLocale].\r\n     */\r\n    Access: _NS$C(\"Access\"),\r\n    /**\r\n     * Append accesses are specific write access which only add information, and do not remove information.\r\n      For text files, for example, append access allows bytes to be added onto the end of the file.\r\n      For RDF graphs, Append access allows adds triples to the graph but does not remove any.\r\n      Append access is useful for dropbox functionality.\r\n      Dropbox can be used for link notification, which the information added is a notification\r\n      that a some link has been made elsewhere relevant to the given resource.\r\n      \n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Append: _NS$C(\"Append\"),\r\n    /**\r\n     * write\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Write: _NS$C(\"Write\"),\r\n    /**\r\n     * A class of agents who have been authenticated.\r\n  In other words, anyone can access this resource, but not anonymously.\r\n  The social expectation is that the authentication process will provide an\r\n  identify and a name, or pseudonym.\r\n  (A new ID should not be minted for every access: the intent is that the user\r\n  is able to continue to use the ID for continues interactions with peers,\r\n  and for example to develop a reputation)\r\n  \n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    AuthenticatedAgent: _NS$C(\"AuthenticatedAgent\"),\r\n    /**\r\n     * An element of access control,\r\n      allowing agent to agents access of some kind to resources or classes of resources\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Authorization: _NS$C(\"Authorization\"),\r\n    /**\r\n     * Allows read/write access to the ACL for the resource(s)\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Control: _NS$C(\"Control\"),\r\n    /**\r\n     * An Origin is basically a web site\r\n          (Note WITHOUT the trailing slash after the domain name and port in its URI)\r\n          and is the basis for controlling access to data by web apps\r\n          in the Same Origin Model of web security.\r\n          All scripts from the same origin are given the same right.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin\r\n     */\r\n    Origin: _NS$C(\"Origin\"),\r\n    /**\r\n     * The class of read operations\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Read: _NS$C(\"Read\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The Access Control file for this information resource.\r\n          This may of course be a virtual resource implemented by the access control system.\r\n          Note also HTTP's header  Link:  foo.meta ;rel=meta can be used for this.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    accessControl: _NS$C(\"accessControl\"),\r\n    /**\r\n     * The information resource to which access is being granted.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    accessTo: _NS$C(\"accessTo\"),\r\n    /**\r\n     * A class of information resources to which access is being granted.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    accessToClass: _NS$C(\"accessToClass\"),\r\n    /**\r\n     * A person or social entity to being given the right\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    agent: _NS$C(\"agent\"),\r\n    /**\r\n     * A class of persons or social entities to being given the right\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    agentClass: _NS$C(\"agentClass\"),\r\n    /**\r\n     * A group of persons or social entities to being given the right.\r\n            The right is given to any entity which is a vcard:member of the group,\r\n            as defined by the document received when the Group is dereferenced.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    agentGroup: _NS$C(\"agentGroup\"),\r\n    /**\r\n     * If a resource has no ACL file (it is 404),\r\n          then access to the resource if given by the ACL of the immediately\r\n          containing directory, or failing that (404) the ACL of the recursively next\r\n          containing directory which has an ACL file.\r\n          Within that ACL file,\r\n          any Authentication which has that directory as its acl:default applies to the\r\n          resource. (The highest directory must have an ACL file.)\r\n  \n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    default: _NS$C(\"default\"),\r\n    /**\r\n     * THIS IS OBSOLETE AS OF 2017-08-01.   See 'default'.\r\n          Was: A directory for which this authorization is used for new files in the directory.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    defaultForNew: _NS$C(\"defaultForNew\"),\r\n    /**\r\n     * Delegates a person or another agent to act on behalf of the agent.\r\n      For example, Alice delegates Bob to act on behalf of Alice for ACL purposes.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    delegates: _NS$C(\"delegates\"),\r\n    /**\r\n     * A mode of access such as read or write.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    mode: _NS$C(\"mode\"),\r\n    /**\r\n     * A web application, identified by its Origin, such as\r\n          <https://scripts.example.com>, being given the right.\r\n          When a user of the web application at a certain origin accesses the server,\r\n          then the browser sets the Origin: header to warn that a possibly untrusted webapp\r\n          is being used.\r\n          Then, BOTH the user AND the origin must have the required access.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin\r\n     */\r\n    origin: _NS$C(\"origin\"),\r\n    /**\r\n     * The person or other agent which owns this.\r\n      For example, the owner of a file in a filesystem.\r\n      There is a sense of right to control.   Typically defaults to the agent who craeted\r\n      something but can be changed.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    owner: _NS$C(\"owner\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * This ontology allows for the description of representations of Internet resources.\r\n\nRepresentations may conform to prof:Profile instances and may have the format of a particular dct:MediaType.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$B = \"http://www.w3.org/ns/dx/conneg/altr#\";\r\nfunction _NS$B(localName) {\r\n    return (_NAMESPACE$B + localName);\r\n}\r\n/**\r\n * This ontology allows for the description of representations of Internet resources.\r\n\nRepresentations may conform to prof:Profile instances and may have the format of a particular dct:MediaType.\r\n */\r\nvar ALTR = {\r\n    PREFIX: \"altr\",\r\n    NAMESPACE: _NAMESPACE$B,\r\n    PREFIX_AND_NAMESPACE: { \"altr\": \"http://www.w3.org/ns/dx/conneg/altr#\" },\r\n    NS: _NS$B,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * An abstraction of the current or desired state of a thing in HTTP communications.\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/dx/connegp/altp\r\n     */\r\n    Representation: _NS$B(\"Representation\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Indicates a Representation of a Resource.\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    hasRepresentation: _NS$B(\"hasRepresentation\"),\r\n    /**\r\n     * Indicates the default Representation of a Resource.\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    hasDefaultRepresentation: _NS$B(\"hasDefaultRepresentation\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * Extended Activity Streams 2.0 Vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$A = \"https://www.w3.org/ns/activitystreams#\";\r\nfunction _NS$A(localName) {\r\n    return (_NAMESPACE$A + localName);\r\n}\r\n/**\r\n * Extended Activity Streams 2.0 Vocabulary\r\n */\r\nvar AS = {\r\n    PREFIX: \"as\",\r\n    NAMESPACE: _NAMESPACE$A,\r\n    PREFIX_AND_NAMESPACE: { \"as\": \"https://www.w3.org/ns/activitystreams#\" },\r\n    NS: _NS$A,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * An Object representing some form of Action that has been taken\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Activity: _NS$A(\"Activity\"),\r\n    /**\r\n     * Object\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Object: _NS$A(\"Object\"),\r\n    /**\r\n     * Represents a qualified reference to another resource. Patterned after the RFC5988 Web Linking Model\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Link: _NS$A(\"Link\"),\r\n    /**\r\n     * A rdf:List variant for Objects and Links\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    OrderedItems: _NS$A(\"OrderedItems\"),\r\n    /**\r\n     * An ordered or unordered collection of Objects or Links\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Collection: _NS$A(\"Collection\"),\r\n    /**\r\n     * A subset of items from a Collection\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    CollectionPage: _NS$A(\"CollectionPage\"),\r\n    /**\r\n     * An Image file\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Image: _NS$A(\"Image\"),\r\n    /**\r\n     * Represents a digital document/file of any sort\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Document: _NS$A(\"Document\"),\r\n    /**\r\n     * Represents a Social Graph relationship between two Individuals (indicated by the 'a' and 'b' properties)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Relationship: _NS$A(\"Relationship\"),\r\n    /**\r\n     * A question of any sort.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Question: _NS$A(\"Question\"),\r\n    /**\r\n     * An Activity that has no direct object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    IntransitiveActivity: _NS$A(\"IntransitiveActivity\"),\r\n    /**\r\n     * A Profile Document\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Profile: _NS$A(\"Profile\"),\r\n    /**\r\n     * A placeholder for a deleted object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Tombstone: _NS$A(\"Tombstone\"),\r\n    /**\r\n     * A physical or logical location\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Place: _NS$A(\"Place\"),\r\n    /**\r\n     * An ordered subset of items from an OrderedCollection\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    OrderedCollectionPage: _NS$A(\"OrderedCollectionPage\"),\r\n    /**\r\n     * A variation of Collection in which items are strictly ordered\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    OrderedCollection: _NS$A(\"OrderedCollection\"),\r\n    /**\r\n     * Actor accepts the Object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Accept: _NS$A(\"Accept\"),\r\n    /**\r\n     * Block\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Block: _NS$A(\"Block\"),\r\n    /**\r\n     * Actor is ignoring the Object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Ignore: _NS$A(\"Ignore\"),\r\n    /**\r\n     * To Add an Object or Link to Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Add: _NS$A(\"Add\"),\r\n    /**\r\n     * Actor announces the object to the target\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Announce: _NS$A(\"Announce\"),\r\n    /**\r\n     * Represents a software application of any sort\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Application: _NS$A(\"Application\"),\r\n    /**\r\n     * To Arrive Somewhere (can be used, for instance, to indicate that a particular entity is currently located somewhere, e.g. a \"check-in\")\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Arrive: _NS$A(\"Arrive\"),\r\n    /**\r\n     * A written work. Typically several paragraphs long. For example, a blog post or a news article.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Article: _NS$A(\"Article\"),\r\n    /**\r\n     * An audio file\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Audio: _NS$A(\"Audio\"),\r\n    /**\r\n     * To Create Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Create: _NS$A(\"Create\"),\r\n    /**\r\n     * To Delete Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Delete: _NS$A(\"Delete\"),\r\n    /**\r\n     * The actor dislikes the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Dislike: _NS$A(\"Dislike\"),\r\n    /**\r\n     * An Event of any kind\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Event: _NS$A(\"Event\"),\r\n    /**\r\n     * To flag something (e.g. flag as inappropriate, flag as spam, etc)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Flag: _NS$A(\"Flag\"),\r\n    /**\r\n     * To Express Interest in Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Follow: _NS$A(\"Follow\"),\r\n    /**\r\n     * A Group of any kind.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Group: _NS$A(\"Group\"),\r\n    /**\r\n     * To invite someone or something to something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Invite: _NS$A(\"Invite\"),\r\n    /**\r\n     * To Offer something to someone or something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Offer: _NS$A(\"Offer\"),\r\n    /**\r\n     * To Join Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Join: _NS$A(\"Join\"),\r\n    /**\r\n     * To Leave Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Leave: _NS$A(\"Leave\"),\r\n    /**\r\n     * To Like Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Like: _NS$A(\"Like\"),\r\n    /**\r\n     * The actor viewed the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    View: _NS$A(\"View\"),\r\n    /**\r\n     * The actor listened to the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Listen: _NS$A(\"Listen\"),\r\n    /**\r\n     * The actor read the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Read: _NS$A(\"Read\"),\r\n    /**\r\n     * The actor is moving the object. The target specifies where the object is moving to. The origin specifies where the object is moving from.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Move: _NS$A(\"Move\"),\r\n    /**\r\n     * The actor is traveling to the target. The origin specifies where the actor is traveling from.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Travel: _NS$A(\"Travel\"),\r\n    /**\r\n     * A specialized Link that represents an @mention\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Mention: _NS$A(\"Mention\"),\r\n    /**\r\n     * A Short note, typically less than a single paragraph. A \"tweet\" is an example, or a \"status update\"\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Note: _NS$A(\"Note\"),\r\n    /**\r\n     * A Web Page\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Page: _NS$A(\"Page\"),\r\n    /**\r\n     * A Person\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Person: _NS$A(\"Person\"),\r\n    /**\r\n     * An Organization\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Organization: _NS$A(\"Organization\"),\r\n    /**\r\n     * Actor rejects the Object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Reject: _NS$A(\"Reject\"),\r\n    /**\r\n     * To Remove Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Remove: _NS$A(\"Remove\"),\r\n    /**\r\n     * A service provided by some entity\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Service: _NS$A(\"Service\"),\r\n    /**\r\n     * Actor tentatively accepts the Object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TentativeAccept: _NS$A(\"TentativeAccept\"),\r\n    /**\r\n     * Actor tentatively rejects the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TentativeReject: _NS$A(\"TentativeReject\"),\r\n    /**\r\n     * To Undo Something. This would typically be used to indicate that a previous Activity has been undone.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Undo: _NS$A(\"Undo\"),\r\n    /**\r\n     * To Update/Modify Something\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Update: _NS$A(\"Update\"),\r\n    /**\r\n     * A Video document of any kind.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Video: _NS$A(\"Video\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Subproperty of as:attributedTo that identifies the primary actor\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    actor: _NS$A(\"actor\"),\r\n    /**\r\n     * Identifies an entity to which an object is attributed\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    attributedTo: _NS$A(\"attributedTo\"),\r\n    /**\r\n     * attachment\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    attachment: _NS$A(\"attachment\"),\r\n    /**\r\n     * attachments\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    attachments: _NS$A(\"attachments\"),\r\n    /**\r\n     * Identifies the author of an object. Deprecated. Use as:attributedTo instead\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    author: _NS$A(\"author\"),\r\n    /**\r\n     * bcc\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    bcc: _NS$A(\"bcc\"),\r\n    /**\r\n     * bto\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    bto: _NS$A(\"bto\"),\r\n    /**\r\n     * cc\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    cc: _NS$A(\"cc\"),\r\n    /**\r\n     * Specifies the context within which an object exists or an activity was performed\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    context: _NS$A(\"context\"),\r\n    /**\r\n     * current\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    current: _NS$A(\"current\"),\r\n    /**\r\n     * first\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    first: _NS$A(\"first\"),\r\n    /**\r\n     * generator\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    generator: _NS$A(\"generator\"),\r\n    /**\r\n     * icon\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    icon: _NS$A(\"icon\"),\r\n    /**\r\n     * image\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    image: _NS$A(\"image\"),\r\n    /**\r\n     * inReplyTo\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    inReplyTo: _NS$A(\"inReplyTo\"),\r\n    /**\r\n     * items\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    items: _NS$A(\"items\"),\r\n    /**\r\n     * last\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    last: _NS$A(\"last\"),\r\n    /**\r\n     * location\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    location: _NS$A(\"location\"),\r\n    /**\r\n     * next\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    next: _NS$A(\"next\"),\r\n    /**\r\n     * object\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    object: _NS$A(\"object\"),\r\n    /**\r\n     * Describes a possible exclusive answer or option for a question.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    oneOf: _NS$A(\"oneOf\"),\r\n    /**\r\n     * Describes a possible inclusive answer or option for a question.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    anyOf: _NS$A(\"anyOf\"),\r\n    /**\r\n     * prev\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    prev: _NS$A(\"prev\"),\r\n    /**\r\n     * preview\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    preview: _NS$A(\"preview\"),\r\n    /**\r\n     * provider\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    provider: _NS$A(\"provider\"),\r\n    /**\r\n     * replies\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    replies: _NS$A(\"replies\"),\r\n    /**\r\n     * result\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    result: _NS$A(\"result\"),\r\n    /**\r\n     * audience\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    audience: _NS$A(\"audience\"),\r\n    /**\r\n     * partOf\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    partOf: _NS$A(\"partOf\"),\r\n    /**\r\n     * tag\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    tag: _NS$A(\"tag\"),\r\n    /**\r\n     * tags\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    tags: _NS$A(\"tags\"),\r\n    /**\r\n     * target\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    target: _NS$A(\"target\"),\r\n    /**\r\n     * For certain activities, specifies the entity from which the action is directed.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    origin: _NS$A(\"origin\"),\r\n    /**\r\n     * Indentifies an object used (or to be used) to complete an activity\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    instrument: _NS$A(\"instrument\"),\r\n    /**\r\n     * to\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    to: _NS$A(\"to\"),\r\n    /**\r\n     * Specifies a link to a specific representation of the Object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    url: _NS$A(\"url\"),\r\n    /**\r\n     * On a Relationship object, identifies the subject. e.g. when saying \"John is connected to Sally\", 'subject' refers to 'John'\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    subject: _NS$A(\"subject\"),\r\n    /**\r\n     * On a Relationship object, describes the type of relationship\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    relationship: _NS$A(\"relationship\"),\r\n    /**\r\n     * On a Profile object, describes the object described by the profile\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    describes: _NS$A(\"describes\"),\r\n    /**\r\n     * On a Tombstone object, describes the former type of the deleted object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    formerType: _NS$A(\"formerType\"),\r\n    /**\r\n     * Specifies the accuracy around the point established by the longitude and latitude\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    accuracy: _NS$A(\"accuracy\"),\r\n    /**\r\n     * The altitude of a place\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    altitude: _NS$A(\"altitude\"),\r\n    /**\r\n     * The content of the object.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    content: _NS$A(\"content\"),\r\n    /**\r\n     * name\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    name: _NS$A(\"name\"),\r\n    /**\r\n     * downstreamDuplicates\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    downstreamDuplicates: _NS$A(\"downstreamDuplicates\"),\r\n    /**\r\n     * The duration of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    duration: _NS$A(\"duration\"),\r\n    /**\r\n     * The ending time of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    endTime: _NS$A(\"endTime\"),\r\n    /**\r\n     * The display height expressed as device independent pixels\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    height: _NS$A(\"height\"),\r\n    /**\r\n     * The target URI of the Link\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    href: _NS$A(\"href\"),\r\n    /**\r\n     * A hint about the language of the referenced resource\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    hreflang: _NS$A(\"hreflang\"),\r\n    /**\r\n     * id\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    id: _NS$A(\"id\"),\r\n    /**\r\n     * The latitude\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    latitude: _NS$A(\"latitude\"),\r\n    /**\r\n     * The longitude\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    longitude: _NS$A(\"longitude\"),\r\n    /**\r\n     * The MIME Media Type\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    mediaType: _NS$A(\"mediaType\"),\r\n    /**\r\n     * objectType\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    objectType: _NS$A(\"objectType\"),\r\n    /**\r\n     * Specifies the date and time the object was published\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    published: _NS$A(\"published\"),\r\n    /**\r\n     * Specifies a radius around the point established by the longitude and latitude\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    radius: _NS$A(\"radius\"),\r\n    /**\r\n     * A numeric rating (>= 0.0, <= 5.0) for the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    rating: _NS$A(\"rating\"),\r\n    /**\r\n     * The RFC 5988 or HTML5 Link Relation associated with the Link\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    rel: _NS$A(\"rel\"),\r\n    /**\r\n     * In a strictly ordered logical collection, specifies the index position of the first item in the items list\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    startIndex: _NS$A(\"startIndex\"),\r\n    /**\r\n     * The starting time of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    startTime: _NS$A(\"startTime\"),\r\n    /**\r\n     * A short summary of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    summary: _NS$A(\"summary\"),\r\n    /**\r\n     * The total number of items in a logical collection\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    totalItems: _NS$A(\"totalItems\"),\r\n    /**\r\n     * Identifies the unit of measurement used by the radius, altitude and accuracy properties. The value can be expressed either as one of a set of predefined units or as a well-known common URI that identifies units.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    units: _NS$A(\"units\"),\r\n    /**\r\n     * Specifies when the object was last updated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    updated: _NS$A(\"updated\"),\r\n    /**\r\n     * upstreamDuplicates\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    upstreamDuplicates: _NS$A(\"upstreamDuplicates\"),\r\n    /**\r\n     * verb\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    verb: _NS$A(\"verb\"),\r\n    /**\r\n     * Specifies the preferred display width of the content, expressed in terms of device independent pixels.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    width: _NS$A(\"width\"),\r\n    /**\r\n     * Specifies the date and time the object was deleted\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    deleted: _NS$A(\"deleted\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - W3C Bookmark vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$z = \"http://www.w3.org/2002/01/bookmark#\";\r\nfunction _NS$z(localName) {\r\n    return (_NAMESPACE$z + localName);\r\n}\r\n/**\r\n * [Generator provided] - W3C Bookmark vocabulary\r\n */\r\nvar BOOKMARK = {\r\n    PREFIX: \"bookmark\",\r\n    NAMESPACE: _NAMESPACE$z,\r\n    PREFIX_AND_NAMESPACE: { \"bookmark\": \"http://www.w3.org/2002/01/bookmark#\" },\r\n    NS: _NS$z,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Topic\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Topic: _NS$z(\"Topic\"),\r\n    /**\r\n     * Specifies a behavior; when the\r\n                  object of type 'Shortcut' is activated, the\r\n                  client follows the 'recalls' property and\r\n                  activates the object at the end of that\r\n                  'recalls' property.  The target object may\r\n                  be another Bookmark or may be a Topic.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Shortcut: _NS$z(\"Shortcut\"),\r\n    /**\r\n     * The class to which all bookmarks belong.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Bookmark: _NS$z(\"Bookmark\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * relates a bookmark to a topic.\r\n                  A bookmark must have at least one hasTopic property.\r\n                  The typical user operation of following a bookmark link\r\n                  will use the value of the b:recalls property. This property\r\n                  corresponds to XBEL:href property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    hasTopic: _NS$z(\"hasTopic\"),\r\n    /**\r\n     * connects a Shortcut to the bookmark or topic that is\r\n  being included by reference in some other topic\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     */\r\n    leadsTo: _NS$z(\"leadsTo\"),\r\n    /**\r\n     * This corresponds to XBEL:href an\r\n                  object of type Bookmark is expected to have a\r\n                  'recalls' relationship to the document being\r\n                  bookmarked.  The 'bookmarks' property is an older\r\n                  name for the 'recalls' relationship.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    bookmarks: _NS$z(\"bookmarks\"),\r\n    /**\r\n     * Relates a bookmark with the resource that\r\n                  has been bookmarked.  This corresponds to XBEL:href;\r\n                  an object of type Bookmark is expected to have a\r\n                  'recalls' relationship to the document being\r\n                  bookmarked\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    recalls: _NS$z(\"recalls\"),\r\n    /**\r\n     * Describes a relationship between Topics.\r\n          When a topic T is a sub-topic of a topic U then all\r\n          bookmarks that have topic T are also considered to have\r\n          topic U. A topic may be a sub-topic of one or more\r\n          topics; trivially, every topic is a sub-topic of itself.\r\n          More formally; for all B, T, and U: b b:hasTopic T,\r\n          T b:subTopicOf U implies B b:hasTopic U.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    subTopicOf: _NS$z(\"subTopicOf\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * A vocabulary for the Data Model for W3C Verifiable Credentials.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$y = \"https://www.w3.org/2018/credentials#\";\r\nfunction _NS$y(localName) {\r\n    return (_NAMESPACE$y + localName);\r\n}\r\n/**\r\n * A vocabulary for the Data Model for W3C Verifiable Credentials.\r\n */\r\nvar CRED = {\r\n    PREFIX: \"cred\",\r\n    NAMESPACE: _NAMESPACE$y,\r\n    PREFIX_AND_NAMESPACE: { \"cred\": \"https://www.w3.org/2018/credentials#\" },\r\n    NS: _NS$y,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    VerifiableCredential: _NS$y(\"VerifiableCredential\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    JsonSchemaValidator2018: _NS$y(\"JsonSchemaValidator2018\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    ManualRefreshService2018: _NS$y(\"ManualRefreshService2018\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    VerifiablePresentation: _NS$y(\"VerifiablePresentation\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    verifiableCredential: _NS$y(\"verifiableCredential\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    credentialSchema: _NS$y(\"credentialSchema\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    credentialStatus: _NS$y(\"credentialStatus\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    credentialSubject: _NS$y(\"credentialSubject\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    evidence: _NS$y(\"evidence\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    expirationDate: _NS$y(\"expirationDate\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    holder: _NS$y(\"holder\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    issued: _NS$y(\"issued\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    issuer: _NS$y(\"issuer\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    issuanceDate: _NS$y(\"issuanceDate\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    refreshService: _NS$y(\"refreshService\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    termsOfUse: _NS$y(\"termsOfUse\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    validFrom: _NS$y(\"validFrom\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/2018/credentials#\r\n     */\r\n    validUntil: _NS$y(\"validUntil\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * DCAT is an RDF vocabulary designed to facilitate interoperability between data catalogs published on the Web. By using DCAT to describe datasets in data catalogs, publishers increase discoverability and enable applications easily to consume metadata from multiple catalogs. It further enables decentralized publishing of catalogs and facilitates federated dataset search across sites. Aggregated DCAT metadata can serve as a manifest file to facilitate digital preservation. DCAT is defined at http://www.w3.org/TR/vocab-dcat/. Any variance between that normative document and this schema is an error in this schema.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$x = \"http://www.w3.org/ns/dcat#\";\r\nfunction _NS$x(localName) {\r\n    return (_NAMESPACE$x + localName);\r\n}\r\n/**\r\n * DCAT is an RDF vocabulary designed to facilitate interoperability between data catalogs published on the Web. By using DCAT to describe datasets in data catalogs, publishers increase discoverability and enable applications easily to consume metadata from multiple catalogs. It further enables decentralized publishing of catalogs and facilitates federated dataset search across sites. Aggregated DCAT metadata can serve as a manifest file to facilitate digital preservation. DCAT is defined at http://www.w3.org/TR/vocab-dcat/. Any variance between that normative document and this schema is an error in this schema.\r\n */\r\nvar DCAT = {\r\n    PREFIX: \"dcat\",\r\n    NAMESPACE: _NAMESPACE$x,\r\n    PREFIX_AND_NAMESPACE: { \"dcat\": \"http://www.w3.org/ns/dcat#\" },\r\n    NS: _NS$x,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A curated collection of metadata about resources (e.g., datasets and data services in the context of a data catalog).\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    Catalog: _NS$x(\"Catalog\"),\r\n    /**\r\n     * A collection of data, published or curated by a single source, and available for access or download in one or more representations.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    Dataset: _NS$x(\"Dataset\"),\r\n    /**\r\n     * Resource published or curated by a single agent.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    Resource: _NS$x(\"Resource\"),\r\n    /**\r\n     * A record in a data catalog, describing the registration of a single dataset or data service.\r\n     *\r\n     * This term provides multilingual descriptions, but has a mismatch between its labels and comments, with [9] labels in languages [ar, cs, da, el, en, es, fr, it, ja], but [8] comments in languages [cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    CatalogRecord: _NS$x(\"CatalogRecord\"),\r\n    /**\r\n     * A site or end-point providing operations related to the discovery of, access to, or processing functions on, data or related resources.\r\n     *\r\n     * This term provides multilingual descriptions, but has a mismatch between its labels and comments, with [4] labels in languages [da, en, es, it], but [5] comments in languages [cs, da, en, es, it].\r\n     */\r\n    DataService: _NS$x(\"DataService\"),\r\n    /**\r\n     * A specific representation of a dataset. A dataset might be available in multiple serializations that may differ in various ways, including natural language, media-type or format, schematic organization, temporal and spatial resolution, level of detail or profiles (which might specify any or all of the above).\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    Distribution: _NS$x(\"Distribution\"),\r\n    /**\r\n     * An association class for attaching additional information to a relationship between DCAT Resources.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    Relationship: _NS$x(\"Relationship\"),\r\n    /**\r\n     * A role is the function of a resource or agent with respect to another resource, in the context of resource attribution or resource relationships.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/dcat#hadRole\r\n     */\r\n    Role: _NS$x(\"Role\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The function of an entity or agent with respect to another entity or resource.\r\n     *\r\n     * This term provides multilingual descriptions, but has a mismatch between its labels and comments, with [4] labels in languages [cs, da, en, it], but [5] comments in languages [cs, da, en, es, it].\r\n     */\r\n    hadRole: _NS$x(\"hadRole\"),\r\n    /**\r\n     * A site or end-point that gives access to the distribution of the dataset.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    accessService: _NS$x(\"accessService\"),\r\n    /**\r\n     * A URL of a resource that gives access to a distribution of the dataset. E.g. landing page, feed, SPARQL endpoint. Use for all cases except a simple download link, in which case downloadURL is preferred.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    accessURL: _NS$x(\"accessURL\"),\r\n    /**\r\n     * The root location or primary endpoint of the service (a web-resolvable IRI).\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    endpointURL: _NS$x(\"endpointURL\"),\r\n    /**\r\n     * The geographic bounding box of a resource.\r\n     *\r\n     * This term has [5] labels (in languages [cs, da, en, es, it]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    bbox: _NS$x(\"bbox\"),\r\n    /**\r\n     * The size of a distribution in bytes.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    byteSize: _NS$x(\"byteSize\"),\r\n    /**\r\n     * A catalog whose contents are of interest in the context of this catalog.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    catalog: _NS$x(\"catalog\"),\r\n    /**\r\n     * The geographic center (centroid) of a resource.\r\n     *\r\n     * This term has [5] labels (in languages [cs, da, en, es, it]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    centroid: _NS$x(\"centroid\"),\r\n    /**\r\n     * The compression format of the distribution in which the data is contained in a compressed form, e.g. to reduce the size of the downloadable file.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/TR/vocab-dcat-2/\r\n     */\r\n    compressFormat: _NS$x(\"compressFormat\"),\r\n    /**\r\n     * Relevant contact information for the catalogued resource. Use of vCard is recommended.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    contactPoint: _NS$x(\"contactPoint\"),\r\n    /**\r\n     * A collection of data that is listed in the catalog.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    dataset: _NS$x(\"dataset\"),\r\n    /**\r\n     * An available distribution of the dataset.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    distribution: _NS$x(\"distribution\"),\r\n    /**\r\n     * The URL of the downloadable file in a given format. E.g. CSV file or RDF file. The format is indicated by the distribution's dct:format and/or dcat:mediaType.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    downloadURL: _NS$x(\"downloadURL\"),\r\n    /**\r\n     * The end of the period.\r\n     *\r\n     * This term has [5] labels (in languages [cs, da, en, es, it]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    endDate: _NS$x(\"endDate\"),\r\n    /**\r\n     * A description of the service end-point, including its operations, parameters etc.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    endpointDescription: _NS$x(\"endpointDescription\"),\r\n    /**\r\n     * A keyword or tag describing a resource.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    keyword: _NS$x(\"keyword\"),\r\n    /**\r\n     * A Web page that can be navigated to in a Web browser to gain access to the catalog, a dataset, its distributions and/or additional information.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    landingPage: _NS$x(\"landingPage\"),\r\n    /**\r\n     * The media type of the distribution as defined by IANA\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    mediaType: _NS$x(\"mediaType\"),\r\n    /**\r\n     * The package format of the distribution in which one or more data files are grouped together, e.g. to enable a set of related files to be downloaded together.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/TR/vocab-dcat-2/\r\n     */\r\n    packageFormat: _NS$x(\"packageFormat\"),\r\n    /**\r\n     * Link to a description of a relationship with another resource.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    qualifiedRelation: _NS$x(\"qualifiedRelation\"),\r\n    /**\r\n     * A record describing the registration of a single dataset or data service that is part of the catalog.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    record: _NS$x(\"record\"),\r\n    /**\r\n     * A collection of data that this DataService can distribute.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    servesDataset: _NS$x(\"servesDataset\"),\r\n    /**\r\n     * A site or endpoint that is listed in the catalog.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    service: _NS$x(\"service\"),\r\n    /**\r\n     * minimum spatial separation resolvable in a dataset, measured in meters.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, da, en-GB, en-US, es, it].\r\n     */\r\n    spatialResolutionInMeters: _NS$x(\"spatialResolutionInMeters\"),\r\n    /**\r\n     * The start of the period\r\n     *\r\n     * This term has [4] labels (in languages [cs, da, en, it]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    startDate: _NS$x(\"startDate\"),\r\n    /**\r\n     * minimum time period resolvable in a dataset.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [cs, da, en, es, it].\r\n     */\r\n    temporalResolution: _NS$x(\"temporalResolution\"),\r\n    /**\r\n     * A main category of the resource. A resource can have multiple themes.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    theme: _NS$x(\"theme\"),\r\n    /**\r\n     * The knowledge organization system (KOS) used to classify catalog's datasets.\r\n     *\r\n     * This term has [9] labels and comments, in the languages [ar, cs, da, el, en, es, fr, it, ja].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/TR/vocab-dcat/\r\n     */\r\n    themeTaxonomy: _NS$x(\"themeTaxonomy\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Dublin Core Terms - for describing resources\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$w = \"http://purl.org/dc/terms/\";\r\nfunction _NS$w(localName) {\r\n    return (_NAMESPACE$w + localName);\r\n}\r\n/**\r\n * [Generator provided] - Dublin Core Terms - for describing resources\r\n */\r\nvar DCTERMS = {\r\n    PREFIX: \"dcterms\",\r\n    NAMESPACE: _NAMESPACE$w,\r\n    PREFIX_AND_NAMESPACE: { \"dcterms\": \"http://purl.org/dc/terms/\" },\r\n    NS: _NS$w,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A resource that acts or has the power to act.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Agent: _NS$w(\"Agent\"),\r\n    /**\r\n     * A group of agents.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    AgentClass: _NS$w(\"AgentClass\"),\r\n    /**\r\n     * A book, article, or other documentary resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    BibliographicResource: _NS$w(\"BibliographicResource\"),\r\n    /**\r\n     * A digital resource format.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    FileFormat: _NS$w(\"FileFormat\"),\r\n    /**\r\n     * A file format or physical medium.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    MediaType: _NS$w(\"MediaType\"),\r\n    /**\r\n     * A media type or extent.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    MediaTypeOrExtent: _NS$w(\"MediaTypeOrExtent\"),\r\n    /**\r\n     * A rate at which something recurs.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Frequency: _NS$w(\"Frequency\"),\r\n    /**\r\n     * The extent or range of judicial, law enforcement, or other authority.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Jurisdiction: _NS$w(\"Jurisdiction\"),\r\n    /**\r\n     * A location, period of time, or jurisdiction.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    LocationPeriodOrJurisdiction: _NS$w(\"LocationPeriodOrJurisdiction\"),\r\n    /**\r\n     * A legal document giving official permission to do something with a Resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    LicenseDocument: _NS$w(\"LicenseDocument\"),\r\n    /**\r\n     * A statement about the intellectual property rights (IPR) held in or over a Resource, a legal document giving official permission to do something with a resource, or a statement about access rights.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    RightsStatement: _NS$w(\"RightsStatement\"),\r\n    /**\r\n     * A system of signs, symbols, sounds, gestures, or rules used in communication.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    LinguisticSystem: _NS$w(\"LinguisticSystem\"),\r\n    /**\r\n     * A spatial region or named place.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Location: _NS$w(\"Location\"),\r\n    /**\r\n     * A method by which resources are added to a collection.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    MethodOfAccrual: _NS$w(\"MethodOfAccrual\"),\r\n    /**\r\n     * A process that is used to engender knowledge, attitudes, and skills.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    MethodOfInstruction: _NS$w(\"MethodOfInstruction\"),\r\n    /**\r\n     * An interval of time that is named or defined by its start and end dates.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    PeriodOfTime: _NS$w(\"PeriodOfTime\"),\r\n    /**\r\n     * A physical material or carrier.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    PhysicalMedium: _NS$w(\"PhysicalMedium\"),\r\n    /**\r\n     * A material thing.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    PhysicalResource: _NS$w(\"PhysicalResource\"),\r\n    /**\r\n     * A plan or course of action by an authority, intended to influence and determine decisions, actions, and other matters.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Policy: _NS$w(\"Policy\"),\r\n    /**\r\n     * A statement of any changes in ownership and custody of a resource since its creation that are significant for its authenticity, integrity, and interpretation.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    ProvenanceStatement: _NS$w(\"ProvenanceStatement\"),\r\n    /**\r\n     * A dimension or extent, or a time taken to play or execute.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    SizeOrDuration: _NS$w(\"SizeOrDuration\"),\r\n    /**\r\n     * A basis for comparison; a reference point against which other things can be evaluated.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Standard: _NS$w(\"Standard\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Date on which the resource was changed.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    modified: _NS$w(\"modified\"),\r\n    /**\r\n     * An entity responsible for making the resource available.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    publisher: _NS$w(\"publisher\"),\r\n    /**\r\n     * A name given to the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    title: _NS$w(\"title\"),\r\n    /**\r\n     * A related resource that is a version, edition, or adaptation of the described resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    hasVersion: _NS$w(\"hasVersion\"),\r\n    /**\r\n     * Date of formal issuance (e.g., publication) of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    issued: _NS$w(\"issued\"),\r\n    /**\r\n     * A point or period of time associated with an event in the lifecycle of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    date: _NS$w(\"date\"),\r\n    /**\r\n     * An account of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    description: _NS$w(\"description\"),\r\n    /**\r\n     * A related resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    relation: _NS$w(\"relation\"),\r\n    /**\r\n     * The set of regions in space defined by their geographic coordinates according to the DCMI Box Encoding Scheme.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://dublincore.org/documents/dcmi-box/\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Box: _NS$w(\"Box\"),\r\n    /**\r\n     * The set of codes listed in ISO 3166-1 for the representation of names of countries.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.iso.org/iso/en/prods-services/iso3166ma/02iso-3166-code-lists/list-en1.html\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    ISO3166: _NS$w(\"ISO3166\"),\r\n    /**\r\n     * The three-letter alphabetic codes listed in ISO639-2 for the representation of names of languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://lcweb.loc.gov/standards/iso639-2/langhome.html\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    ISO639_2: _NS$w(\"ISO639-2\"),\r\n    /**\r\n     * The set of three-letter codes listed in ISO 639-3 for the representation of names of languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.sil.org/iso639-3/\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    ISO639_3: _NS$w(\"ISO639-3\"),\r\n    /**\r\n     * The set of time intervals defined by their limits according to the DCMI Period Encoding Scheme.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://dublincore.org/documents/dcmi-period/\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Period: _NS$w(\"Period\"),\r\n    /**\r\n     * The set of points in space defined by their geographic coordinates according to the DCMI Point Encoding Scheme.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://dublincore.org/documents/dcmi-point/\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    Point: _NS$w(\"Point\"),\r\n    /**\r\n     * The set of tags, constructed according to RFC 1766, for the identification of languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.ietf.org/rfc/rfc1766.txt\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    RFC1766: _NS$w(\"RFC1766\"),\r\n    /**\r\n     * The set of tags constructed according to RFC 3066 for the identification of languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.ietf.org/rfc/rfc3066.txt\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    RFC3066: _NS$w(\"RFC3066\"),\r\n    /**\r\n     * The set of tags constructed according to RFC 4646 for the identification of languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.ietf.org/rfc/rfc4646.txt\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    RFC4646: _NS$w(\"RFC4646\"),\r\n    /**\r\n     * The set of tags constructed according to RFC 5646 for the identification of languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.ietf.org/rfc/rfc5646.txt\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    RFC5646: _NS$w(\"RFC5646\"),\r\n    /**\r\n     * The set of identifiers constructed according to the generic syntax for Uniform Resource Identifiers as specified by the Internet Engineering Task Force.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.ietf.org/rfc/rfc3986.txt\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    URI: _NS$w(\"URI\"),\r\n    /**\r\n     * The set of dates and times constructed according to the W3C Date and Time Formats Specification.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/TR/NOTE-datetime\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    W3CDTF: _NS$w(\"W3CDTF\"),\r\n    /**\r\n     * A summary of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    abstract: _NS$w(\"abstract\"),\r\n    /**\r\n     * Information about who can access the resource or an indication of its security status.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    accessRights: _NS$w(\"accessRights\"),\r\n    /**\r\n     * Information about rights held in and over the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    rights: _NS$w(\"rights\"),\r\n    /**\r\n     * The method by which items are added to a collection.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    accrualMethod: _NS$w(\"accrualMethod\"),\r\n    /**\r\n     * The frequency with which items are added to a collection.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    accrualPeriodicity: _NS$w(\"accrualPeriodicity\"),\r\n    /**\r\n     * The policy governing the addition of items to a collection.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    accrualPolicy: _NS$w(\"accrualPolicy\"),\r\n    /**\r\n     * An alternative name for the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    alternative: _NS$w(\"alternative\"),\r\n    /**\r\n     * A class of entity for whom the resource is intended or useful.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    audience: _NS$w(\"audience\"),\r\n    /**\r\n     * Date (often a range) that the resource became or will become available.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    available: _NS$w(\"available\"),\r\n    /**\r\n     * A bibliographic reference for the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    bibliographicCitation: _NS$w(\"bibliographicCitation\"),\r\n    /**\r\n     * An unambiguous reference to the resource within a given context.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    identifier: _NS$w(\"identifier\"),\r\n    /**\r\n     * An established standard to which the described resource conforms.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    conformsTo: _NS$w(\"conformsTo\"),\r\n    /**\r\n     * An entity responsible for making contributions to the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    contributor: _NS$w(\"contributor\"),\r\n    /**\r\n     * The spatial or temporal topic of the resource, the spatial applicability of the resource, or the jurisdiction under which the resource is relevant.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    coverage: _NS$w(\"coverage\"),\r\n    /**\r\n     * Date of creation of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    created: _NS$w(\"created\"),\r\n    /**\r\n     * An entity primarily responsible for making the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    creator: _NS$w(\"creator\"),\r\n    /**\r\n     * Date of acceptance of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    dateAccepted: _NS$w(\"dateAccepted\"),\r\n    /**\r\n     * Date of copyright.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    dateCopyrighted: _NS$w(\"dateCopyrighted\"),\r\n    /**\r\n     * Date of submission of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    dateSubmitted: _NS$w(\"dateSubmitted\"),\r\n    /**\r\n     * A class of entity, defined in terms of progression through an educational or training context, for which the described resource is intended.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    educationLevel: _NS$w(\"educationLevel\"),\r\n    /**\r\n     * The size or duration of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    extent: _NS$w(\"extent\"),\r\n    /**\r\n     * The file format, physical medium, or dimensions of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    format: _NS$w(\"format\"),\r\n    /**\r\n     * A related resource that is substantially the same as the pre-existing described resource, but in another format.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    hasFormat: _NS$w(\"hasFormat\"),\r\n    /**\r\n     * A related resource that is included either physically or logically in the described resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    hasPart: _NS$w(\"hasPart\"),\r\n    /**\r\n     * A process, used to engender knowledge, attitudes and skills, that the described resource is designed to support.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    instructionalMethod: _NS$w(\"instructionalMethod\"),\r\n    /**\r\n     * A related resource that is substantially the same as the described resource, but in another format.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    isFormatOf: _NS$w(\"isFormatOf\"),\r\n    /**\r\n     * A related resource in which the described resource is physically or logically included.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    isPartOf: _NS$w(\"isPartOf\"),\r\n    /**\r\n     * A related resource that references, cites, or otherwise points to the described resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    isReferencedBy: _NS$w(\"isReferencedBy\"),\r\n    /**\r\n     * A related resource that supplants, displaces, or supersedes the described resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    isReplacedBy: _NS$w(\"isReplacedBy\"),\r\n    /**\r\n     * A related resource that requires the described resource to support its function, delivery, or coherence.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    isRequiredBy: _NS$w(\"isRequiredBy\"),\r\n    /**\r\n     * A related resource of which the described resource is a version, edition, or adaptation.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    isVersionOf: _NS$w(\"isVersionOf\"),\r\n    /**\r\n     * A language of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    language: _NS$w(\"language\"),\r\n    /**\r\n     * A legal document giving official permission to do something with the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    license: _NS$w(\"license\"),\r\n    /**\r\n     * An entity that mediates access to the resource and for whom the resource is intended or useful.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    mediator: _NS$w(\"mediator\"),\r\n    /**\r\n     * The material or physical carrier of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    medium: _NS$w(\"medium\"),\r\n    /**\r\n     * A statement of any changes in ownership and custody of the resource since its creation that are significant for its authenticity, integrity, and interpretation.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    provenance: _NS$w(\"provenance\"),\r\n    /**\r\n     * A related resource that is referenced, cited, or otherwise pointed to by the described resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    references: _NS$w(\"references\"),\r\n    /**\r\n     * A related resource that is supplanted, displaced, or superseded by the described resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    replaces: _NS$w(\"replaces\"),\r\n    /**\r\n     * A related resource that is required by the described resource to support its function, delivery, or coherence.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    requires: _NS$w(\"requires\"),\r\n    /**\r\n     * A person or organization owning or managing rights over the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    rightsHolder: _NS$w(\"rightsHolder\"),\r\n    /**\r\n     * A related resource from which the described resource is derived.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    source: _NS$w(\"source\"),\r\n    /**\r\n     * Spatial characteristics of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    spatial: _NS$w(\"spatial\"),\r\n    /**\r\n     * The topic of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    subject: _NS$w(\"subject\"),\r\n    /**\r\n     * A list of subunits of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    tableOfContents: _NS$w(\"tableOfContents\"),\r\n    /**\r\n     * Temporal characteristics of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    temporal: _NS$w(\"temporal\"),\r\n    /**\r\n     * The nature or genre of the resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    type: _NS$w(\"type\"),\r\n    /**\r\n     * Date (often a range) of validity of a resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/dc/terms/\r\n     */\r\n    valid: _NS$w(\"valid\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Description of a Project (DOAP) vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$v = \"http://usefulinc.com/ns/doap#\";\r\nfunction _NS$v(localName) {\r\n    return (_NAMESPACE$v + localName);\r\n}\r\n/**\r\n * [Generator provided] - Description of a Project (DOAP) vocabulary\r\n */\r\nvar DOAP = {\r\n    PREFIX: \"doap\",\r\n    NAMESPACE: _NAMESPACE$v,\r\n    PREFIX_AND_NAMESPACE: { \"doap\": \"http://usefulinc.com/ns/doap#\" },\r\n    NS: _NS$v,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    Project: _NS$v(\"Project\"),\r\n    /**\r\n     * Version information of a project release.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    Version: _NS$v(\"Version\"),\r\n    /**\r\n     * A specification of a system's aspects, technical or otherwise.\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    Specification: _NS$v(\"Specification\"),\r\n    /**\r\n     * Source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    Repository: _NS$v(\"Repository\"),\r\n    /**\r\n     * Subversion source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    SVNRepository: _NS$v(\"SVNRepository\"),\r\n    /**\r\n     * Git source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    GitRepository: _NS$v(\"GitRepository\"),\r\n    /**\r\n     * BitKeeper source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    BKRepository: _NS$v(\"BKRepository\"),\r\n    /**\r\n     * CVS source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    CVSRepository: _NS$v(\"CVSRepository\"),\r\n    /**\r\n     * GNU Arch source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    ArchRepository: _NS$v(\"ArchRepository\"),\r\n    /**\r\n     * Bazaar source code branch.\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    BazaarBranch: _NS$v(\"BazaarBranch\"),\r\n    /**\r\n     * Git source code branch.\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    GitBranch: _NS$v(\"GitBranch\"),\r\n    /**\r\n     * Mercurial source code repository.\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    HgRepository: _NS$v(\"HgRepository\"),\r\n    /**\r\n     * darcs source code repository.\r\n     *\r\n     * This term has [4] labels and comments, in the languages [en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    DarcsRepository: _NS$v(\"DarcsRepository\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * A name of something.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    name: _NS$v(\"name\"),\r\n    /**\r\n     * URL of a project's homepage,\r\n          associated with exactly one project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    homepage: _NS$v(\"homepage\"),\r\n    /**\r\n     * URL of a project's past homepage,\r\n          associated with exactly one project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    old_homepage: _NS$v(\"old-homepage\"),\r\n    /**\r\n     * Date when something was created, in YYYY-MM-DD form. e.g. 2004-04-05\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    created: _NS$v(\"created\"),\r\n    /**\r\n     * Short (8 or 9 words) plain text description of a project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    shortdesc: _NS$v(\"shortdesc\"),\r\n    /**\r\n     * Plain text description of a project, of 2-4 sentences in length.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    description: _NS$v(\"description\"),\r\n    /**\r\n     * A project release.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    release: _NS$v(\"release\"),\r\n    /**\r\n     * Mailing list home page or email address.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    mailing_list: _NS$v(\"mailing-list\"),\r\n    /**\r\n     * A forum or community that supports this project.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    support_forum: _NS$v(\"support-forum\"),\r\n    /**\r\n     * A forum or community for developers of this project.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    developer_forum: _NS$v(\"developer-forum\"),\r\n    /**\r\n     * A category of project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    category: _NS$v(\"category\"),\r\n    /**\r\n     * The URI of an RDF description of the license the software is distributed under. E.g. a SPDX reference\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    license: _NS$v(\"license\"),\r\n    /**\r\n     * Source code repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    repository: _NS$v(\"repository\"),\r\n    /**\r\n     * The project that uses a repository.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    repositoryOf: _NS$v(\"repositoryOf\"),\r\n    /**\r\n     * Repository for anonymous access.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    anon_root: _NS$v(\"anon-root\"),\r\n    /**\r\n     * Web browser interface to repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    browse: _NS$v(\"browse\"),\r\n    /**\r\n     * Module name of a Subversion, CVS, BitKeeper or Arch repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    module: _NS$v(\"module\"),\r\n    /**\r\n     * Location of a repository.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    location: _NS$v(\"location\"),\r\n    /**\r\n     * Web page from which the project software can be downloaded.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    download_page: _NS$v(\"download-page\"),\r\n    /**\r\n     * Mirror of software download web page.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    download_mirror: _NS$v(\"download-mirror\"),\r\n    /**\r\n     * Revision identifier of a software release.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    revision: _NS$v(\"revision\"),\r\n    /**\r\n     * URI of download associated with this release.\r\n     *\r\n     * This term has [3] labels and comments, in the languages [cs, en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    file_release: _NS$v(\"file-release\"),\r\n    /**\r\n     * URL of Wiki for collaborative discussion of project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    wiki: _NS$v(\"wiki\"),\r\n    /**\r\n     * Bug tracker for a project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    bug_database: _NS$v(\"bug-database\"),\r\n    /**\r\n     * Web page with screenshots of project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    screenshots: _NS$v(\"screenshots\"),\r\n    /**\r\n     * Maintainer of a project, a project leader.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    maintainer: _NS$v(\"maintainer\"),\r\n    /**\r\n     * Developer of software for the project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    developer: _NS$v(\"developer\"),\r\n    /**\r\n     * Contributor of documentation to the project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    documenter: _NS$v(\"documenter\"),\r\n    /**\r\n     * Contributor of translations to the project.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    translator: _NS$v(\"translator\"),\r\n    /**\r\n     * A tester or other quality control contributor.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    tester: _NS$v(\"tester\"),\r\n    /**\r\n     * Project contributor.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    helper: _NS$v(\"helper\"),\r\n    /**\r\n     * Programming language a project is implemented in or intended for use with.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [cs, de, en, es, fr, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    programming_language: _NS$v(\"programming-language\"),\r\n    /**\r\n     * Operating system that a project is limited to.  Omit this property if the project is not OS-specific.\r\n     *\r\n     * This term provides multilingual descriptions, but has a mismatch between its labels and comments, with [6] labels in languages [cs, de, en, es, fr, pt], but [5] comments in languages [cs, de, en, es, fr].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    os: _NS$v(\"os\"),\r\n    /**\r\n     * A specification that a project implements. Could be a standard, API or legally defined level of conformance.\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    implements: _NS$v(\"implements\"),\r\n    /**\r\n     * The URI of a web service endpoint where software as a service may be accessed\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    service_endpoint: _NS$v(\"service-endpoint\"),\r\n    /**\r\n     * ISO language code a project has been translated into\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    language: _NS$v(\"language\"),\r\n    /**\r\n     * Vendor organization: commercial, free or otherwise\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    vendor: _NS$v(\"vendor\"),\r\n    /**\r\n     * Indicator of software platform (non-OS specific), e.g. Java, Firefox, ECMA CLR\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    platform: _NS$v(\"platform\"),\r\n    /**\r\n     * Description of target user base\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    audience: _NS$v(\"audience\"),\r\n    /**\r\n     * URI of a blog related to a project\r\n     *\r\n     * This term has [2] labels and comments, in the languages [en, pt].\r\n     *\r\n     * Defined by the vocabulary: http://usefulinc.com/ns/doap#\r\n     */\r\n    blog: _NS$v(\"blog\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Evaluation and Report Language (EARL)\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$u = \"http://www.w3.org/ns/earl#\";\r\nfunction _NS$u(localName) {\r\n    return (_NAMESPACE$u + localName);\r\n}\r\n/**\r\n * [Generator provided] - Evaluation and Report Language (EARL)\r\n */\r\nvar EARL = {\r\n    PREFIX: \"earl\",\r\n    NAMESPACE: _NAMESPACE$u,\r\n    PREFIX_AND_NAMESPACE: { \"earl\": \"http://www.w3.org/ns/earl#\" },\r\n    NS: _NS$u,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * a statement that embodies the results of a test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Assertion: _NS$u(\"Assertion\"),\r\n    /**\r\n     * an entity such as a person, a software tool, an organization, or any other grouping that carries out a test collectively\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Assertor: _NS$u(\"Assertor\"),\r\n    /**\r\n     * the class of things that have been tested against some test criterion\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TestSubject: _NS$u(\"TestSubject\"),\r\n    /**\r\n     * a testable statement, usually one that can be passed or failed\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TestCriterion: _NS$u(\"TestCriterion\"),\r\n    /**\r\n     * a higher-level requirement that is tested by executing one or more sub-tests\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TestRequirement: _NS$u(\"TestRequirement\"),\r\n    /**\r\n     * an atomic test, usually one that is a partial test for a requirement\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TestCase: _NS$u(\"TestCase\"),\r\n    /**\r\n     * the actual result of performing the test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TestResult: _NS$u(\"TestResult\"),\r\n    /**\r\n     * describes how a test was carried out\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TestMode: _NS$u(\"TestMode\"),\r\n    /**\r\n     * a discrete value that describes a resulting condition from carrying out the test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    OutcomeValue: _NS$u(\"OutcomeValue\"),\r\n    /**\r\n     * the class of outcomes to denote passing a test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Pass: _NS$u(\"Pass\"),\r\n    /**\r\n     * the class of outcomes to denote failing a test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Fail: _NS$u(\"Fail\"),\r\n    /**\r\n     * the class of outcomes to denote an undetermined outcome\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    CannotTell: _NS$u(\"CannotTell\"),\r\n    /**\r\n     * the class of outcomes to denote the test is not applicable\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    NotApplicable: _NS$u(\"NotApplicable\"),\r\n    /**\r\n     * the class of outcomes to denote the test has not been carried out\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    NotTested: _NS$u(\"NotTested\"),\r\n    /**\r\n     * any piece of software such as an authoring tool, browser, or evaluation tool\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Software: _NS$u(\"Software\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * assertor of an assertion\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    assertedBy: _NS$u(\"assertedBy\"),\r\n    /**\r\n     * test subject of an assertion\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    subject: _NS$u(\"subject\"),\r\n    /**\r\n     * test criterion of an assertion\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    test: _NS$u(\"test\"),\r\n    /**\r\n     * result of an assertion\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    result: _NS$u(\"result\"),\r\n    /**\r\n     * mode in which the test was performed\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    mode: _NS$u(\"mode\"),\r\n    /**\r\n     * assertor that is primarily responsible for performing the test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    mainAssertor: _NS$u(\"mainAssertor\"),\r\n    /**\r\n     * outcome of performing the test\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    outcome: _NS$u(\"outcome\"),\r\n    /**\r\n     * location within a test subject that are most relevant to a test result\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    pointer: _NS$u(\"pointer\"),\r\n    /**\r\n     * additional warnings or error messages in a human-readable form\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    info: _NS$u(\"info\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Friend of a friend, v0.99\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$t = \"http://xmlns.com/foaf/0.1/\";\r\nfunction _NS$t(localName) {\r\n    return (_NAMESPACE$t + localName);\r\n}\r\n/**\r\n * [Generator provided] - Friend of a friend, v0.99\r\n */\r\nvar FOAF = {\r\n    PREFIX: \"foaf\",\r\n    NAMESPACE: _NAMESPACE$t,\r\n    PREFIX_AND_NAMESPACE: { \"foaf\": \"http://xmlns.com/foaf/0.1/\" },\r\n    NS: _NS$t,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * An agent (eg. person, group, software or physical artifact).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Agent: _NS$t(\"Agent\"),\r\n    /**\r\n     * A document.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Document: _NS$t(\"Document\"),\r\n    /**\r\n     * An organization.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Organization: _NS$t(\"Organization\"),\r\n    /**\r\n     * A project (a collective endeavour of some kind).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Project: _NS$t(\"Project\"),\r\n    /**\r\n     * A person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Person: _NS$t(\"Person\"),\r\n    /**\r\n     * A class of Agents.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Group: _NS$t(\"Group\"),\r\n    /**\r\n     * An image.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    Image: _NS$t(\"Image\"),\r\n    /**\r\n     * A foaf:LabelProperty is any RDF property with texual values that serve as labels.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    LabelProperty: _NS$t(\"LabelProperty\"),\r\n    /**\r\n     * An online account.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    OnlineAccount: _NS$t(\"OnlineAccount\"),\r\n    /**\r\n     * An online chat account.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    OnlineChatAccount: _NS$t(\"OnlineChatAccount\"),\r\n    /**\r\n     * An online e-commerce account.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    OnlineEcommerceAccount: _NS$t(\"OnlineEcommerceAccount\"),\r\n    /**\r\n     * An online gaming account.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    OnlineGamingAccount: _NS$t(\"OnlineGamingAccount\"),\r\n    /**\r\n     * A personal profile RDF document.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    PersonalProfileDocument: _NS$t(\"PersonalProfileDocument\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Indicates an account held by this agent.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    account: _NS$t(\"account\"),\r\n    /**\r\n     * Indicates the name (identifier) associated with this online account.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    accountName: _NS$t(\"accountName\"),\r\n    /**\r\n     * Indicates a homepage of the service provide for this online account.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    accountServiceHomepage: _NS$t(\"accountServiceHomepage\"),\r\n    /**\r\n     * The age in years of some agent.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    age: _NS$t(\"age\"),\r\n    /**\r\n     * An AIM chat ID\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    aimChatID: _NS$t(\"aimChatID\"),\r\n    /**\r\n     * A short informal nickname characterising an agent (includes login identifiers, IRC and other chat nicknames).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    nick: _NS$t(\"nick\"),\r\n    /**\r\n     * A location that something is based near, for some broadly human notion of near.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    based_near: _NS$t(\"based_near\"),\r\n    /**\r\n     * The birthday of this Agent, represented in mm-dd string form, eg. '12-31'.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    birthday: _NS$t(\"birthday\"),\r\n    /**\r\n     * A current project this person works on.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    currentProject: _NS$t(\"currentProject\"),\r\n    /**\r\n     * A depiction of some thing.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    depiction: _NS$t(\"depiction\"),\r\n    /**\r\n     * A thing depicted in this representation.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    depicts: _NS$t(\"depicts\"),\r\n    /**\r\n     * A checksum for the DNA of some thing. Joke.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    dnaChecksum: _NS$t(\"dnaChecksum\"),\r\n    /**\r\n     * The family name of some person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    familyName: _NS$t(\"familyName\"),\r\n    /**\r\n     * The family name of some person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    family_name: _NS$t(\"family_name\"),\r\n    /**\r\n     * The first name of a person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    firstName: _NS$t(\"firstName\"),\r\n    /**\r\n     * The underlying or 'focal' entity associated with some SKOS-described concept.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    focus: _NS$t(\"focus\"),\r\n    /**\r\n     * An organization funding a project or person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    fundedBy: _NS$t(\"fundedBy\"),\r\n    /**\r\n     * A textual geekcode for this person, see http://www.geekcode.com/geek.html\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    geekcode: _NS$t(\"geekcode\"),\r\n    /**\r\n     * The gender of this Agent (typically but not necessarily 'male' or 'female').\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    gender: _NS$t(\"gender\"),\r\n    /**\r\n     * The given name of some person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    givenName: _NS$t(\"givenName\"),\r\n    /**\r\n     * The given name of some person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    givenname: _NS$t(\"givenname\"),\r\n    /**\r\n     * Indicates an account held by this agent.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    holdsAccount: _NS$t(\"holdsAccount\"),\r\n    /**\r\n     * A homepage for some thing.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    homepage: _NS$t(\"homepage\"),\r\n    /**\r\n     * A page or document about this thing.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    page: _NS$t(\"page\"),\r\n    /**\r\n     * A document that this thing is the primary topic of.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    isPrimaryTopicOf: _NS$t(\"isPrimaryTopicOf\"),\r\n    /**\r\n     * A topic of some page or document.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    topic: _NS$t(\"topic\"),\r\n    /**\r\n     * The primary topic of some page or document.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    primaryTopic: _NS$t(\"primaryTopic\"),\r\n    /**\r\n     * An ICQ chat ID\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    icqChatID: _NS$t(\"icqChatID\"),\r\n    /**\r\n     * An image that can be used to represent some thing (ie. those depictions which are particularly representative of something, eg. one's photo on a homepage).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    img: _NS$t(\"img\"),\r\n    /**\r\n     * A page about a topic of interest to this person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    interest: _NS$t(\"interest\"),\r\n    /**\r\n     * A jabber ID for something.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    jabberID: _NS$t(\"jabberID\"),\r\n    /**\r\n     * A person known by this person (indicating some level of reciprocated interaction between the parties).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    knows: _NS$t(\"knows\"),\r\n    /**\r\n     * The last name of a person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    lastName: _NS$t(\"lastName\"),\r\n    /**\r\n     * A logo representing some thing.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    logo: _NS$t(\"logo\"),\r\n    /**\r\n     * Something that was made by this agent.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    made: _NS$t(\"made\"),\r\n    /**\r\n     * An agent that made this thing.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    maker: _NS$t(\"maker\"),\r\n    /**\r\n     * A personal mailbox, ie. an Internet mailbox associated with exactly one owner, the first owner of this mailbox. This is a 'static inverse functional property', in that there is (across time and change) at most one individual that ever has any particular value for foaf:mbox.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    mbox: _NS$t(\"mbox\"),\r\n    /**\r\n     * The sha1sum of the URI of an Internet mailbox associated with exactly one owner, the first owner of the mailbox.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    mbox_sha1sum: _NS$t(\"mbox_sha1sum\"),\r\n    /**\r\n     * Indicates a member of a Group\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    member: _NS$t(\"member\"),\r\n    /**\r\n     * Indicates the class of individuals that are a member of a Group\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    membershipClass: _NS$t(\"membershipClass\"),\r\n    /**\r\n     * An MSN chat ID\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    msnChatID: _NS$t(\"msnChatID\"),\r\n    /**\r\n     * A Myers Briggs (MBTI) personality classification.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    myersBriggs: _NS$t(\"myersBriggs\"),\r\n    /**\r\n     * A name for some thing.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    name: _NS$t(\"name\"),\r\n    /**\r\n     * An OpenID for an Agent.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    openid: _NS$t(\"openid\"),\r\n    /**\r\n     * A project this person has previously worked on.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    pastProject: _NS$t(\"pastProject\"),\r\n    /**\r\n     * A phone, specified using fully qualified tel: URI scheme (refs: http://www.w3.org/Addressing/schemes.html#tel).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    phone: _NS$t(\"phone\"),\r\n    /**\r\n     * A .plan comment, in the tradition of finger and '.plan' files.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    plan: _NS$t(\"plan\"),\r\n    /**\r\n     * A link to the publications of this person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    publications: _NS$t(\"publications\"),\r\n    /**\r\n     * A homepage of a school attended by the person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    schoolHomepage: _NS$t(\"schoolHomepage\"),\r\n    /**\r\n     * A sha1sum hash, in hex.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    sha1: _NS$t(\"sha1\"),\r\n    /**\r\n     * A Skype ID\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    skypeID: _NS$t(\"skypeID\"),\r\n    /**\r\n     * A string expressing what the user is happy for the general public (normally) to know about their current activity.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    status: _NS$t(\"status\"),\r\n    /**\r\n     * The surname of some person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    surname: _NS$t(\"surname\"),\r\n    /**\r\n     * A theme.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    theme: _NS$t(\"theme\"),\r\n    /**\r\n     * A derived thumbnail image.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    thumbnail: _NS$t(\"thumbnail\"),\r\n    /**\r\n     * A tipjar document for this agent, describing means for payment and reward.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    tipjar: _NS$t(\"tipjar\"),\r\n    /**\r\n     * Title (Mr, Mrs, Ms, Dr. etc)\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    title: _NS$t(\"title\"),\r\n    /**\r\n     * A thing of interest to this person.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    topic_interest: _NS$t(\"topic_interest\"),\r\n    /**\r\n     * A weblog of some thing (whether person, group, company etc.).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    weblog: _NS$t(\"weblog\"),\r\n    /**\r\n     * A work info homepage of some person; a page about their work for some organization.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    workInfoHomepage: _NS$t(\"workInfoHomepage\"),\r\n    /**\r\n     * A workplace homepage of some person; the homepage of an organization they work for.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    workplaceHomepage: _NS$t(\"workplaceHomepage\"),\r\n    /**\r\n     * A Yahoo chat ID\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://xmlns.com/foaf/0.1/\r\n     */\r\n    yahooChatID: _NS$t(\"yahooChatID\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * A namespace for describing HTTP messages (http://www.w3.org/Protocols/rfc2616/rfc2616.html)\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$s = \"http://www.w3.org/2011/http#\";\r\nfunction _NS$s(localName) {\r\n    return (_NAMESPACE$s + localName);\r\n}\r\n/**\r\n * A namespace for describing HTTP messages (http://www.w3.org/Protocols/rfc2616/rfc2616.html)\r\n */\r\nvar HTTP = {\r\n    PREFIX: \"http\",\r\n    NAMESPACE: _NAMESPACE$s,\r\n    PREFIX_AND_NAMESPACE: { \"http\": \"http://www.w3.org/2011/http#\" },\r\n    NS: _NS$s,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A connection used for HTTP transfer.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    Connection: _NS$s(\"Connection\"),\r\n    /**\r\n     * An entity header in an HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    EntityHeader: _NS$s(\"EntityHeader\"),\r\n    /**\r\n     * A header in an HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    MessageHeader: _NS$s(\"MessageHeader\"),\r\n    /**\r\n     * A general header in an HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    GeneralHeader: _NS$s(\"GeneralHeader\"),\r\n    /**\r\n     * A part of a deconstructed header value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    HeaderElement: _NS$s(\"HeaderElement\"),\r\n    /**\r\n     * A header name.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    HeaderName: _NS$s(\"HeaderName\"),\r\n    /**\r\n     * An HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    Message: _NS$s(\"Message\"),\r\n    /**\r\n     * The HTTP method used for the request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    Method: _NS$s(\"Method\"),\r\n    /**\r\n     * A parameter for a part of a header value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Parameter: _NS$s(\"Parameter\"),\r\n    /**\r\n     * An HTTP request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    Request: _NS$s(\"Request\"),\r\n    /**\r\n     * A header in an HTTP request message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    RequestHeader: _NS$s(\"RequestHeader\"),\r\n    /**\r\n     * An HTTP response.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    Response: _NS$s(\"Response\"),\r\n    /**\r\n     * A header in an HTTP response message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    ResponseHeader: _NS$s(\"ResponseHeader\"),\r\n    /**\r\n     * The status code of an HTTP response.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    StatusCode: _NS$s(\"StatusCode\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The absolute request URI.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    absoluteURI: _NS$s(\"absoluteURI\"),\r\n    /**\r\n     * The request URI of an HTTP request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    requestURI: _NS$s(\"requestURI\"),\r\n    /**\r\n     * The absolute path sort of request URI.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    absolutePath: _NS$s(\"absolutePath\"),\r\n    /**\r\n     * The authority sort of request URI.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    authority: _NS$s(\"authority\"),\r\n    /**\r\n     * The entity body of an HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    body: _NS$s(\"body\"),\r\n    /**\r\n     * The authority of a connection used for the HTTP transfer.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    connectionAuthority: _NS$s(\"connectionAuthority\"),\r\n    /**\r\n     * The name of a header element.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    elementName: _NS$s(\"elementName\"),\r\n    /**\r\n     * The value of a header element.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    elementValue: _NS$s(\"elementValue\"),\r\n    /**\r\n     * The name of an HTTP header field.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    fieldName: _NS$s(\"fieldName\"),\r\n    /**\r\n     * The value of an HTTP header field.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    fieldValue: _NS$s(\"fieldValue\"),\r\n    /**\r\n     * The deconstructed parts of an HTTP header value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    headerElements: _NS$s(\"headerElements\"),\r\n    /**\r\n     * The name of an HTTP header.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    hdrName: _NS$s(\"hdrName\"),\r\n    /**\r\n     * The headers in an HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    headers: _NS$s(\"headers\"),\r\n    /**\r\n     * The HTTP version of an HTTP message.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    httpVersion: _NS$s(\"httpVersion\"),\r\n    /**\r\n     * The HTTP method used for the HTTP request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    mthd: _NS$s(\"mthd\"),\r\n    /**\r\n     * The HTTP method name used for the HTTP request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    methodName: _NS$s(\"methodName\"),\r\n    /**\r\n     * The name of a parameter in a part of a deconstructed HTTP header value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    paramName: _NS$s(\"paramName\"),\r\n    /**\r\n     * The parameters in a part of a deconstructed HTTP header value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    params: _NS$s(\"params\"),\r\n    /**\r\n     * The value of a parameter in a part of a deconstructed HTTP header value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    paramValue: _NS$s(\"paramValue\"),\r\n    /**\r\n     * The reason phrase (status text) of an HTTP response.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    reasonPhrase: _NS$s(\"reasonPhrase\"),\r\n    /**\r\n     * The HTTP requests made via a connection.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    requests: _NS$s(\"requests\"),\r\n    /**\r\n     * The HTTP response sent in answer to an HTTP request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    resp: _NS$s(\"resp\"),\r\n    /**\r\n     * The status code of an HTTP response.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    sc: _NS$s(\"sc\"),\r\n    /**\r\n     * The status code number.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    statusCodeNumber: _NS$s(\"statusCodeNumber\"),\r\n    /**\r\n     * The status code value of an HTTP response.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.ietf.org/rfc/rfc2616.txt\r\n     */\r\n    statusCodeValue: _NS$s(\"statusCodeValue\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * This vocabulary is a one deemed to contain all HTTP headers.\r\nThe rdflib.js library uses it as for relationships between an HTTP response\r\nand the  content (value) of the HTTP header in that response.     The ontology\r\nis deemed to contain one property for every HTTP header, standard or not.\r\nThe property in this ontology has a localname which is the header field converted\r\nto lower case.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$r = \"http://www.w3.org/2007/ont/httph#\";\r\nfunction _NS$r(localName) {\r\n    return (_NAMESPACE$r + localName);\r\n}\r\n/**\r\n * This vocabulary is a one deemed to contain all HTTP headers.\r\nThe rdflib.js library uses it as for relationships between an HTTP response\r\nand the  content (value) of the HTTP header in that response.     The ontology\r\nis deemed to contain one property for every HTTP header, standard or not.\r\nThe property in this ontology has a localname which is the header field converted\r\nto lower case.\r\n */\r\nvar HTTPH_INRUPT = {\r\n    PREFIX: \"httph-inrupt\",\r\n    NAMESPACE: _NAMESPACE$r,\r\n    PREFIX_AND_NAMESPACE: { \"httph-inrupt\": \"http://www.w3.org/2007/ont/httph#\" },\r\n    NS: _NS$r,\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * See the HTTP specification\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2007/ont/httph\r\n     */\r\n    content_type: _NS$r(\"content-type\"),\r\n    /**\r\n     * See the HTTP specification\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2007/ont/httph#\r\n     */\r\n    accept: _NS$r(\"accept\"),\r\n    /**\r\n     * See the HTTP specification\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2007/ont/httph#\r\n     */\r\n    accept_language: _NS$r(\"accept-language\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * The Hydra Core Vocabulary is a lightweight vocabulary to create hypermedia-driven Web APIs. By specifying a number of concepts commonly used in Web APIs it enables the creation of generic API clients.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$q = \"http://www.w3.org/ns/hydra/core#\";\r\nfunction _NS$q(localName) {\r\n    return (_NAMESPACE$q + localName);\r\n}\r\n/**\r\n * The Hydra Core Vocabulary is a lightweight vocabulary to create hypermedia-driven Web APIs. By specifying a number of concepts commonly used in Web APIs it enables the creation of generic API clients.\r\n */\r\nvar HYDRA = {\r\n    PREFIX: \"hydra\",\r\n    NAMESPACE: _NAMESPACE$q,\r\n    PREFIX_AND_NAMESPACE: { \"hydra\": \"http://www.w3.org/ns/hydra/core#\" },\r\n    NS: _NS$q,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * The class of Hydra classes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    Class: _NS$q(\"Class\"),\r\n    /**\r\n     * The class of properties representing links.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    Link: _NS$q(\"Link\"),\r\n    /**\r\n     * The Hydra API documentation class\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    ApiDocumentation: _NS$q(\"ApiDocumentation\"),\r\n    /**\r\n     * A templated link.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    TemplatedLink: _NS$q(\"TemplatedLink\"),\r\n    /**\r\n     * A runtime error, used to report information beyond the returned status code.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    Error: _NS$q(\"Error\"),\r\n    /**\r\n     * A collection holding references to a number of related resources.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    Collection: _NS$q(\"Collection\"),\r\n    /**\r\n     * A PartialCollectionView describes a partial view of a Collection. Multiple PartialCollectionViews can be connected with the the next/previous properties to allow a client to retrieve all members of the collection.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    PartialCollectionView: _NS$q(\"PartialCollectionView\"),\r\n    /**\r\n     * Provides a base abstract for base Uri source for Iri template resolution.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    BaseUriSource: _NS$q(\"BaseUriSource\"),\r\n    /**\r\n     * Specifies a possible either expected or returned header values\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    HeaderSpecification: _NS$q(\"HeaderSpecification\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * A property\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    property: _NS$q(\"property\"),\r\n    /**\r\n     * True if the property is required, false otherwise.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    required: _NS$q(\"required\"),\r\n    /**\r\n     * True if the client can retrieve the property's value, false otherwise.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    readable: _NS$q(\"readable\"),\r\n    /**\r\n     * True if the client can change the property's value, false otherwise.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    writable: _NS$q(\"writable\"),\r\n    /**\r\n     * This property is left for compatibility purposes and hydra:writable should be used instead.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    writeable: _NS$q(\"writeable\"),\r\n    /**\r\n     * The HTTP method.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    method: _NS$q(\"method\"),\r\n    /**\r\n     * The HTTP status code. Please note it may happen this value will be different to actual status code received.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    statusCode: _NS$q(\"statusCode\"),\r\n    /**\r\n     * A title, often used along with a description.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    title: _NS$q(\"title\"),\r\n    /**\r\n     * A description.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    description: _NS$q(\"description\"),\r\n    /**\r\n     * This predicate is left for compatibility purposes and hydra:memberAssertion should be used instead.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    manages: _NS$q(\"manages\"),\r\n    /**\r\n     * The total number of items referenced by a collection.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    totalItems: _NS$q(\"totalItems\"),\r\n    /**\r\n     * A property representing a freetext query.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    freetextQuery: _NS$q(\"freetextQuery\"),\r\n    /**\r\n     * A templated string with placeholders. The literal's datatype indicates the template syntax; if not specified, hydra:Rfc6570Template is assumed.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/hydra/core#Rfc6570Template\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    template: _NS$q(\"template\"),\r\n    /**\r\n     * An IRI template as defined by RFC6570.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - http://tools.ietf.org/html/rfc6570\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    Rfc6570Template: _NS$q(\"Rfc6570Template\"),\r\n    /**\r\n     * The representation format to use when expanding the IRI template.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    variableRepresentation: _NS$q(\"variableRepresentation\"),\r\n    /**\r\n     * A variable-to-property mapping of the IRI template.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    mapping: _NS$q(\"mapping\"),\r\n    /**\r\n     * An IRI template variable\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    variable: _NS$q(\"variable\"),\r\n    /**\r\n     * relative Uri resolution\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    resolveRelativeUsing: _NS$q(\"resolveRelativeUsing\"),\r\n    /**\r\n     * Instructs to skip N elements of the set.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    offset: _NS$q(\"offset\"),\r\n    /**\r\n     * Instructs to limit set only to N elements.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    limit: _NS$q(\"limit\"),\r\n    /**\r\n     * Instructs to provide a specific page of the collection at a given index.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    pageIndex: _NS$q(\"pageIndex\"),\r\n    /**\r\n     * Instructs to provide a specific page reference of the collection.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    pageReference: _NS$q(\"pageReference\"),\r\n    /**\r\n     * Name of the header returned by the operation.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    returnsHeader: _NS$q(\"returnsHeader\"),\r\n    /**\r\n     * Specification of the header expected by the operation.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    expectsHeader: _NS$q(\"expectsHeader\"),\r\n    /**\r\n     * Name of the header.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    headerName: _NS$q(\"headerName\"),\r\n    /**\r\n     * Possible value of the header.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    possibleValue: _NS$q(\"possibleValue\"),\r\n    /**\r\n     * Determines whether the provided set of header values is closed or not.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    closedSet: _NS$q(\"closedSet\"),\r\n    /**\r\n     * Hint on what kind of extensions are in use.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/hydra/core\r\n     */\r\n    extension: _NS$q(\"extension\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - iCal - a vocabulary for description of events and calendars\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$p = \"https://www.w3.org/2002/12/cal/ical#\";\r\nfunction _NS$p(localName) {\r\n    return (_NAMESPACE$p + localName);\r\n}\r\n/**\r\n * [Generator provided] - iCal - a vocabulary for description of events and calendars\r\n */\r\nvar ICAL = {\r\n    PREFIX: \"ical\",\r\n    NAMESPACE: _NAMESPACE$p,\r\n    PREFIX_AND_NAMESPACE: { \"ical\": \"https://www.w3.org/2002/12/cal/ical#\" },\r\n    NS: _NS$p,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Provide a grouping of component properties that define an alarm.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Valarm: _NS$p(\"Valarm\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Value_DURATION: _NS$p(\"Value_DURATION\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Value_CAL_ADDRESS: _NS$p(\"Value_CAL-ADDRESS\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Value_DATE: _NS$p(\"Value_DATE\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Value_DATE_TIME: _NS$p(\"Value_DATE-TIME\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Value_PERIOD: _NS$p(\"Value_PERIOD\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Value_RECUR: _NS$p(\"Value_RECUR\"),\r\n    /**\r\n     * Provide a grouping of component properties that describe an event.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Vevent: _NS$p(\"Vevent\"),\r\n    /**\r\n     * Provide a grouping of component properties that describe either a request for free/busy time, describe a response to a request for free/busy time or describe a published set of busy time.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Vfreebusy: _NS$p(\"Vfreebusy\"),\r\n    /**\r\n     * Provide a grouping of component properties that describe a journal entry.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Vjournal: _NS$p(\"Vjournal\"),\r\n    /**\r\n     * Provide a grouping of component properties that defines a time zone.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Vtimezone: _NS$p(\"Vtimezone\"),\r\n    /**\r\n     * Provide a grouping of calendar properties that describe a to-do.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Vtodo: _NS$p(\"Vtodo\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     *\r\n          default value type: URI\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    attach: _NS$p(\"attach\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    description: _NS$p(\"description\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    summary: _NS$p(\"summary\"),\r\n    /**\r\n     *\r\n          value type: DURATION\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    duration: _NS$p(\"duration\"),\r\n    /**\r\n     *\r\n          value type: CAL-ADDRESS\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    attendee: _NS$p(\"attendee\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    action: _NS$p(\"action\"),\r\n    /**\r\n     *\r\n          value type: INTEGER\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    repeat: _NS$p(\"repeat\"),\r\n    /**\r\n     *\r\n          default value type: DURATION\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    trigger: _NS$p(\"trigger\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    categories: _NS$p(\"categories\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    class: _NS$p(\"class\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    comment: _NS$p(\"comment\"),\r\n    /**\r\n     * This property specifies information related to the global position for the activity specified by a calendar component.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    geo: _NS$p(\"geo\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    location: _NS$p(\"location\"),\r\n    /**\r\n     *\r\n          value type: INTEGER\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    priority: _NS$p(\"priority\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    resources: _NS$p(\"resources\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    status: _NS$p(\"status\"),\r\n    /**\r\n     *\r\n          default value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    dtend: _NS$p(\"dtend\"),\r\n    /**\r\n     *\r\n          default value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    dtstart: _NS$p(\"dtstart\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    transp: _NS$p(\"transp\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    contact: _NS$p(\"contact\"),\r\n    /**\r\n     *\r\n          value type: CAL-ADDRESS\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    organizer: _NS$p(\"organizer\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    relatedTo: _NS$p(\"relatedTo\"),\r\n    /**\r\n     *\r\n          value type: URI\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    url: _NS$p(\"url\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    uid: _NS$p(\"uid\"),\r\n    /**\r\n     *\r\n          value type: RECUR\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    exrule: _NS$p(\"exrule\"),\r\n    /**\r\n     *\r\n          default value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    rdate: _NS$p(\"rdate\"),\r\n    /**\r\n     *\r\n          value type: RECUR\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    rrule: _NS$p(\"rrule\"),\r\n    /**\r\n     *\r\n          value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    created: _NS$p(\"created\"),\r\n    /**\r\n     *\r\n          value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    dtstamp: _NS$p(\"dtstamp\"),\r\n    /**\r\n     *\r\n          value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    lastModified: _NS$p(\"lastModified\"),\r\n    /**\r\n     *\r\n          value type: integer\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    sequence: _NS$p(\"sequence\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    requestStatus: _NS$p(\"requestStatus\"),\r\n    /**\r\n     *\r\n          value type: PERIOD\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    freebusy: _NS$p(\"freebusy\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tzid: _NS$p(\"tzid\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tzname: _NS$p(\"tzname\"),\r\n    /**\r\n     *\r\n          value type: UTC-OFFSET\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tzoffsetfrom: _NS$p(\"tzoffsetfrom\"),\r\n    /**\r\n     *\r\n          value type: UTC-OFFSET\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tzoffsetto: _NS$p(\"tzoffsetto\"),\r\n    /**\r\n     *\r\n          value type: URI\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tzurl: _NS$p(\"tzurl\"),\r\n    /**\r\n     *\r\n          value type: INTEGER\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    percentComplete: _NS$p(\"percentComplete\"),\r\n    /**\r\n     *\r\n          value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    completed: _NS$p(\"completed\"),\r\n    /**\r\n     *\r\n          default value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    due: _NS$p(\"due\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    X_: _NS$p(\"X-\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    calscale: _NS$p(\"calscale\"),\r\n    /**\r\n     *\r\n          default value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    exdate: _NS$p(\"exdate\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    method: _NS$p(\"method\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    prodid: _NS$p(\"prodid\"),\r\n    /**\r\n     *\r\n          default value type: DATE-TIME\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    recurrenceId: _NS$p(\"recurrenceId\"),\r\n    /**\r\n     *\r\n          value type: TEXT\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    version: _NS$p(\"version\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * This is a vocabulary document and is used to achieve certain features of the JSON-LD language.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$o = \"http://www.w3.org/ns/json-ld#\";\r\nfunction _NS$o(localName) {\r\n    return (_NAMESPACE$o + localName);\r\n}\r\n/**\r\n * This is a vocabulary document and is used to achieve certain features of the JSON-LD language.\r\n */\r\nvar JSONLD = {\r\n    PREFIX: \"jsonld\",\r\n    NAMESPACE: _NAMESPACE$o,\r\n    PREFIX_AND_NAMESPACE: { \"jsonld\": \"http://www.w3.org/ns/json-ld#\" },\r\n    NS: _NS$o,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Defines term definitions and other aspects of a JSON-LD `Context`.\r\n  \n  A [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) MUST be a map whose keys MUST be either _terms_, _compact IRIs_, _IRIs_, or one of the keywords `@base`, `@import`, `@language`, `@propagate`, `@protected`, `@type`, `@version`, or `@vocab`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    Context: _NS$o(\"Context\"),\r\n    /**\r\n     * A string ([simple term definition](http://www.w3.org/TR/json-ld11/#dfn-simple-term-definitions)), expanding to an IRI.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#dfn-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    PrefixDefinition: _NS$o(\"PrefixDefinition\"),\r\n    /**\r\n     * A [term definition](http://www.w3.org/TR/json-ld11/#dfn-term-definitions) is an entry in a [context](#Context), where the key defines a term which may be used within a dictionary as a key, type, or elsewhere that a string is interpreted as a vocabulary item. Its value is an [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definitions).\r\n  \n  \n  \n  An [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definition) MUST be a map composed of zero or more keys from `@id`, `@reverse`, `@type`, `@language`, `@container`, `@context`, `@prefix`, `@propagate`, or `@protected`. An expanded term definition SHOULD NOT contain any other keys.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#dfn-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    TermDefinition: _NS$o(\"TermDefinition\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * If the [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) has an `@base` key, its value MUST be an _IRI reference_, or `null`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    base: _NS$o(\"base\"),\r\n    /**\r\n     * This profile IRI is used to request or specify compacted JSON-LD document form.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#iana-considerations\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    compacted: _NS$o(\"compacted\"),\r\n    /**\r\n     * The associated `@container` value in an [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definitions).\r\n  \n  If the [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definitions) contains the `@container` keyword, its value MUST be either `@list`, `@set`, `@language`, `@index`, `@id`, `@graph`, `@type`, or be `null` or an array containing exactly any one of those keywords, or a combination of `@set` and any of `@index`, `@id`, `@graph`, `@type`, `@language` in any order.\r\n  \n  `@container` may also be an array containing `@graph` along with either `@id` or `@index` and also optionally including `@set`.\r\n  \n  If the value is `@language`, when the term is used outside of the `@context`, the associated value MUST be a language map.\r\n  \n  If the value is `@index`, when the term is used outside of the `@context`, the associated value MUST be an index map.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#expanded-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    container: _NS$o(\"container\"),\r\n    /**\r\n     * As an IRI, this link relation is used to associate a JSON-LD context with a JSON document so that it can be interpreted as JSON-LD. In an HTTP request header, specifies the location of a context to use for compaction. As a Context, defines an inline `context definition`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#interpreting-json-as-json-ld\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    context: _NS$o(\"context\"),\r\n    /**\r\n     * Term definition(s) associated with this context.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    definition: _NS$o(\"definition\"),\r\n    /**\r\n     * If the [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) has an `@direction` key, its value MUST be one of `\"ltr\"` or `\"rtl\"`, or be `null`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    direction: _NS$o(\"direction\"),\r\n    /**\r\n     * This profile URI is used to request or specify expanded JSON-LD document form.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#iana-considerations\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    expanded: _NS$o(\"expanded\"),\r\n    /**\r\n     * This profile URI is used to request or specify flattened JSON-LD document form.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#iana-considerations\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    flattened: _NS$o(\"flattened\"),\r\n    /**\r\n     * As an IRI, this link relation is used to associate a JSON-LD frame with a JSON-LD document. In an HTTP request header, specifies the location of a frame to use for framing.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#iana-considerations\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    frame: _NS$o(\"frame\"),\r\n    /**\r\n     * This profile URI is used to request or specify framed JSON-LD document form.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#iana-considerations\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    framed: _NS$o(\"framed\"),\r\n    /**\r\n     * The `@id` mapping of a [term definition](#TermDefinition).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#expanded-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    id: _NS$o(\"id\"),\r\n    /**\r\n     * If the [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) contains the `@import` keyword, its value MUST be an _IRI reference_. When used as a reference from an `@import`, the referenced context definition MUST NOT include an `@import` key, itself.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    import: _NS$o(\"import\"),\r\n    /**\r\n     * The [default language](https://www.w3.org/TR/json-ld11/#dfn-default-language) is set in the context using the `@language` key whose value MUST be a string representing a [BCP47](https://tools.ietf.org/html/bcp47) language code or null.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#dfn-default-language\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    language: _NS$o(\"language\"),\r\n    /**\r\n     * If the [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definitions) contains the `@nest` keyword, its value MUST be either `@nest`, or a _term_ which expands to `@nest`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#expanded-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    nest: _NS$o(\"nest\"),\r\n    /**\r\n     * With the value `true`, allows this term to be used to construct a compact IRI when compacting.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#expanded-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    prefix: _NS$o(\"prefix\"),\r\n    /**\r\n     * If the [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) contains the `@propagate` keyword, its value MUST be `true` or `false`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    propagate: _NS$o(\"propagate\"),\r\n    /**\r\n     * If the [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) contains the `@protected` keyword, its value MUST be `true` or `false`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    protected: _NS$o(\"protected\"),\r\n    /**\r\n     * The `@reverse` mapping of an [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definitions).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#expanded-term-definition\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    reverse: _NS$o(\"reverse\"),\r\n    /**\r\n     * This profile URI is used to request or specify streaming JSON-LD document form.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11-streaming/#streaming-profile\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    streaming: _NS$o(\"streaming\"),\r\n    /**\r\n     * The term associated with a [term definition](#TermDefinition).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#dfn-term\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    term: _NS$o(\"term\"),\r\n    /**\r\n     * If the [context definition](https://www.w3.org/TR/json-ld11/#dfn-context-definition) contains the `@type` keyword, its value MUST be a map with only the entry `@container` set to `@set`, and optionally an entry `@protected`.\r\n  \n  \n  \n  If the [expanded term definition](https://www.w3.org/TR/json-ld11/#dfn-expanded-term-definitions) contains the `@type` keyword, its value MUST be an _IRI reference_, a _term_, `null`, or one of the keywords `@id`, `@json`, `@none`, or `@vocab`.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#context-definitions\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    type: _NS$o(\"type\"),\r\n    /**\r\n     * The [processing mode](https://www.w3.org/TR/json-ld11/#dfn-processing-mode) defines how a JSON-LD document is processed. By default, all documents are assumed to be conformant with [JSON-LD 1.1`](http://www.w3.org/TR/json-ld11). By defining a different version via explicit API option, other processing modes can be accessed. This specification defines extensions for the `json-ld-1.1` processing mode.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#dfn-processing-mode\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    version: _NS$o(\"version\"),\r\n    /**\r\n     * Used to expand properties and values in `@type` with a common prefix IRI.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#default-vocabulary\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/json-ld#\r\n     */\r\n    vocab: _NS$o(\"vocab\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * Vocabulary URIs defined in the Linked Data Platform (LDP) namespace.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$n = \"http://www.w3.org/ns/ldp#\";\r\nfunction _NS$n(localName) {\r\n    return (_NAMESPACE$n + localName);\r\n}\r\n/**\r\n * Vocabulary URIs defined in the Linked Data Platform (LDP) namespace.\r\n */\r\nvar LDP = {\r\n    PREFIX: \"ldp\",\r\n    NAMESPACE: _NAMESPACE$n,\r\n    PREFIX_AND_NAMESPACE: { \"ldp\": \"http://www.w3.org/ns/ldp#\" },\r\n    NS: _NS$n,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A HTTP-addressable resource whose lifecycle is managed by a LDP server.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    Resource: _NS$n(\"Resource\"),\r\n    /**\r\n     * A Linked Data Platform Resource (LDPR) whose state is represented as RDF.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    RDFSource: _NS$n(\"RDFSource\"),\r\n    /**\r\n     * A Linked Data Platform Resource (LDPR) whose state is NOT represented as RDF.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    NonRDFSource: _NS$n(\"NonRDFSource\"),\r\n    /**\r\n     * A Linked Data Platform RDF Source (LDP-RS) that also conforms to additional patterns and conventions for managing membership. Readers should refer to the specification defining this ontology for the list of behaviors associated with it.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    Container: _NS$n(\"Container\"),\r\n    /**\r\n     * An LDPC that uses a predefined predicate to simply link to its contained resources.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    BasicContainer: _NS$n(\"BasicContainer\"),\r\n    /**\r\n     * An LDPC that is similar to a LDP-DC but it allows an indirection with the ability to list as member a resource, such as a URI representing a real-world object, that is different from the resource that is created.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    DirectContainer: _NS$n(\"DirectContainer\"),\r\n    /**\r\n     * An LDPC that has the flexibility of choosing what form the membership triples take.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    IndirectContainer: _NS$n(\"IndirectContainer\"),\r\n    /**\r\n     * URI signifying that the resource is an in-sequence page resource, as defined by LDP Paging.  Typically used on Link rel='type' response headers.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    Page: _NS$n(\"Page\"),\r\n    /**\r\n     * Element in the list of sorting criteria used by the server to assign container members to pages.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    PageSortCriterion: _NS$n(\"PageSortCriterion\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Indicates which predicate is used in membership triples, and that the membership triple pattern is < membership-constant-URI , object-of-hasMemberRelation, member-URI >.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    hasMemberRelation: _NS$n(\"hasMemberRelation\"),\r\n    /**\r\n     * Indicates which predicate is used in membership triples, and that the membership triple pattern is < member-URI , object-of-isMemberOfRelation, membership-constant-URI >.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    isMemberOfRelation: _NS$n(\"isMemberOfRelation\"),\r\n    /**\r\n     * Indicates the membership-constant-URI in a membership triple.  Depending upon the membership triple pattern a container uses, as indicated by the presence of ldp:hasMemberRelation or ldp:isMemberOfRelation, the membership-constant-URI might occupy either the subject or object position in membership triples.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    membershipResource: _NS$n(\"membershipResource\"),\r\n    /**\r\n     * Indicates which triple in a creation request should be used as the member-URI value in the membership triple added when the creation request is successful.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    insertedContentRelation: _NS$n(\"insertedContentRelation\"),\r\n    /**\r\n     * LDP servers should use this predicate as the membership predicate if there is no obvious predicate from an application vocabulary to use.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    member: _NS$n(\"member\"),\r\n    /**\r\n     * Links a container with resources created through the container.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    contains: _NS$n(\"contains\"),\r\n    /**\r\n     * Links a resource with constraints that the server requires requests like creation and update to conform to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    constrainedBy: _NS$n(\"constrainedBy\"),\r\n    /**\r\n     * Link to the list of sorting criteria used by the server in a representation.  Typically used on Link response headers as an extension link relation URI in the rel= parameter.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    pageSortCriteria: _NS$n(\"pageSortCriteria\"),\r\n    /**\r\n     * Predicate used to specify the order of the members across a page sequence's in-sequence page resources; it asserts nothing about the order of members in the representation of a single page.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    pageSortPredicate: _NS$n(\"pageSortPredicate\"),\r\n    /**\r\n     * The ascending/descending/etc order used to order the members across pages in a page sequence.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    pageSortOrder: _NS$n(\"pageSortOrder\"),\r\n    /**\r\n     * The collation used to order the members across pages in a page sequence when comparing strings.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    pageSortCollation: _NS$n(\"pageSortCollation\"),\r\n    /**\r\n     * Link to a page sequence resource, as defined by LDP Paging.  Typically used to communicate the sorting criteria used to allocate LDPC members to pages.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ldp#\r\n     */\r\n    pageSequence: _NS$n(\"pageSequence\"),\r\n    /**\r\n     * Links a resource to a container where notifications for the resource can be created and discovered.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: https://www.w3.org/TR/ldn/\r\n     */\r\n    inbox: _NS$n(\"inbox\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * The ODRL Vocabulary and Expression defines a set of concepts and terms (the vocabulary) and encoding mechanism (the expression) for permissions and obligations statements describing digital content usage based on the ODRL Information Model.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$m = \"http://www.w3.org/ns/odrl/2/\";\r\nfunction _NS$m(localName) {\r\n    return (_NAMESPACE$m + localName);\r\n}\r\n/**\r\n * The ODRL Vocabulary and Expression defines a set of concepts and terms (the vocabulary) and encoding mechanism (the expression) for permissions and obligations statements describing digital content usage based on the ODRL Information Model.\r\n */\r\nvar ODRL = {\r\n    PREFIX: \"odrl\",\r\n    NAMESPACE: _NAMESPACE$m,\r\n    PREFIX_AND_NAMESPACE: { \"odrl\": \"http://www.w3.org/ns/odrl/2/\" },\r\n    NS: _NS$m,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A non-empty group of Permissions and/or Prohibitions.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Policy: _NS$m(\"Policy\"),\r\n    /**\r\n     * An unambiguous identifier\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    uid: _NS$m(\"uid\"),\r\n    /**\r\n     * The identifier(s) of an ODRL Profile that the Policy conforms to.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    profile: _NS$m(\"profile\"),\r\n    /**\r\n     * Relates a (child) policy to another (parent) policy from which terms are inherited.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    inheritFrom: _NS$m(\"inheritFrom\"),\r\n    /**\r\n     * An abstract concept that represents the common characteristics of Permissions, Prohibitions, and Duties.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Rule: _NS$m(\"Rule\"),\r\n    /**\r\n     * Relation is an abstract property which creates an explicit link between an Action and an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    relation: _NS$m(\"relation\"),\r\n    /**\r\n     * Function is an abstract property whose sub-properties define the functional roles which may be fulfilled by a party in relation to a Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    function: _NS$m(\"function\"),\r\n    /**\r\n     * Failure is an abstract property that defines the violation (or unmet) relationship between Rules.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    failure: _NS$m(\"failure\"),\r\n    /**\r\n     * A resource or a collection of resources that are the subject of a Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Asset: _NS$m(\"Asset\"),\r\n    /**\r\n     * An entity or a collection of entities that undertake Roles in a Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Party: _NS$m(\"Party\"),\r\n    /**\r\n     * Used to establish strategies to resolve conflicts that arise from the merging of Policies or conflicts between Permissions and Prohibitions in the same Policy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    ConflictTerm: _NS$m(\"ConflictTerm\"),\r\n    /**\r\n     * The conflict-resolution strategy for a Policy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    conflict: _NS$m(\"conflict\"),\r\n    /**\r\n     * Permissions take preference over prohibitions.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    perm: _NS$m(\"perm\"),\r\n    /**\r\n     * Prohibitions take preference over permissions.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    prohibit: _NS$m(\"prohibit\"),\r\n    /**\r\n     * The policy is void.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    invalid: _NS$m(\"invalid\"),\r\n    /**\r\n     * A Policy that grants the assignee a Rule over an Asset from an assigner.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Agreement: _NS$m(\"Agreement\"),\r\n    /**\r\n     * A Policy that proposes a Rule over an Asset from an assigner.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Offer: _NS$m(\"Offer\"),\r\n    /**\r\n     * A Policy that expresses a Rule over an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Set: _NS$m(\"Set\"),\r\n    /**\r\n     * A Policy that asserts a Rule over an Asset from parties.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Assertion: _NS$m(\"Assertion\"),\r\n    /**\r\n     * A Policy that expresses a Rule over an Asset containing personal information.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Privacy: _NS$m(\"Privacy\"),\r\n    /**\r\n     * A Policy that proposes a Rule over an Asset from an assignee.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Request: _NS$m(\"Request\"),\r\n    /**\r\n     * A Policy that grants the holder a Rule over an Asset from an assigner.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Ticket: _NS$m(\"Ticket\"),\r\n    /**\r\n     * An Asset that is collection of individual resources\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    AssetCollection: _NS$m(\"AssetCollection\"),\r\n    /**\r\n     * The target property indicates the Asset that is the primary subject to which the Rule action directly applies.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    target: _NS$m(\"target\"),\r\n    /**\r\n     * Identifies an ODRL Policy for which the identified Asset is the target Asset to all the Rules.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    hasPolicy: _NS$m(\"hasPolicy\"),\r\n    /**\r\n     * The output property specifies the Asset which is created from the output of the Action.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    output: _NS$m(\"output\"),\r\n    /**\r\n     * A Party that is a group of individual entities\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    PartyCollection: _NS$m(\"PartyCollection\"),\r\n    /**\r\n     * The Party is the recipient of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    assignee: _NS$m(\"assignee\"),\r\n    /**\r\n     * The Party is the issuer of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    assigner: _NS$m(\"assigner\"),\r\n    /**\r\n     * Identifies an ODRL Policy for which the identified Party undertakes the assignee functional role.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    assigneeOf: _NS$m(\"assigneeOf\"),\r\n    /**\r\n     * Identifies an ODRL Policy for which the identified Party undertakes the assigner functional role.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    assignerOf: _NS$m(\"assignerOf\"),\r\n    /**\r\n     * The Party to be attributed.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    attributedParty: _NS$m(\"attributedParty\"),\r\n    /**\r\n     * The Party who undertakes the attribution.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    attributingParty: _NS$m(\"attributingParty\"),\r\n    /**\r\n     * The Party is the recipient of the compensation.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    compensatedParty: _NS$m(\"compensatedParty\"),\r\n    /**\r\n     * The Party that is the provider of the compensation.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    compensatingParty: _NS$m(\"compensatingParty\"),\r\n    /**\r\n     * The Party to obtain consent from.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    consentingParty: _NS$m(\"consentingParty\"),\r\n    /**\r\n     * The Party who obtains the consent.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    consentedParty: _NS$m(\"consentedParty\"),\r\n    /**\r\n     * The Party who is offering the contract.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    contractingParty: _NS$m(\"contractingParty\"),\r\n    /**\r\n     * The Party who is being contracted.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    contractedParty: _NS$m(\"contractedParty\"),\r\n    /**\r\n     * The Party to be informed of all uses.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    informedParty: _NS$m(\"informedParty\"),\r\n    /**\r\n     * The Party who provides the inform use data.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    informingParty: _NS$m(\"informingParty\"),\r\n    /**\r\n     * The Party who is tracking usage.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    trackingParty: _NS$m(\"trackingParty\"),\r\n    /**\r\n     * The Party whose usage is being tracked.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    trackedParty: _NS$m(\"trackedParty\"),\r\n    /**\r\n     * Identifies an Asset/PartyCollection that the Asset/Party is a member of.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    partOf: _NS$m(\"partOf\"),\r\n    /**\r\n     * Reference to a Asset/PartyCollection\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    source: _NS$m(\"source\"),\r\n    /**\r\n     * An operation on an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Action: _NS$m(\"Action\"),\r\n    /**\r\n     * The operation relating to the Asset for which the Rule is being subjected.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    action: _NS$m(\"action\"),\r\n    /**\r\n     * An Action transitively asserts that another Action that encompasses its operational semantics.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    includedIn: _NS$m(\"includedIn\"),\r\n    /**\r\n     * An Action asserts that another Action is not prohibited to enable its operational semantics.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    implies: _NS$m(\"implies\"),\r\n    /**\r\n     * The ability to perform an Action over an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Permission: _NS$m(\"Permission\"),\r\n    /**\r\n     * Relates an individual Permission to a Policy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    permission: _NS$m(\"permission\"),\r\n    /**\r\n     * The inability to perform an Action over an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Prohibition: _NS$m(\"Prohibition\"),\r\n    /**\r\n     * The obligation to perform an Action\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Duty: _NS$m(\"Duty\"),\r\n    /**\r\n     * Relates an individual Prohibition to a Policy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    prohibition: _NS$m(\"prohibition\"),\r\n    /**\r\n     * To use the Asset\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    use: _NS$m(\"use\"),\r\n    /**\r\n     * To transfer the ownership of the Asset in perpetuity.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    transfer: _NS$m(\"transfer\"),\r\n    /**\r\n     * To accept that the use of the Asset may be tracked.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    acceptTracking: _NS$m(\"acceptTracking\"),\r\n    /**\r\n     * To use the Asset or parts of it as part of a composite collection.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    aggregate: _NS$m(\"aggregate\"),\r\n    /**\r\n     * To add explanatory notations/commentaries to the Asset without modifying the Asset in any other way.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    annotate: _NS$m(\"annotate\"),\r\n    /**\r\n     * To anonymize all or parts of the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    anonymize: _NS$m(\"anonymize\"),\r\n    /**\r\n     * To store the Asset (in a non-transient form).\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    archive: _NS$m(\"archive\"),\r\n    /**\r\n     * To attribute the use of the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    attribute: _NS$m(\"attribute\"),\r\n    /**\r\n     * To compensate by transfer of some amount of value, if defined, for using or selling the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    compensate: _NS$m(\"compensate\"),\r\n    /**\r\n     * To create multiple copies of the Asset that are being concurrently used.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    concurrentUse: _NS$m(\"concurrentUse\"),\r\n    /**\r\n     * To permanently remove all copies of the Asset after it has been used.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    delete: _NS$m(\"delete\"),\r\n    /**\r\n     * To create a new derivative Asset from this Asset and to edit or modify the derivative.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    derive: _NS$m(\"derive\"),\r\n    /**\r\n     * To produce a digital copy of (or otherwise digitize) the Asset from its analogue form.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    digitize: _NS$m(\"digitize\"),\r\n    /**\r\n     * To create a static and transient rendition of an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    display: _NS$m(\"display\"),\r\n    /**\r\n     * To supply the Asset to third-parties.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    distribute: _NS$m(\"distribute\"),\r\n    /**\r\n     * To ensure that the Rule on the Asset is exclusive.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    ensureExclusivity: _NS$m(\"ensureExclusivity\"),\r\n    /**\r\n     * To run the computer program Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    execute: _NS$m(\"execute\"),\r\n    /**\r\n     * To extract parts of the Asset and to use it as a new Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    extract: _NS$m(\"extract\"),\r\n    /**\r\n     * To transfer the ownership of the Asset to a third party without compensation and while deleting the original asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    give: _NS$m(\"give\"),\r\n    /**\r\n     * To grant the use of the Asset to third parties.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    grantUse: _NS$m(\"grantUse\"),\r\n    /**\r\n     * To include other related assets in the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    include: _NS$m(\"include\"),\r\n    /**\r\n     * To record the Asset in an index.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    index: _NS$m(\"index\"),\r\n    /**\r\n     * To inform that an action has been performed on or in relation to the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    inform: _NS$m(\"inform\"),\r\n    /**\r\n     * To load the computer program Asset onto a storage device which allows operating or running the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    install: _NS$m(\"install\"),\r\n    /**\r\n     * To change existing content of the Asset. A new asset is not created by this action.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    modify: _NS$m(\"modify\"),\r\n    /**\r\n     * To move the Asset from one digital location to another including deleting the original copy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    move: _NS$m(\"move\"),\r\n    /**\r\n     * To grant the specified Policy to a third party for their use of the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    nextPolicy: _NS$m(\"nextPolicy\"),\r\n    /**\r\n     * To obtain verifiable consent to perform the requested action in relation to the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    obtainConsent: _NS$m(\"obtainConsent\"),\r\n    /**\r\n     * To create a sequential and transient rendition of an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    play: _NS$m(\"play\"),\r\n    /**\r\n     * To publicly perform the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    present: _NS$m(\"present\"),\r\n    /**\r\n     * To create a tangible and permanent rendition of an Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    print: _NS$m(\"print\"),\r\n    /**\r\n     * To obtain data from the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    read: _NS$m(\"read\"),\r\n    /**\r\n     * To make duplicate copies the Asset in any material form.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    reproduce: _NS$m(\"reproduce\"),\r\n    /**\r\n     * To review the Policy applicable to the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    reviewPolicy: _NS$m(\"reviewPolicy\"),\r\n    /**\r\n     * To transfer the ownership of the Asset to a third party with compensation and while deleting the original asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    sell: _NS$m(\"sell\"),\r\n    /**\r\n     * To deliver the Asset in real-time.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    stream: _NS$m(\"stream\"),\r\n    /**\r\n     * To use the Asset in timed relations with media (audio/visual) elements of another Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    synchronize: _NS$m(\"synchronize\"),\r\n    /**\r\n     * To have a text Asset read out loud.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    textToSpeech: _NS$m(\"textToSpeech\"),\r\n    /**\r\n     * To convert the Asset into a different format.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    transform: _NS$m(\"transform\"),\r\n    /**\r\n     * To translate the original natural language of an Asset into another natural language.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    translate: _NS$m(\"translate\"),\r\n    /**\r\n     * To unload and delete the computer program Asset from a storage device and disable its readiness for operation.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    uninstall: _NS$m(\"uninstall\"),\r\n    /**\r\n     * To apply a watermark to the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    watermark: _NS$m(\"watermark\"),\r\n    /**\r\n     * Relates an individual Duty to a Policy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    obligation: _NS$m(\"obligation\"),\r\n    /**\r\n     * Relates an individual Duty to a Permission.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    duty: _NS$m(\"duty\"),\r\n    /**\r\n     * Relates a Duty to another Duty, the latter being a consequence of not fulfilling the former.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    consequence: _NS$m(\"consequence\"),\r\n    /**\r\n     * Relates an individual remedy Duty to a Prohibition.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    remedy: _NS$m(\"remedy\"),\r\n    /**\r\n     * A boolean expression that refines the semantics of an Action and Party/Asset Collection or declare the conditions applicable to a Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Constraint: _NS$m(\"Constraint\"),\r\n    /**\r\n     * Constraint applied to a Rule\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    constraint: _NS$m(\"constraint\"),\r\n    /**\r\n     * Constraint used to refine the semantics of an Action, or Party/Asset Collection\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    refinement: _NS$m(\"refinement\"),\r\n    /**\r\n     * Operator for constraint expression.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Operator: _NS$m(\"Operator\"),\r\n    /**\r\n     * The operator function applied to operands of a Constraint\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    operator: _NS$m(\"operator\"),\r\n    /**\r\n     * Right operand for constraint expression.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    RightOperand: _NS$m(\"RightOperand\"),\r\n    /**\r\n     * The value of the right operand in a constraint expression.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    rightOperand: _NS$m(\"rightOperand\"),\r\n    /**\r\n     * A reference to a web resource providing the value for the right operand of a Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    rightOperandReference: _NS$m(\"rightOperandReference\"),\r\n    /**\r\n     * Left operand for a constraint expression.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    LeftOperand: _NS$m(\"LeftOperand\"),\r\n    /**\r\n     * The left operand in a constraint expression.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    leftOperand: _NS$m(\"leftOperand\"),\r\n    /**\r\n     * The datatype of the value of the rightOperand or rightOperandReference of a Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    dataType: _NS$m(\"dataType\"),\r\n    /**\r\n     * the value generated from the leftOperand action or a value related to the leftOperand set as the reference for the comparison.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    status: _NS$m(\"status\"),\r\n    /**\r\n     * A logical expression that refines the semantics of an Action and Party/Asset Collection or declare the conditions applicable to a Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    LogicalConstraint: _NS$m(\"LogicalConstraint\"),\r\n    /**\r\n     * Operand is an abstract property for a logical relationship.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    operand: _NS$m(\"operand\"),\r\n    /**\r\n     * A point in space or time defined with absolute coordinates for the positioning of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    absolutePosition: _NS$m(\"absolutePosition\"),\r\n    /**\r\n     * The absolute spatial positions of four corners of a rectangle on a 2D-canvas or the eight corners of a cuboid in a 3D-space for the target Asset to fit.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    absoluteSpatialPosition: _NS$m(\"absoluteSpatialPosition\"),\r\n    /**\r\n     * The absolute temporal positions in a media stream the target Asset has to fit.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    absoluteTemporalPosition: _NS$m(\"absoluteTemporalPosition\"),\r\n    /**\r\n     * Measure(s) of one or two axes for 2D-objects or measure(s) of one to tree axes for 3D-objects of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    absoluteSize: _NS$m(\"absoluteSize\"),\r\n    /**\r\n     * Numeric count of executions of the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    count: _NS$m(\"count\"),\r\n    /**\r\n     * The date (and optional time and timezone) of exercising the action of the Rule. Right operand value MUST be an xsd:date or xsd:dateTime as defined by [[xmlschema11-2]].\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    dateTime: _NS$m(\"dateTime\"),\r\n    /**\r\n     * A time delay period prior to exercising the action of the Rule. The point in time triggering this period MAY be defined by another temporal Constraint combined by a Logical Constraint (utilising the odrl:andSequence operand). Right operand value MUST be an xsd:duration as defined by [[xmlschema11-2]].\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    delayPeriod: _NS$m(\"delayPeriod\"),\r\n    /**\r\n     * The delivery channel used for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    deliveryChannel: _NS$m(\"deliveryChannel\"),\r\n    /**\r\n     * A continuous elapsed time period which may be used for exercising of the action of the Rule. Right operand value MUST be an xsd:duration as defined by [[xmlschema11-2]].\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    elapsedTime: _NS$m(\"elapsedTime\"),\r\n    /**\r\n     * An identified event setting a context for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    event: _NS$m(\"event\"),\r\n    /**\r\n     * A transformed file format of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    fileFormat: _NS$m(\"fileFormat\"),\r\n    /**\r\n     * A defined industry sector setting a context for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    industry: _NS$m(\"industry\"),\r\n    /**\r\n     * A natural language used by the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    language: _NS$m(\"language\"),\r\n    /**\r\n     * Category of a media asset setting a context for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    media: _NS$m(\"media\"),\r\n    /**\r\n     * An accumulated amount of one to many metered time periods which were used for exercising the action of the Rule. Right operand value MUST be an xsd:duration as defined by [[xmlschema11-2]].\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    meteredTime: _NS$m(\"meteredTime\"),\r\n    /**\r\n     * The amount of a financial payment. Right operand value MUST be an xsd:decimal.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    payAmount: _NS$m(\"payAmount\"),\r\n    /**\r\n     * A percentage amount of the target Asset relevant for exercising the action of the Rule. Right operand value MUST be an xsd:decimal from 0 to 100.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    percentage: _NS$m(\"percentage\"),\r\n    /**\r\n     * Category of product or service setting a context for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    product: _NS$m(\"product\"),\r\n    /**\r\n     * A defined purpose for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    purpose: _NS$m(\"purpose\"),\r\n    /**\r\n     * The party receiving the result/outcome of exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    recipient: _NS$m(\"recipient\"),\r\n    /**\r\n     * A point in space or time defined with coordinates relative to full measures the positioning of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    relativePosition: _NS$m(\"relativePosition\"),\r\n    /**\r\n     * The relative spatial positions - expressed as percentages of full values - of four corners of a rectangle on a 2D-canvas or the eight corners of a cuboid in a 3D-space of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    relativeSpatialPosition: _NS$m(\"relativeSpatialPosition\"),\r\n    /**\r\n     * A point in space or time defined with coordinates relative to full measures the positioning of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    relativeTemporalPosition: _NS$m(\"relativeTemporalPosition\"),\r\n    /**\r\n     * Measure(s) of one or two axes for 2D-objects or measure(s) of one to tree axes for 3D-objects - expressed as percentages of full values - of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    relativeSize: _NS$m(\"relativeSize\"),\r\n    /**\r\n     * Resolution of the rendition of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    resolution: _NS$m(\"resolution\"),\r\n    /**\r\n     * A named and identified geospatial area with defined borders which is used for exercising the action of the Rule. An IRI MUST be used to represent this value.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    spatial: _NS$m(\"spatial\"),\r\n    /**\r\n     * A set of coordinates setting the borders of a geospatial area used for exercising the action of the Rule. The coordinates MUST include longitude and latitude, they MAY include altitude and the geodetic datum.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    spatialCoordinates: _NS$m(\"spatialCoordinates\"),\r\n    /**\r\n     * An identified computing system or computing device used for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    systemDevice: _NS$m(\"systemDevice\"),\r\n    /**\r\n     * A recurring period of time before the next execution of the action of the Rule. Right operand value MUST be an xsd:duration as defined by [[xmlschema11-2]].\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    timeInterval: _NS$m(\"timeInterval\"),\r\n    /**\r\n     * The unit of measure used for counting the executions of the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    unitOfCount: _NS$m(\"unitOfCount\"),\r\n    /**\r\n     * The version of the target Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    version: _NS$m(\"version\"),\r\n    /**\r\n     * An identified location of the IT communication space which is relevant for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    virtualLocation: _NS$m(\"virtualLocation\"),\r\n    /**\r\n     * An identified device used for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    device: _NS$m(\"device\"),\r\n    /**\r\n     * An identified computing system used for exercising the action of the Rule.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    system: _NS$m(\"system\"),\r\n    /**\r\n     * The relation is satisfied when at least one of the Constraints is satisfied.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    or: _NS$m(\"or\"),\r\n    /**\r\n     * The relation is satisfied when only one, and not more, of the Constaints is satisfied\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    xone: _NS$m(\"xone\"),\r\n    /**\r\n     * The relation is satisfied when all of the Constraints are satisfied.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    and: _NS$m(\"and\"),\r\n    /**\r\n     * The relation is satisfied when each of the Constraints are satisfied in the order specified.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    andSequence: _NS$m(\"andSequence\"),\r\n    /**\r\n     * Indicating that a given value equals the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    eq: _NS$m(\"eq\"),\r\n    /**\r\n     * Indicating that a given value is greater than the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    gt: _NS$m(\"gt\"),\r\n    /**\r\n     * Indicating that a given value is greater than or equal to the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    gteq: _NS$m(\"gteq\"),\r\n    /**\r\n     * Indicating that a given value is less than the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    lt: _NS$m(\"lt\"),\r\n    /**\r\n     * Indicating that a given value is less than or equal to the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    lteq: _NS$m(\"lteq\"),\r\n    /**\r\n     * Indicating that a given value is not equal to the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    neq: _NS$m(\"neq\"),\r\n    /**\r\n     * A set-based operator indicating that a given value is an instance of the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    isA: _NS$m(\"isA\"),\r\n    /**\r\n     * A set-based operator indicating that a given value contains the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    hasPart: _NS$m(\"hasPart\"),\r\n    /**\r\n     * A set-based operator indicating that a given value is contained by the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    isPartOf: _NS$m(\"isPartOf\"),\r\n    /**\r\n     * A set-based operator indicating that a given value is all of the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    isAllOf: _NS$m(\"isAllOf\"),\r\n    /**\r\n     * A set-based operator indicating that a given value is any of the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    isAnyOf: _NS$m(\"isAnyOf\"),\r\n    /**\r\n     * A set-based operator indicating that a given value is none of the right operand of the Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    isNoneOf: _NS$m(\"isNoneOf\"),\r\n    /**\r\n     * Indicates the actual datetime the action of the Rule was exercised.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    policyUsage: _NS$m(\"policyUsage\"),\r\n    /**\r\n     * An value indicating the closeness or nearness.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    proximity: _NS$m(\"proximity\"),\r\n    /**\r\n     * The act of adding to the end of an asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    append: _NS$m(\"append\"),\r\n    /**\r\n     * The act of appending data to the Asset without modifying the Asset in any other way.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    appendTo: _NS$m(\"appendTo\"),\r\n    /**\r\n     * The act of making an exact reproduction of the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    copy: _NS$m(\"copy\"),\r\n    /**\r\n     * The act of transforming the asset into a new form.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    export: _NS$m(\"export\"),\r\n    /**\r\n     * The act of making available the asset to a third-party for a fixed period of time with exchange of value.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    lease: _NS$m(\"lease\"),\r\n    /**\r\n     * The act of granting the right to use the asset to a third-party.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    license: _NS$m(\"license\"),\r\n    /**\r\n     * The act of making available the asset to a third-party for a fixed period of time without exchange of value.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    lend: _NS$m(\"lend\"),\r\n    /**\r\n     * The act of paying a financial amount to a party for use of the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    pay: _NS$m(\"pay\"),\r\n    /**\r\n     * The Party is the recipient of the payment.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    payeeParty: _NS$m(\"payeeParty\"),\r\n    /**\r\n     * The act of providing a short preview of the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    preview: _NS$m(\"preview\"),\r\n    /**\r\n     * The act of using the asset for a purpose other than the purpose it was intended for.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    secondaryUse: _NS$m(\"secondaryUse\"),\r\n    /**\r\n     * The act of writing to the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    write: _NS$m(\"write\"),\r\n    /**\r\n     * The act of adding data to the Asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    writeTo: _NS$m(\"writeTo\"),\r\n    /**\r\n     * The act of sharing the asset to parties in close proximity to the owner.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    adHocShare: _NS$m(\"adHocShare\"),\r\n    /**\r\n     * The act of extracting (replicating) unchanged characters from the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    extractChar: _NS$m(\"extractChar\"),\r\n    /**\r\n     * The act of extracting (replicating) unchanged pages from the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    extractPage: _NS$m(\"extractPage\"),\r\n    /**\r\n     * The act of extracting (replicating) unchanged words from the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    extractWord: _NS$m(\"extractWord\"),\r\n    /**\r\n     * The number of seconds after which timed metering use of the asset begins.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    timedCount: _NS$m(\"timedCount\"),\r\n    /**\r\n     * Indentifies the type of inheritance.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    inheritRelation: _NS$m(\"inheritRelation\"),\r\n    /**\r\n     * Indicates if the Policy entity can be inherited.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    inheritAllowed: _NS$m(\"inheritAllowed\"),\r\n    /**\r\n     * Is used to indicate how to support Actions that are not part of any vocabulary or profile in the policy expression system.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    UndefinedTerm: _NS$m(\"UndefinedTerm\"),\r\n    /**\r\n     * Relates the strategy used for handling undefined actions to a Policy.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    undefined: _NS$m(\"undefined\"),\r\n    /**\r\n     * The Action is to be ignored and is not part of the policy – and the policy remains valid.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    ignore: _NS$m(\"ignore\"),\r\n    /**\r\n     * The Action is to be supported as part of the policy – and the policy remains valid.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    support: _NS$m(\"support\"),\r\n    /**\r\n     * Scopes for Asset Scope expressions.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    AssetScope: _NS$m(\"AssetScope\"),\r\n    /**\r\n     * Scopes for Party Scope expressions.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    PartyScope: _NS$m(\"PartyScope\"),\r\n    /**\r\n     * The identifier of a scope that provides context to the extent of the entity.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    scope: _NS$m(\"scope\"),\r\n    /**\r\n     * Specifies that the scope of the relationship is the defined group with multiple individual members.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Group: _NS$m(\"Group\"),\r\n    /**\r\n     * Specifies that the scope of the relationship is the single Party individual.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    Individual: _NS$m(\"Individual\"),\r\n    /**\r\n     * Specifies that the scope of the relationship is all of the collective individuals within a context.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    All: _NS$m(\"All\"),\r\n    /**\r\n     * Specifies that the scope of the relationship is all of the first-level connections of the Party.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    AllConnections: _NS$m(\"AllConnections\"),\r\n    /**\r\n     * Specifies that the scope of the relationship is all of the second-level connections to the Party.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    All2ndConnections: _NS$m(\"All2ndConnections\"),\r\n    /**\r\n     * Specifies that the scope of the relationship is all of the group connections of the Party.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    AllGroups: _NS$m(\"AllGroups\"),\r\n    /**\r\n     * The act of keeping the policy notice with the asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    attachPolicy: _NS$m(\"attachPolicy\"),\r\n    /**\r\n     * The act of attaching the source of the asset and its derivatives.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    attachSource: _NS$m(\"attachSource\"),\r\n    /**\r\n     * The act of distributing any derivative asset under the same terms as the original asset.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    shareAlike: _NS$m(\"shareAlike\"),\r\n    /**\r\n     * The act of using the asset in a business environment.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    commercialize: _NS$m(\"commercialize\"),\r\n    /**\r\n     * The act of the non-commercial reproduction and distribution of the asset to third-parties.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    share: _NS$m(\"share\"),\r\n    /**\r\n     * Identifier for the ODRL Core Profile\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    core: _NS$m(\"core\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The unit of measurement of the value of the rightOperand or rightOperandReference of a Constraint.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/odrl/2/\r\n     */\r\n    unit: _NS$m(\"unit\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - OLO (Ordered List Ontology) - for describing ordered lists\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$l = \"http://purl.org/ontology/olo/core#\";\r\nfunction _NS$l(localName) {\r\n    return (_NAMESPACE$l + localName);\r\n}\r\n/**\r\n * [Generator provided] - OLO (Ordered List Ontology) - for describing ordered lists\r\n */\r\nvar OLO = {\r\n    PREFIX: \"olo\",\r\n    NAMESPACE: _NAMESPACE$l,\r\n    PREFIX_AND_NAMESPACE: { \"olo\": \"http://purl.org/ontology/olo/core#\" },\r\n    NS: _NS$l,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * An ordered list with a given length an indexed items.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    OrderedList: _NS$l(\"OrderedList\"),\r\n    /**\r\n     * A slot in an ordered list with a fixed index.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    Slot: _NS$l(\"Slot\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The length of an ordered list.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    length: _NS$l(\"length\"),\r\n    /**\r\n     * Associates the next slot in an ordered list.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    next: _NS$l(\"next\"),\r\n    /**\r\n     * An index of a slot in an ordered list.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    index: _NS$l(\"index\"),\r\n    /**\r\n     * An ordered list of an slot.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    ordered_list: _NS$l(\"ordered_list\"),\r\n    /**\r\n     * Associates the previous slot in an ordered list\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    previous: _NS$l(\"previous\"),\r\n    /**\r\n     * A slot in an ordered list.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    slot: _NS$l(\"slot\"),\r\n    /**\r\n     * An item of a slot in an ordered list.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/ontology/olo/core#\r\n     */\r\n    item: _NS$l(\"item\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n *\r\n  This ontology partially describes the built-in classes and\r\n  properties that together form the basis of the RDF/XML syntax of OWL 2.\r\n  The content of this ontology is based on Tables 6.1 and 6.2\r\n  in Section 6.4 of the OWL 2 RDF-Based Semantics specification,\r\n  available at http://www.w3.org/TR/owl2-rdf-based-semantics/.\r\n  Please note that those tables do not include the different annotations\r\n  (labels, comments and rdfs:isDefinedBy links) used in this file.\r\n  Also note that the descriptions provided in this ontology do not\r\n  provide a complete and correct formal description of either the syntax\r\n  or the semantics of the introduced terms (please see the OWL 2\r\n  recommendations for the complete and normative specifications).\r\n  Furthermore, the information provided by this ontology may be\r\n  misleading if not used with care. This ontology SHOULD NOT be imported\r\n  into OWL ontologies. Importing this file into an OWL 2 DL ontology\r\n  will cause it to become an OWL 2 Full ontology and may have other,\r\n  unexpected, consequences.\r\n   \n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$k = \"http://www.w3.org/2002/07/owl#\";\r\nfunction _NS$k(localName) {\r\n    return (_NAMESPACE$k + localName);\r\n}\r\n/**\r\n *\r\n  This ontology partially describes the built-in classes and\r\n  properties that together form the basis of the RDF/XML syntax of OWL 2.\r\n  The content of this ontology is based on Tables 6.1 and 6.2\r\n  in Section 6.4 of the OWL 2 RDF-Based Semantics specification,\r\n  available at http://www.w3.org/TR/owl2-rdf-based-semantics/.\r\n  Please note that those tables do not include the different annotations\r\n  (labels, comments and rdfs:isDefinedBy links) used in this file.\r\n  Also note that the descriptions provided in this ontology do not\r\n  provide a complete and correct formal description of either the syntax\r\n  or the semantics of the introduced terms (please see the OWL 2\r\n  recommendations for the complete and normative specifications).\r\n  Furthermore, the information provided by this ontology may be\r\n  misleading if not used with care. This ontology SHOULD NOT be imported\r\n  into OWL ontologies. Importing this file into an OWL 2 DL ontology\r\n  will cause it to become an OWL 2 Full ontology and may have other,\r\n  unexpected, consequences.\r\n   \n */\r\nvar OWL = {\r\n    PREFIX: \"owl\",\r\n    NAMESPACE: _NAMESPACE$k,\r\n    PREFIX_AND_NAMESPACE: { \"owl\": \"http://www.w3.org/2002/07/owl#\" },\r\n    NS: _NS$k,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * The class of ontologies.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Ontology: _NS$k(\"Ontology\"),\r\n    /**\r\n     * The class of ontology properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    OntologyProperty: _NS$k(\"OntologyProperty\"),\r\n    /**\r\n     * The class of annotation properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    AnnotationProperty: _NS$k(\"AnnotationProperty\"),\r\n    /**\r\n     * The class of collections of pairwise different individuals.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    AllDifferent: _NS$k(\"AllDifferent\"),\r\n    /**\r\n     * The class of collections of pairwise disjoint classes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    AllDisjointClasses: _NS$k(\"AllDisjointClasses\"),\r\n    /**\r\n     * The class of collections of pairwise disjoint properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    AllDisjointProperties: _NS$k(\"AllDisjointProperties\"),\r\n    /**\r\n     * The class of annotated annotations for which the RDF serialization consists of an annotated subject, predicate and object.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Annotation: _NS$k(\"Annotation\"),\r\n    /**\r\n     * The class of asymmetric properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    AsymmetricProperty: _NS$k(\"AsymmetricProperty\"),\r\n    /**\r\n     * The class of object properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    ObjectProperty: _NS$k(\"ObjectProperty\"),\r\n    /**\r\n     * The class of annotated axioms for which the RDF serialization consists of an annotated subject, predicate and object.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Axiom: _NS$k(\"Axiom\"),\r\n    /**\r\n     * The class of OWL classes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Class: _NS$k(\"Class\"),\r\n    /**\r\n     * The class of OWL data ranges, which are special kinds of datatypes. Note: The use of the IRI owl:DataRange has been deprecated as of OWL 2. The IRI rdfs:Datatype SHOULD be used instead.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    DataRange: _NS$k(\"DataRange\"),\r\n    /**\r\n     * The class of data properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    DatatypeProperty: _NS$k(\"DatatypeProperty\"),\r\n    /**\r\n     * The class of deprecated classes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    DeprecatedClass: _NS$k(\"DeprecatedClass\"),\r\n    /**\r\n     * The class of deprecated properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    DeprecatedProperty: _NS$k(\"DeprecatedProperty\"),\r\n    /**\r\n     * The class of functional properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    FunctionalProperty: _NS$k(\"FunctionalProperty\"),\r\n    /**\r\n     * The class of inverse-functional properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    InverseFunctionalProperty: _NS$k(\"InverseFunctionalProperty\"),\r\n    /**\r\n     * The class of irreflexive properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    IrreflexiveProperty: _NS$k(\"IrreflexiveProperty\"),\r\n    /**\r\n     * The class of named individuals.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    NamedIndividual: _NS$k(\"NamedIndividual\"),\r\n    /**\r\n     * The class of OWL individuals.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Thing: _NS$k(\"Thing\"),\r\n    /**\r\n     * The class of negative property assertions.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    NegativePropertyAssertion: _NS$k(\"NegativePropertyAssertion\"),\r\n    /**\r\n     * This is the empty class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Nothing: _NS$k(\"Nothing\"),\r\n    /**\r\n     * The class of reflexive properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    ReflexiveProperty: _NS$k(\"ReflexiveProperty\"),\r\n    /**\r\n     * The class of property restrictions.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    Restriction: _NS$k(\"Restriction\"),\r\n    /**\r\n     * The class of symmetric properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    SymmetricProperty: _NS$k(\"SymmetricProperty\"),\r\n    /**\r\n     * The class of transitive properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    TransitiveProperty: _NS$k(\"TransitiveProperty\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The annotation property that provides version information for an ontology or another OWL construct.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    versionInfo: _NS$k(\"versionInfo\"),\r\n    /**\r\n     * The property that determines the class that a universal property restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    allValuesFrom: _NS$k(\"allValuesFrom\"),\r\n    /**\r\n     * The property that determines the predicate of an annotated axiom or annotated annotation.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    annotatedProperty: _NS$k(\"annotatedProperty\"),\r\n    /**\r\n     * The property that determines the subject of an annotated axiom or annotated annotation.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    annotatedSource: _NS$k(\"annotatedSource\"),\r\n    /**\r\n     * The property that determines the object of an annotated axiom or annotated annotation.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    annotatedTarget: _NS$k(\"annotatedTarget\"),\r\n    /**\r\n     * The property that determines the predicate of a negative property assertion.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    assertionProperty: _NS$k(\"assertionProperty\"),\r\n    /**\r\n     * The annotation property that indicates that a given ontology is backward compatible with another ontology.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    backwardCompatibleWith: _NS$k(\"backwardCompatibleWith\"),\r\n    /**\r\n     * The data property that does not relate any individual to any data value.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    bottomDataProperty: _NS$k(\"bottomDataProperty\"),\r\n    /**\r\n     * The object property that does not relate any two individuals.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    bottomObjectProperty: _NS$k(\"bottomObjectProperty\"),\r\n    /**\r\n     * The property that determines the cardinality of an exact cardinality restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    cardinality: _NS$k(\"cardinality\"),\r\n    /**\r\n     * The property that determines that a given class is the complement of another class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    complementOf: _NS$k(\"complementOf\"),\r\n    /**\r\n     * The property that determines that a given data range is the complement of another data range with respect to the data domain.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    datatypeComplementOf: _NS$k(\"datatypeComplementOf\"),\r\n    /**\r\n     * The annotation property that indicates that a given entity has been deprecated.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    deprecated: _NS$k(\"deprecated\"),\r\n    /**\r\n     * The property that determines that two given individuals are different.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    differentFrom: _NS$k(\"differentFrom\"),\r\n    /**\r\n     * The property that determines that a given class is equivalent to the disjoint union of a collection of other classes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    disjointUnionOf: _NS$k(\"disjointUnionOf\"),\r\n    /**\r\n     * The property that determines that two given classes are disjoint.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    disjointWith: _NS$k(\"disjointWith\"),\r\n    /**\r\n     * The property that determines the collection of pairwise different individuals in a owl:AllDifferent axiom.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    distinctMembers: _NS$k(\"distinctMembers\"),\r\n    /**\r\n     * The property that determines that two given classes are equivalent, and that is used to specify datatype definitions.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    equivalentClass: _NS$k(\"equivalentClass\"),\r\n    /**\r\n     * The property that determines that two given properties are equivalent.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    equivalentProperty: _NS$k(\"equivalentProperty\"),\r\n    /**\r\n     * The property that determines the collection of properties that jointly build a key.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    hasKey: _NS$k(\"hasKey\"),\r\n    /**\r\n     * The property that determines the property that a self restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    hasSelf: _NS$k(\"hasSelf\"),\r\n    /**\r\n     * The property that determines the individual that a has-value restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    hasValue: _NS$k(\"hasValue\"),\r\n    /**\r\n     * The annotation property that indicates that a given ontology is incompatible with another ontology.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    incompatibleWith: _NS$k(\"incompatibleWith\"),\r\n    /**\r\n     * The property that determines the collection of classes or data ranges that build an intersection.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    intersectionOf: _NS$k(\"intersectionOf\"),\r\n    /**\r\n     * The property that determines that two given properties are inverse.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    inverseOf: _NS$k(\"inverseOf\"),\r\n    /**\r\n     * The property that determines the cardinality of a maximum cardinality restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    maxCardinality: _NS$k(\"maxCardinality\"),\r\n    /**\r\n     * The property that determines the cardinality of a maximum qualified cardinality restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    maxQualifiedCardinality: _NS$k(\"maxQualifiedCardinality\"),\r\n    /**\r\n     * The property that determines the collection of members in either a owl:AllDifferent, owl:AllDisjointClasses or owl:AllDisjointProperties axiom.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    members: _NS$k(\"members\"),\r\n    /**\r\n     * The property that determines the cardinality of a minimum cardinality restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    minCardinality: _NS$k(\"minCardinality\"),\r\n    /**\r\n     * The property that determines the cardinality of a minimum qualified cardinality restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    minQualifiedCardinality: _NS$k(\"minQualifiedCardinality\"),\r\n    /**\r\n     * The property that determines the class that a qualified object cardinality restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    onClass: _NS$k(\"onClass\"),\r\n    /**\r\n     * The property that determines the data range that a qualified data cardinality restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    onDataRange: _NS$k(\"onDataRange\"),\r\n    /**\r\n     * The property that determines the datatype that a datatype restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    onDatatype: _NS$k(\"onDatatype\"),\r\n    /**\r\n     * The property that determines the collection of individuals or data values that build an enumeration.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    oneOf: _NS$k(\"oneOf\"),\r\n    /**\r\n     * The property that determines the n-tuple of properties that a property restriction on an n-ary data range refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    onProperties: _NS$k(\"onProperties\"),\r\n    /**\r\n     * The property that determines the property that a property restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    onProperty: _NS$k(\"onProperty\"),\r\n    /**\r\n     * The annotation property that indicates the predecessor ontology of a given ontology.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    priorVersion: _NS$k(\"priorVersion\"),\r\n    /**\r\n     * The property that determines the n-tuple of properties that build a sub property chain of a given property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    propertyChainAxiom: _NS$k(\"propertyChainAxiom\"),\r\n    /**\r\n     * The property that determines that two given properties are disjoint.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    propertyDisjointWith: _NS$k(\"propertyDisjointWith\"),\r\n    /**\r\n     * The property that determines the cardinality of an exact qualified cardinality restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    qualifiedCardinality: _NS$k(\"qualifiedCardinality\"),\r\n    /**\r\n     * The property that determines that two given individuals are equal.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    sameAs: _NS$k(\"sameAs\"),\r\n    /**\r\n     * The property that determines the class that an existential property restriction refers to.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    someValuesFrom: _NS$k(\"someValuesFrom\"),\r\n    /**\r\n     * The property that determines the subject of a negative property assertion.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    sourceIndividual: _NS$k(\"sourceIndividual\"),\r\n    /**\r\n     * The property that determines the object of a negative object property assertion.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    targetIndividual: _NS$k(\"targetIndividual\"),\r\n    /**\r\n     * The property that determines the value of a negative data property assertion.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    targetValue: _NS$k(\"targetValue\"),\r\n    /**\r\n     * The data property that relates every individual to every data value.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    topDataProperty: _NS$k(\"topDataProperty\"),\r\n    /**\r\n     * The object property that relates every two individuals.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    topObjectProperty: _NS$k(\"topObjectProperty\"),\r\n    /**\r\n     * The property that determines the collection of classes or data ranges that build a union.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    unionOf: _NS$k(\"unionOf\"),\r\n    /**\r\n     * The property that determines the collection of facet-value pairs that define a datatype restriction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2002/07/owl#\r\n     */\r\n    withRestrictions: _NS$k(\"withRestrictions\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * A vocabulary for the basic POSIX terms.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$j = \"http://www.w3.org/ns/posix/stat#\";\r\nfunction _NS$j(localName) {\r\n    return (_NAMESPACE$j + localName);\r\n}\r\n/**\r\n * A vocabulary for the basic POSIX terms.\r\n */\r\nvar POSIX = {\r\n    PREFIX: \"posix\",\r\n    NAMESPACE: _NAMESPACE$j,\r\n    PREFIX_AND_NAMESPACE: { \"posix\": \"http://www.w3.org/ns/posix/stat#\" },\r\n    NS: _NS$j,\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Time of last access\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    atime: _NS$j(\"atime\"),\r\n    /**\r\n     * Blocksize for file system I/O\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    blksize: _NS$j(\"blksize\"),\r\n    /**\r\n     * Number of 512B blocks allocated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    blocks: _NS$j(\"blocks\"),\r\n    /**\r\n     * Time of last status change\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    ctime: _NS$j(\"ctime\"),\r\n    /**\r\n     * ID of device containing file\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    dev: _NS$j(\"dev\"),\r\n    /**\r\n     * Group ID of owner\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    gid: _NS$j(\"gid\"),\r\n    /**\r\n     * inode number\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    ino: _NS$j(\"ino\"),\r\n    /**\r\n     * Protection\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    mode: _NS$j(\"mode\"),\r\n    /**\r\n     * Time of last modification\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    mtime: _NS$j(\"mtime\"),\r\n    /**\r\n     * Number of hard links\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    nlink: _NS$j(\"nlink\"),\r\n    /**\r\n     * Device ID (if special file)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    rdev: _NS$j(\"rdev\"),\r\n    /**\r\n     * Total size, in bytes\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    size: _NS$j(\"size\"),\r\n    /**\r\n     * User ID of owner\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    uid: _NS$j(\"uid\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * This document is published by the Provenance Working Group (http://www.w3.org/2011/prov/wiki/Main_Page).\r\n\nIf you wish to make comments regarding this document, please send them to public-prov-comments@w3.org (subscribe public-prov-comments-request@w3.org, archives http://lists.w3.org/Archives/Public/public-prov-comments/). All feedback is welcome.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$i = \"http://www.w3.org/ns/prov#\";\r\nfunction _NS$i(localName) {\r\n    return (_NAMESPACE$i + localName);\r\n}\r\n/**\r\n * This document is published by the Provenance Working Group (http://www.w3.org/2011/prov/wiki/Main_Page).\r\n\nIf you wish to make comments regarding this document, please send them to public-prov-comments@w3.org (subscribe public-prov-comments-request@w3.org, archives http://lists.w3.org/Archives/Public/public-prov-comments/). All feedback is welcome.\r\n */\r\nvar PROV_O = {\r\n    PREFIX: \"prov-o\",\r\n    NAMESPACE: _NAMESPACE$i,\r\n    PREFIX_AND_NAMESPACE: { \"prov-o\": \"http://www.w3.org/ns/prov#\" },\r\n    NS: _NS$i,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Entity\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Entity: _NS$i(\"Entity\"),\r\n    /**\r\n     * An instance of prov:Revision provides additional descriptions about the binary prov:wasRevisionOf relation from some newer prov:Entity to an earlier prov:Entity. For example, :draft_2 prov:wasRevisionOf :draft_1; prov:qualifiedRevision [ a prov:Revision; prov:entity :draft_1; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Revision: _NS$i(\"Revision\"),\r\n    /**\r\n     * Activity\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Activity: _NS$i(\"Activity\"),\r\n    /**\r\n     * An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    InstantaneousEvent: _NS$i(\"InstantaneousEvent\"),\r\n    /**\r\n     * ActivityInfluence provides additional descriptions of an Activity's binary influence upon any other kind of resource. Instances of ActivityInfluence use the prov:activity property to cite the influencing Activity.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#activity\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    ActivityInfluence: _NS$i(\"ActivityInfluence\"),\r\n    /**\r\n     * EntityInfluence provides additional descriptions of an Entity's binary influence upon any other kind of resource. Instances of EntityInfluence use the prov:entity property to cite the influencing Entity.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#entity\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    EntityInfluence: _NS$i(\"EntityInfluence\"),\r\n    /**\r\n     * An instance of prov:Influence provides additional descriptions about the binary prov:wasInfluencedBy relation from some influenced Activity, Entity, or Agent to the influencing Activity, Entity, or Agent. For example, :stomach_ache prov:wasInfluencedBy :spoon; prov:qualifiedInfluence [ a prov:Influence; prov:entity :spoon; :foo :bar ] . Because prov:Influence is a broad relation, the more specific relations (Communication, Delegation, End, etc.) should be used when applicable.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Influence: _NS$i(\"Influence\"),\r\n    /**\r\n     * Agent\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Agent: _NS$i(\"Agent\"),\r\n    /**\r\n     * AgentInfluence provides additional descriptions of an Agent's binary influence upon any other kind of resource. Instances of AgentInfluence use the prov:agent property to cite the influencing Agent.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#agent\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    AgentInfluence: _NS$i(\"AgentInfluence\"),\r\n    /**\r\n     * An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedAssociation [ a prov:Association; prov:agent :baker; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Association: _NS$i(\"Association\"),\r\n    /**\r\n     * An instance of prov:Attribution provides additional descriptions about the binary prov:wasAttributedTo relation from an prov:Entity to some prov:Agent that had some responsible for it. For example, :cake prov:wasAttributedTo :baker; prov:qualifiedAttribution [ a prov:Attribution; prov:entity :baker; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Attribution: _NS$i(\"Attribution\"),\r\n    /**\r\n     * Note that there are kinds of bundles (e.g. handwritten letters, audio recordings, etc.) that are not expressed in PROV-O, but can be still be described by PROV-O.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Bundle: _NS$i(\"Bundle\"),\r\n    /**\r\n     * Collection\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Collection: _NS$i(\"Collection\"),\r\n    /**\r\n     * An instance of prov:Communication provides additional descriptions about the binary prov:wasInformedBy relation from an informed prov:Activity to the prov:Activity that informed it. For example, :you_jumping_off_bridge prov:wasInformedBy :everyone_else_jumping_off_bridge; prov:qualifiedCommunication [ a prov:Communication; prov:activity :everyone_else_jumping_off_bridge; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Communication: _NS$i(\"Communication\"),\r\n    /**\r\n     * An instance of prov:Delegation provides additional descriptions about the binary prov:actedOnBehalfOf relation from a performing prov:Agent to some prov:Agent for whom it was performed. For example, :mixing prov:wasAssociatedWith :toddler . :toddler prov:actedOnBehalfOf :mother; prov:qualifiedDelegation [ a prov:Delegation; prov:entity :mother; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Delegation: _NS$i(\"Delegation\"),\r\n    /**\r\n     * An instance of prov:Derivation provides additional descriptions about the binary prov:wasDerivedFrom relation from some derived prov:Entity to another prov:Entity from which it was derived. For example, :chewed_bubble_gum prov:wasDerivedFrom :unwrapped_bubble_gum; prov:qualifiedDerivation [ a prov:Derivation; prov:entity :unwrapped_bubble_gum; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Derivation: _NS$i(\"Derivation\"),\r\n    /**\r\n     * EmptyCollection\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    EmptyCollection: _NS$i(\"EmptyCollection\"),\r\n    /**\r\n     * An instance of prov:End provides additional descriptions about the binary prov:wasEndedBy relation from some ended prov:Activity to an prov:Entity that ended it. For example, :ball_game prov:wasEndedBy :buzzer; prov:qualifiedEnd [ a prov:End; prov:entity :buzzer; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    End: _NS$i(\"End\"),\r\n    /**\r\n     * An instance of prov:Generation provides additional descriptions about the binary prov:wasGeneratedBy relation from a generated prov:Entity to the prov:Activity that generated it. For example, :cake prov:wasGeneratedBy :baking; prov:qualifiedGeneration [ a prov:Generation; prov:activity :baking; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Generation: _NS$i(\"Generation\"),\r\n    /**\r\n     * An instance of prov:Invalidation provides additional descriptions about the binary prov:wasInvalidatedBy relation from an invalidated prov:Entity to the prov:Activity that invalidated it. For example, :uncracked_egg prov:wasInvalidatedBy :baking; prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :baking; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Invalidation: _NS$i(\"Invalidation\"),\r\n    /**\r\n     * Location\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#atLocation\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Location: _NS$i(\"Location\"),\r\n    /**\r\n     * Organization\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Organization: _NS$i(\"Organization\"),\r\n    /**\r\n     * Person\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Person: _NS$i(\"Person\"),\r\n    /**\r\n     * There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Plan: _NS$i(\"Plan\"),\r\n    /**\r\n     * An instance of prov:PrimarySource provides additional descriptions about the binary prov:hadPrimarySource relation from some secondary prov:Entity to an earlier, primary prov:Entity. For example, :blog prov:hadPrimarySource :newsArticle; prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :newsArticle; :foo :bar ] .\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    PrimarySource: _NS$i(\"PrimarySource\"),\r\n    /**\r\n     * An instance of prov:Quotation provides additional descriptions about the binary prov:wasQuotedFrom relation from some taken prov:Entity from an earlier, larger prov:Entity. For example, :here_is_looking_at_you_kid prov:wasQuotedFrom :casablanca_script; prov:qualifiedQuotation [ a prov:Quotation; prov:entity :casablanca_script; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Quotation: _NS$i(\"Quotation\"),\r\n    /**\r\n     * Role\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#hadRole\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Role: _NS$i(\"Role\"),\r\n    /**\r\n     * SoftwareAgent\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    SoftwareAgent: _NS$i(\"SoftwareAgent\"),\r\n    /**\r\n     * An instance of prov:Start provides additional descriptions about the binary prov:wasStartedBy relation from some started prov:Activity to an prov:Entity that started it. For example, :foot_race prov:wasStartedBy :bang; prov:qualifiedStart [ a prov:Start; prov:entity :bang; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ] .\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Start: _NS$i(\"Start\"),\r\n    /**\r\n     * An instance of prov:Usage provides additional descriptions about the binary prov:used relation from some prov:Activity to an prov:Entity that it used. For example, :keynote prov:used :podium; prov:qualifiedUsage [ a prov:Usage; prov:entity :podium; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    Usage: _NS$i(\"Usage\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * A revision is a derivation that revises an entity into a revised version.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasRevisionOf: _NS$i(\"wasRevisionOf\"),\r\n    /**\r\n     * specializationOf\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#alternateOf\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    specializationOf: _NS$i(\"specializationOf\"),\r\n    /**\r\n     * Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    category: _NS$i(\"category\"),\r\n    /**\r\n     * Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    component: _NS$i(\"component\"),\r\n    /**\r\n     * The more specific subproperties of prov:wasDerivedFrom (i.e., prov:wasQuotedFrom, prov:wasRevisionOf, prov:hadPrimarySource) should be used when applicable.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasDerivedFrom: _NS$i(\"wasDerivedFrom\"),\r\n    /**\r\n     * PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/TR/prov-o/#names-of-inverse-properties\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    inverse: _NS$i(\"inverse\"),\r\n    /**\r\n     * This annotation property links a subproperty of prov:wasInfluencedBy with the subclass of prov:Influence and the qualifying property that are used to qualify it.\r\n  \n  Example annotation:\r\n  \n      prov:wasGeneratedBy prov:qualifiedForm prov:qualifiedGeneration, prov:Generation .\r\n  \n  Then this unqualified assertion:\r\n  \n      :entity1 prov:wasGeneratedBy :activity1 .\r\n  \n  can be qualified by adding:\r\n  \n     :entity1 prov:qualifiedGeneration :entity1Gen .\r\n     :entity1Gen\r\n         a prov:Generation, prov:Influence;\r\n         prov:activity :activity1;\r\n         :customValue 1337 .\r\n  \n  Note how the value of the unqualified influence (prov:wasGeneratedBy :activity1) is mirrored as the value of the prov:activity (or prov:entity, or prov:agent) property on the influence class.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedForm: _NS$i(\"qualifiedForm\"),\r\n    /**\r\n     * If this Entity prov:wasRevisionOf Entity :e, then it can qualify how it was revised using prov:qualifiedRevision [ a prov:Revision;  prov:entity :e; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedRevision: _NS$i(\"qualifiedRevision\"),\r\n    /**\r\n     * alternateOf\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/ns/prov#specializationOf\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    alternateOf: _NS$i(\"alternateOf\"),\r\n    /**\r\n     * A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    constraints: _NS$i(\"constraints\"),\r\n    /**\r\n     * A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    definition: _NS$i(\"definition\"),\r\n    /**\r\n     * A reference to the principal section of the PROV-DM document that describes this concept.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    dm: _NS$i(\"dm\"),\r\n    /**\r\n     * A reference to the principal section of the PROV-DM document that describes this concept.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    n: _NS$i(\"n\"),\r\n    /**\r\n     * activity\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    activity: _NS$i(\"activity\"),\r\n    /**\r\n     * When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    editorsDefinition: _NS$i(\"editorsDefinition\"),\r\n    /**\r\n     * Subproperties of prov:influencer are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:wasInfluencedBy (e.g. prov:used, prov:wasGeneratedBy). prov:influencer is used much like rdf:object is used.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    influencer: _NS$i(\"influencer\"),\r\n    /**\r\n     * A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    editorialNote: _NS$i(\"editorialNote\"),\r\n    /**\r\n     * entity\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    entity: _NS$i(\"entity\"),\r\n    /**\r\n     * Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    unqualifiedForm: _NS$i(\"unqualifiedForm\"),\r\n    /**\r\n     * Because prov:wasInfluencedBy is a broad relation, its more specific subproperties (e.g. prov:wasInformedBy, prov:actedOnBehalfOf, prov:wasEndedBy, etc.) should be used when applicable.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasInfluencedBy: _NS$i(\"wasInfluencedBy\"),\r\n    /**\r\n     * The _optional_ Activity of an Influence, which used, generated, invalidated, or was the responsibility of some Entity. This property is _not_ used by ActivityInfluence (use prov:activity instead).\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadActivity: _NS$i(\"hadActivity\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    sharesDefinitionWith: _NS$i(\"sharesDefinitionWith\"),\r\n    /**\r\n     * Because prov:qualifiedInfluence is a broad relation, the more specific relations (qualifiedCommunication, qualifiedDelegation, qualifiedEnd, etc.) should be used when applicable.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedInfluence: _NS$i(\"qualifiedInfluence\"),\r\n    /**\r\n     * agent\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    agent: _NS$i(\"agent\"),\r\n    /**\r\n     * An prov:Agent that had some (unspecified) responsibility for the occurrence of this prov:Activity.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasAssociatedWith: _NS$i(\"wasAssociatedWith\"),\r\n    /**\r\n     * If this Activity prov:wasAssociatedWith Agent :ag, then it can qualify the Association using prov:qualifiedAssociation [ a prov:Association;  prov:agent :ag; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedAssociation: _NS$i(\"qualifiedAssociation\"),\r\n    /**\r\n     * Attribution is the ascribing of an entity to an agent.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasAttributedTo: _NS$i(\"wasAttributedTo\"),\r\n    /**\r\n     * If this Entity prov:wasAttributedTo Agent :ag, then it can qualify how it was influenced using prov:qualifiedAttribution [ a prov:Attribution;  prov:agent :ag; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedAttribution: _NS$i(\"qualifiedAttribution\"),\r\n    /**\r\n     * An activity a2 is dependent on or informed by another activity a1, by way of some unspecified entity that is generated by a1 and used by a2.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasInformedBy: _NS$i(\"wasInformedBy\"),\r\n    /**\r\n     * If this Activity prov:wasInformedBy Activity :a, then it can qualify how it was influenced using prov:qualifiedCommunication [ a prov:Communication;  prov:activity :a; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedCommunication: _NS$i(\"qualifiedCommunication\"),\r\n    /**\r\n     * An object property to express the accountability of an agent towards another agent. The subordinate agent acted on behalf of the responsible agent in an actual activity.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    actedOnBehalfOf: _NS$i(\"actedOnBehalfOf\"),\r\n    /**\r\n     * If this Agent prov:actedOnBehalfOf Agent :ag, then it can qualify how with prov:qualifiedResponsibility [ a prov:Responsibility;  prov:agent :ag; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedDelegation: _NS$i(\"qualifiedDelegation\"),\r\n    /**\r\n     * If this Entity prov:wasDerivedFrom Entity :e, then it can qualify how it was derived using prov:qualifiedDerivation [ a prov:Derivation;  prov:entity :e; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedDerivation: _NS$i(\"qualifiedDerivation\"),\r\n    /**\r\n     * End is when an activity is deemed to have ended. An end may refer to an entity, known as trigger, that terminated the activity.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasEndedBy: _NS$i(\"wasEndedBy\"),\r\n    /**\r\n     * If this Activity prov:wasEndedBy Entity :e1, then it can qualify how it was ended using prov:qualifiedEnd [ a prov:End;  prov:entity :e1; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedEnd: _NS$i(\"qualifiedEnd\"),\r\n    /**\r\n     * wasGeneratedBy\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasGeneratedBy: _NS$i(\"wasGeneratedBy\"),\r\n    /**\r\n     * If this Activity prov:generated Entity :e, then it can qualify how it performed the Generation using prov:qualifiedGeneration [ a prov:Generation;  prov:entity :e; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedGeneration: _NS$i(\"qualifiedGeneration\"),\r\n    /**\r\n     * wasInvalidatedBy\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasInvalidatedBy: _NS$i(\"wasInvalidatedBy\"),\r\n    /**\r\n     * If this Entity prov:wasInvalidatedBy Activity :a, then it can qualify how it was invalidated using prov:qualifiedInvalidation [ a prov:Invalidation;  prov:activity :a; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedInvalidation: _NS$i(\"qualifiedInvalidation\"),\r\n    /**\r\n     * The Location of any resource.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    atLocation: _NS$i(\"atLocation\"),\r\n    /**\r\n     * hadPrimarySource\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadPrimarySource: _NS$i(\"hadPrimarySource\"),\r\n    /**\r\n     * If this Entity prov:hadPrimarySource Entity :e, then it can qualify how using prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :e; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedPrimarySource: _NS$i(\"qualifiedPrimarySource\"),\r\n    /**\r\n     * An entity is derived from an original entity by copying, or 'quoting', some or all of it.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasQuotedFrom: _NS$i(\"wasQuotedFrom\"),\r\n    /**\r\n     * If this Entity prov:wasQuotedFrom Entity :e, then it can qualify how using prov:qualifiedQuotation [ a prov:Quotation;  prov:entity :e; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedQuotation: _NS$i(\"qualifiedQuotation\"),\r\n    /**\r\n     * The _optional_ Role that an Entity assumed in the context of an Activity. For example, :baking prov:used :spoon; prov:qualified [ a prov:Usage; prov:entity :spoon; prov:hadRole roles:mixing_implement ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [2] comments in languages [NoLocale, en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadRole: _NS$i(\"hadRole\"),\r\n    /**\r\n     * Start is when an activity is deemed to have started. A start may refer to an entity, known as trigger, that initiated the activity.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    wasStartedBy: _NS$i(\"wasStartedBy\"),\r\n    /**\r\n     * If this Activity prov:wasStartedBy Entity :e1, then it can qualify how it was started using prov:qualifiedStart [ a prov:Start;  prov:entity :e1; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedStart: _NS$i(\"qualifiedStart\"),\r\n    /**\r\n     * A prov:Entity that was used by this prov:Activity. For example, :baking prov:used :spoon, :egg, :oven .\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    used: _NS$i(\"used\"),\r\n    /**\r\n     * If this Activity prov:used Entity :e, then it can qualify how it used it using prov:qualifiedUsage [ a prov:Usage; prov:entity :e; :foo :bar ].\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    qualifiedUsage: _NS$i(\"qualifiedUsage\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    aq: _NS$i(\"aq\"),\r\n    /**\r\n     * The time at which an InstantaneousEvent occurred, in the form of xsd:dateTime.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    atTime: _NS$i(\"atTime\"),\r\n    /**\r\n     * The time at which an activity ended. See also prov:startedAtTime.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    endedAtTime: _NS$i(\"endedAtTime\"),\r\n    /**\r\n     * The time at which an entity was completely created and is available for use.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    generatedAtTime: _NS$i(\"generatedAtTime\"),\r\n    /**\r\n     * The time at which an entity was invalidated (i.e., no longer usable).\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    invalidatedAtTime: _NS$i(\"invalidatedAtTime\"),\r\n    /**\r\n     * The time at which an activity started. See also prov:endedAtTime.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    startedAtTime: _NS$i(\"startedAtTime\"),\r\n    /**\r\n     * generated\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    generated: _NS$i(\"generated\"),\r\n    /**\r\n     * influenced\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    influenced: _NS$i(\"influenced\"),\r\n    /**\r\n     * The _optional_ Generation involved in an Entity's Derivation.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadGeneration: _NS$i(\"hadGeneration\"),\r\n    /**\r\n     * hadMember\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadMember: _NS$i(\"hadMember\"),\r\n    /**\r\n     * The _optional_ Plan adopted by an Agent in Association with some Activity. Plan specifications are out of the scope of this specification.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadPlan: _NS$i(\"hadPlan\"),\r\n    /**\r\n     * The _optional_ Usage involved in an Entity's Derivation.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [NoLocale], but [1] comment in the language [en] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    hadUsage: _NS$i(\"hadUsage\"),\r\n    /**\r\n     * invalidated\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    invalidated: _NS$i(\"invalidated\"),\r\n    /**\r\n     * The position that this OWL term should be listed within documentation. The scope of the documentation (e.g., among all terms, among terms within a prov:category, among properties applying to a particular class, etc.) is unspecified.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    order: _NS$i(\"order\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    todo: _NS$i(\"todo\"),\r\n    /**\r\n     * value\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/prov-o#\r\n     */\r\n    value: _NS$i(\"value\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * This vocabulary allows multi-dimensional data, such as statistics, to be published in RDF. It is based on the core information model from SDMX (and thus also DDI).\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$h = \"http://purl.org/linked-data/cube#\";\r\nfunction _NS$h(localName) {\r\n    return (_NAMESPACE$h + localName);\r\n}\r\n/**\r\n * This vocabulary allows multi-dimensional data, such as statistics, to be published in RDF. It is based on the core information model from SDMX (and thus also DDI).\r\n */\r\nvar QB = {\r\n    PREFIX: \"qb\",\r\n    NAMESPACE: _NAMESPACE$h,\r\n    PREFIX_AND_NAMESPACE: { \"qb\": \"http://purl.org/linked-data/cube#\" },\r\n    NS: _NS$h,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Represents a collection of observations, possibly organized into various slices, conforming to some common dimensional structure.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    DataSet: _NS$h(\"DataSet\"),\r\n    /**\r\n     * Abstract superclass for everything that can have attributes and dimensions\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    Attachable: _NS$h(\"Attachable\"),\r\n    /**\r\n     * A single observation in the cube, may have one or more associated measured values\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    Observation: _NS$h(\"Observation\"),\r\n    /**\r\n     * A, possibly arbitrary, group of observations.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    ObservationGroup: _NS$h(\"ObservationGroup\"),\r\n    /**\r\n     * Denotes a subset of a DataSet defined by fixing a subset of the dimensional values, component properties on the Slice\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    Slice: _NS$h(\"Slice\"),\r\n    /**\r\n     * Abstract super-property of all properties representing dimensions, attributes or measures\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    ComponentProperty: _NS$h(\"ComponentProperty\"),\r\n    /**\r\n     * The class of components which represent the dimensions of the cube\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    DimensionProperty: _NS$h(\"DimensionProperty\"),\r\n    /**\r\n     * Superclass of all coded ComponentProperties\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    CodedProperty: _NS$h(\"CodedProperty\"),\r\n    /**\r\n     * The class of components which represent the measured value of the phenomenon being observed\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    MeasureProperty: _NS$h(\"MeasureProperty\"),\r\n    /**\r\n     * The class of components which represent attributes of observations in the cube, e.g. unit of measurement\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    AttributeProperty: _NS$h(\"AttributeProperty\"),\r\n    /**\r\n     * Defines the structure of a DataSet or slice\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    DataStructureDefinition: _NS$h(\"DataStructureDefinition\"),\r\n    /**\r\n     * Abstract class of things which reference one or more ComponentProperties\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    ComponentSet: _NS$h(\"ComponentSet\"),\r\n    /**\r\n     * Used to define properties of a component (attribute, dimension etc) which are specific to its usage in a DSD.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    ComponentSpecification: _NS$h(\"ComponentSpecification\"),\r\n    /**\r\n     * Denotes a subset of the component properties of a DataSet which are fixed in the corresponding slices\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    SliceKey: _NS$h(\"SliceKey\"),\r\n    /**\r\n     * Represents a generalized hierarchy of concepts which can be used for coding. The hierarchy is defined by one or more roots together with a property which relates concepts in the hierarchy to thier child concept .  The same concepts may be members of multiple hierarchies provided that different qb:parentChildProperty values are used for each hierarchy.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    HierarchicalCodeList: _NS$h(\"HierarchicalCodeList\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * indicates the data set of which this observation is a part\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    dataSet: _NS$h(\"dataSet\"),\r\n    /**\r\n     * indicates a observation contained within this slice of the data set\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    observation: _NS$h(\"observation\"),\r\n    /**\r\n     * Indicates a group of observations. The domain of this property is left open so that a group may be attached to different resources and need not be restricted to a single DataSet\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    observationGroup: _NS$h(\"observationGroup\"),\r\n    /**\r\n     * Indicates a subset of a DataSet defined by fixing a subset of the dimensional values\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    slice: _NS$h(\"slice\"),\r\n    /**\r\n     * Generic measure dimension, the value of this dimension indicates which measure (from the set of measures in the DSD) is being given by the obsValue (or other primary measure)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    measureType: _NS$h(\"measureType\"),\r\n    /**\r\n     * indicates the structure to which this data set conforms\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    structure: _NS$h(\"structure\"),\r\n    /**\r\n     * indicates a component specification which is included in the structure of the dataset\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    component: _NS$h(\"component\"),\r\n    /**\r\n     * indicates a ComponentProperty (i.e. attribute/dimension) expected on a DataSet, or a dimension fixed in a SliceKey\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    componentProperty: _NS$h(\"componentProperty\"),\r\n    /**\r\n     * indicates a priority order for the components of sets with this structure, used to guide presentations - lower order numbers come before higher numbers, un-numbered components come last\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    order: _NS$h(\"order\"),\r\n    /**\r\n     * Indicates whether a component property is required (true) or optional (false) in the context of a DSD. Only applicable\r\n      to components correspond to an attribute. Defaults to false (optional).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    componentRequired: _NS$h(\"componentRequired\"),\r\n    /**\r\n     * Indicates the level at which the component property should be attached, this might an qb:DataSet, qb:Slice or qb:Observation, or a qb:MeasureProperty.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    componentAttachment: _NS$h(\"componentAttachment\"),\r\n    /**\r\n     * An alternative to qb:componentProperty which makes explicit that the component is a dimension\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    dimension: _NS$h(\"dimension\"),\r\n    /**\r\n     * An alternative to qb:componentProperty which makes explicit that the component is a measure\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    measure: _NS$h(\"measure\"),\r\n    /**\r\n     * An alternative to qb:componentProperty which makes explicit that the component is a attribute\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    attribute: _NS$h(\"attribute\"),\r\n    /**\r\n     * An alternative to qb:componentProperty which makes explicit that the component is a measure dimension\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    measureDimension: _NS$h(\"measureDimension\"),\r\n    /**\r\n     * indicates the sub-key corresponding to this slice\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    sliceStructure: _NS$h(\"sliceStructure\"),\r\n    /**\r\n     * indicates a slice key which is used for slices in this dataset\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    sliceKey: _NS$h(\"sliceKey\"),\r\n    /**\r\n     * gives the concept which is being measured or indicated by a ComponentProperty\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    concept: _NS$h(\"concept\"),\r\n    /**\r\n     * gives the code list associated with a CodedProperty\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    codeList: _NS$h(\"codeList\"),\r\n    /**\r\n     * Specifies a root of the hierarchy. A hierarchy may have multiple roots but must have at least one.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [en].\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    hierarchyRoot: _NS$h(\"hierarchyRoot\"),\r\n    /**\r\n     * Specifies a property which relates a parent concept in the hierarchy to a child concept.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://purl.org/linked-data/cube\r\n     */\r\n    parentChildProperty: _NS$h(\"parentChildProperty\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - RDF (Resource Description Framework) - a framework for representing information in the Web\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$g = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\r\nfunction _NS$g(localName) {\r\n    return (_NAMESPACE$g + localName);\r\n}\r\n/**\r\n * [Generator provided] - RDF (Resource Description Framework) - a framework for representing information in the Web\r\n */\r\nvar RDF = {\r\n    PREFIX: \"rdf\",\r\n    NAMESPACE: _NAMESPACE$g,\r\n    PREFIX_AND_NAMESPACE: { \"rdf\": \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" },\r\n    NS: _NS$g,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * The class of RDF properties.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    Property: _NS$g(\"Property\"),\r\n    /**\r\n     * The datatype of RDF literals storing fragments of HTML content\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/TR/rdf11-concepts/#section-html\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    HTML: _NS$g(\"HTML\"),\r\n    /**\r\n     * The datatype of language-tagged string values\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/TR/rdf11-concepts/#section-Graph-Literal\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    langString: _NS$g(\"langString\"),\r\n    /**\r\n     * The class of plain (i.e. untyped) literal values, as used in RIF and OWL 2\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/TR/rdf-plain-literal/\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    PlainLiteral: _NS$g(\"PlainLiteral\"),\r\n    /**\r\n     * The class of RDF statements.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    Statement: _NS$g(\"Statement\"),\r\n    /**\r\n     * The class of unordered containers.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    Bag: _NS$g(\"Bag\"),\r\n    /**\r\n     * The class of ordered containers.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    Seq: _NS$g(\"Seq\"),\r\n    /**\r\n     * The class of containers of alternatives.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    Alt: _NS$g(\"Alt\"),\r\n    /**\r\n     * The class of RDF Lists.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    List: _NS$g(\"List\"),\r\n    /**\r\n     * The datatype of XML literal values.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    XMLLiteral: _NS$g(\"XMLLiteral\"),\r\n    /**\r\n     * The datatype of RDF literals storing JSON content.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#the-rdf-json-datatype\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    JSON: _NS$g(\"JSON\"),\r\n    /**\r\n     * A class representing a compound literal.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#the-rdf-compoundliteral-class-and-the-rdf-language-and-rdf-direction-properties\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    CompoundLiteral: _NS$g(\"CompoundLiteral\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The subject is an instance of a class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    type: _NS$g(\"type\"),\r\n    /**\r\n     * The subject of the subject RDF statement.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    subject: _NS$g(\"subject\"),\r\n    /**\r\n     * The predicate of the subject RDF statement.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    predicate: _NS$g(\"predicate\"),\r\n    /**\r\n     * The object of the subject RDF statement.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    object: _NS$g(\"object\"),\r\n    /**\r\n     * Idiomatic property used for structured values.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    value: _NS$g(\"value\"),\r\n    /**\r\n     * The empty list, with no items in it. If the rest of a list is nil then the list has no more items in it.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    nil: _NS$g(\"nil\"),\r\n    /**\r\n     * The first item in the subject RDF list.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    first: _NS$g(\"first\"),\r\n    /**\r\n     * The rest of the subject RDF list after the first item.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    rest: _NS$g(\"rest\"),\r\n    /**\r\n     * The language component of a CompoundLiteral.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#the-rdf-compoundliteral-class-and-the-rdf-language-and-rdf-direction-properties\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    language: _NS$g(\"language\"),\r\n    /**\r\n     * The base direction component of a CompoundLiteral.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * See also:\r\n     *  - https://www.w3.org/TR/json-ld11/#the-rdf-compoundliteral-class-and-the-rdf-language-and-rdf-direction-properties\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/1999/02/22-rdf-syntax-ns#\r\n     */\r\n    direction: _NS$g(\"direction\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - RDFS (RDF Schema) - a data-modelling vocabulary for RDF data\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$f = \"http://www.w3.org/2000/01/rdf-schema#\";\r\nfunction _NS$f(localName) {\r\n    return (_NAMESPACE$f + localName);\r\n}\r\n/**\r\n * [Generator provided] - RDFS (RDF Schema) - a data-modelling vocabulary for RDF data\r\n */\r\nvar RDFS = {\r\n    PREFIX: \"rdfs\",\r\n    NAMESPACE: _NAMESPACE$f,\r\n    PREFIX_AND_NAMESPACE: { \"rdfs\": \"http://www.w3.org/2000/01/rdf-schema#\" },\r\n    NS: _NS$f,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * The class resource, everything.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    Resource: _NS$f(\"Resource\"),\r\n    /**\r\n     * The class of classes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    Class: _NS$f(\"Class\"),\r\n    /**\r\n     * The class of literal values, eg. textual strings and integers.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    Literal: _NS$f(\"Literal\"),\r\n    /**\r\n     * The class of RDF containers.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    Container: _NS$f(\"Container\"),\r\n    /**\r\n     * The class of container membership properties, rdf:_1, rdf:_2, ...,\r\n                      all of which are sub-properties of 'member'.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    ContainerMembershipProperty: _NS$f(\"ContainerMembershipProperty\"),\r\n    /**\r\n     * The class of RDF datatypes.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    Datatype: _NS$f(\"Datatype\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Further information about the subject resource.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    seeAlso: _NS$f(\"seeAlso\"),\r\n    /**\r\n     * The defininition of the subject resource.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    isDefinedBy: _NS$f(\"isDefinedBy\"),\r\n    /**\r\n     * A human-readable name for the subject.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    label: _NS$f(\"label\"),\r\n    /**\r\n     * A description of the subject resource.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    comment: _NS$f(\"comment\"),\r\n    /**\r\n     * A range of the subject property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    range: _NS$f(\"range\"),\r\n    /**\r\n     * A domain of the subject property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    domain: _NS$f(\"domain\"),\r\n    /**\r\n     * The subject is a subclass of a class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    subClassOf: _NS$f(\"subClassOf\"),\r\n    /**\r\n     * The subject is a subproperty of a property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    subPropertyOf: _NS$f(\"subPropertyOf\"),\r\n    /**\r\n     * A member of the subject resource.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2000/01/rdf-schema#\r\n     */\r\n    member: _NS$f(\"member\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * Inrupt-created copy of RLOG, needed due to Server 500 errors resolving original uni-leipzig.org!\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$e = \"http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#\";\r\nfunction _NS$e(localName) {\r\n    return (_NAMESPACE$e + localName);\r\n}\r\n/**\r\n * Inrupt-created copy of RLOG, needed due to Server 500 errors resolving original uni-leipzig.org!\r\n */\r\nvar RLOG = {\r\n    PREFIX: \"rlog\",\r\n    NAMESPACE: _NAMESPACE$e,\r\n    PREFIX_AND_NAMESPACE: { \"rlog\": \"http://persistence.uni-leipzig.org/nlp2rdf/ontologies/rlog#\" },\r\n    NS: _NS$e,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * look here: http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Level: _NS$e(\"Level\"),\r\n    /**\r\n     * An entry in a log.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    Entry: _NS$e(\"Entry\"),\r\n    /**\r\n     * A status code which can occur in an application. Instances of this class must put the name of the status as rdfs:label and describe it with rdfs:comment.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    StatusCode: _NS$e(\"StatusCode\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The ALL has the lowest possible rank and is intended to turn on all logging.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    ALL: _NS$e(\"ALL\"),\r\n    /**\r\n     * Attention: the ids here can change, they are just used to define an order over the levels!\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    priority: _NS$e(\"priority\"),\r\n    /**\r\n     * The DEBUG Level designates fine-grained informational events that are most useful to debug an application.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    DEBUG: _NS$e(\"DEBUG\"),\r\n    /**\r\n     * The ERROR level designates error events that might still allow the application to continue running.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    ERROR: _NS$e(\"ERROR\"),\r\n    /**\r\n     * The FATAL level designates very severe error events that will presumably lead the application to abort.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    FATAL: _NS$e(\"FATAL\"),\r\n    /**\r\n     * The INFO level designates informational messages that highlight the progress of the application at coarse-grained level.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    INFO: _NS$e(\"INFO\"),\r\n    /**\r\n     * The OFF has the highest possible rank and is intended to turn off logging.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    OFF: _NS$e(\"OFF\"),\r\n    /**\r\n     * The TRACE Level designates finer-grained informational events than the DEBUG.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    TRACE: _NS$e(\"TRACE\"),\r\n    /**\r\n     * The WARN level designates potentially harmful situations.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    WARN: _NS$e(\"WARN\"),\r\n    /**\r\n     * Outputs the fully qualified class name of the caller issuing the logging request.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    className: _NS$e(\"className\"),\r\n    /**\r\n     * The numerical value of the code, e.g. 200, 404 or 42.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    codeId: _NS$e(\"codeId\"),\r\n    /**\r\n     * Logging datetime (or just date)\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    date: _NS$e(\"date\"),\r\n    /**\r\n     * Links a log message to a status code.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    hasCode: _NS$e(\"hasCode\"),\r\n    /**\r\n     * logLevel\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    level: _NS$e(\"level\"),\r\n    /**\r\n     * Logging message\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    message: _NS$e(\"message\"),\r\n    /**\r\n     * If we mix normal and log output, this can be used to refer to the resource in the RDF the error is connected to.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    resource: _NS$e(\"resource\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * Inrupt extension to Schema.org terms providing\r\n multilingual alternative names (i.e., labels) and translations for comments\r\n (e.g., for use directly as labels or tool-tips in user interfaces or error\r\n messages). This extension very deliberately cherry-picks the individual terms\r\n from Schema.org that Inrupt currently deem generally useful for Solid and Solid\r\n applications (meaning we can provide a much cleaner, less noisy and smaller\r\n bundle size when generating programming language artifacts that provide\r\n convenient constants for just these selected terms, rather than including the\r\n over 2,500 terms currently defined in Schema.org).\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$d = \"http://schema.org/\";\r\nfunction _NS$d(localName) {\r\n    return (_NAMESPACE$d + localName);\r\n}\r\n/**\r\n * Inrupt extension to Schema.org terms providing\r\n multilingual alternative names (i.e., labels) and translations for comments\r\n (e.g., for use directly as labels or tool-tips in user interfaces or error\r\n messages). This extension very deliberately cherry-picks the individual terms\r\n from Schema.org that Inrupt currently deem generally useful for Solid and Solid\r\n applications (meaning we can provide a much cleaner, less noisy and smaller\r\n bundle size when generating programming language artifacts that provide\r\n convenient constants for just these selected terms, rather than including the\r\n over 2,500 terms currently defined in Schema.org).\r\n */\r\nvar SCHEMA_INRUPT = {\r\n    PREFIX: \"schema-inrupt\",\r\n    NAMESPACE: _NAMESPACE$d,\r\n    PREFIX_AND_NAMESPACE: { \"schema-inrupt\": \"http://schema.org/\" },\r\n    NS: _NS$d,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A person (alive, dead, undead, or fictional).\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    Person: _NS$d(\"Person\"),\r\n    /**\r\n     * Data type: URL.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    URL: _NS$d(\"URL\"),\r\n    /**\r\n     * Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    MedicalTherapy: _NS$d(\"MedicalTherapy\"),\r\n    /**\r\n     * An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    EducationalOccupationalCredential: _NS$d(\"EducationalOccupationalCredential\"),\r\n    /**\r\n     * The mailing address.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    PostalAddress: _NS$d(\"PostalAddress\"),\r\n    /**\r\n     * Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.\r\n     *\r\n     * This term has [5] labels and comments, in the languages [NoLocale, de, es, fr, it].\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    Product: _NS$d(\"Product\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * An alias for the item.\r\n     *\r\n     * This term has [6] labels and comments, in the languages [NoLocale, de, en, es, fr, it].\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    alternateName: _NS$d(\"alternateName\"),\r\n    /**\r\n     * Given name. In the U.S., the first name of a Person.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    givenName: _NS$d(\"givenName\"),\r\n    /**\r\n     * Family name. In the U.S., the last name of a Person.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    familyName: _NS$d(\"familyName\"),\r\n    /**\r\n     * An additional name for a Person, can be used for a middle name.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    additionalName: _NS$d(\"additionalName\"),\r\n    /**\r\n     * A license document that applies to this content, typically indicated by URL.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    license: _NS$d(\"license\"),\r\n    /**\r\n     * The name of the item.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    name: _NS$d(\"name\"),\r\n    /**\r\n     * The textual content of this CreativeWork.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    text: _NS$d(\"text\"),\r\n    /**\r\n     * The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.\r\n          \n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * See also:\r\n     *  - https://schema.org/docs/datamodel.html#identifierBg\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    identifier: _NS$d(\"identifier\"),\r\n    /**\r\n     * A description of the item.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    description: _NS$d(\"description\"),\r\n    /**\r\n     * An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * See also:\r\n     *  - https://schema.org/ImageObject\r\n     *  - https://schema.org/URL\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    image: _NS$d(\"image\"),\r\n    /**\r\n     * URL of the item.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    url: _NS$d(\"url\"),\r\n    /**\r\n     * The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. e.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    startTime: _NS$d(\"startTime\"),\r\n    /**\r\n     * The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. e.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    endTime: _NS$d(\"endTime\"),\r\n    /**\r\n     * The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    startDate: _NS$d(\"startDate\"),\r\n    /**\r\n     * The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    endDate: _NS$d(\"endDate\"),\r\n    /**\r\n     * Email address.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    email: _NS$d(\"email\"),\r\n    /**\r\n     * A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    primaryPrevention: _NS$d(\"primaryPrevention\"),\r\n    /**\r\n     * Specific qualifications required for this role or Occupation.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    qualifications: _NS$d(\"qualifications\"),\r\n    /**\r\n     * A person or organization attending the event.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    attendee: _NS$d(\"attendee\"),\r\n    /**\r\n     * Physical address of the item.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    address: _NS$d(\"address\"),\r\n    /**\r\n     * The street address. For example, 1600 Amphitheatre Pkwy.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    streetAddress: _NS$d(\"streetAddress\"),\r\n    /**\r\n     * The locality in which the street address is, and which is in the region. For example, Mountain View.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    addressLocality: _NS$d(\"addressLocality\"),\r\n    /**\r\n     * The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country)\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    addressRegion: _NS$d(\"addressRegion\"),\r\n    /**\r\n     * The postal code. For example, 94043.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    postalCode: _NS$d(\"postalCode\"),\r\n    /**\r\n     * The country. For example, USA. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1).\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    addressCountry: _NS$d(\"addressCountry\"),\r\n    /**\r\n     * Password, PIN, or access code needed for delivery (e.g. from a locker).\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    accessCode: _NS$d(\"accessCode\"),\r\n    /**\r\n     * The identifier for the account the payment will be applied to.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    accountId: _NS$d(\"accountId\"),\r\n    /**\r\n     * The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    serialNumber: _NS$d(\"serialNumber\"),\r\n    /**\r\n     * The product identifier, such as ISBN. For example: ``` meta itemprop=\"productID\" content=\"isbn:123-456-789\" ```.\r\n     *\r\n     * This term provides multilingual descriptions, with [6] labels in languages [NoLocale, de, en, es, fr, it], but [5] comments in languages [NoLocale, de, es, fr, it] (so the difference is only between English and NoLocale, which we consider the same).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/schema#\r\n     */\r\n    productID: _NS$d(\"productID\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - SPARQL Service Description vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$c = \"http://www.w3.org/ns/sparql-service-description#\";\r\nfunction _NS$c(localName) {\r\n    return (_NAMESPACE$c + localName);\r\n}\r\n/**\r\n * [Generator provided] - SPARQL Service Description vocabulary\r\n */\r\nvar SD = {\r\n    PREFIX: \"sd\",\r\n    NAMESPACE: _NAMESPACE$c,\r\n    PREFIX_AND_NAMESPACE: { \"sd\": \"http://www.w3.org/ns/sparql-service-description#\" },\r\n    NS: _NS$c,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * An instance of sd:Service represents a SPARQL service made available via the SPARQL Protocol.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Service: _NS$c(\"Service\"),\r\n    /**\r\n     * An instance of sd:Feature represents a feature of a SPARQL service. Specific types of features include functions, aggregates, languages, and entailment regimes and profiles. This document defines five instances of sd:Feature: sd:DereferencesURIs, sd:UnionDefaultGraph, sd:RequiresDataset, sd:EmptyGraphs, and sd:BasicFederatedQuery.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Feature: _NS$c(\"Feature\"),\r\n    /**\r\n     * An instance of sd:EntailmentRegime represents an entailment regime used in basic graph pattern matching (as described by SPARQL 1.1 Query Language).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    EntailmentRegime: _NS$c(\"EntailmentRegime\"),\r\n    /**\r\n     * An instance of sd:NamedGraph represents a named graph having a name (via sd:name) and an optional graph description (via sd:graph).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    NamedGraph: _NS$c(\"NamedGraph\"),\r\n    /**\r\n     * An instance of sd:EntailmentProfile represents a profile of an entailment regime. An entailment profile MAY impose restrictions on what constitutes valid RDF with respect to entailment.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    EntailmentProfile: _NS$c(\"EntailmentProfile\"),\r\n    /**\r\n     * An instance of sd:Function represents a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Function: _NS$c(\"Function\"),\r\n    /**\r\n     * An instance of sd:Aggregate represents an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Aggregate: _NS$c(\"Aggregate\"),\r\n    /**\r\n     * An instance of sd:Language represents one of the SPARQL languages, including specific configurations providing particular features or extensions. This document defines three instances of sd:Language: sd:SPARQL10Query, sd:SPARQL11Query, and sd:SPARQL11Update.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Language: _NS$c(\"Language\"),\r\n    /**\r\n     * An instance of sd:Dataset represents a RDF Dataset comprised of a default graph and zero or more named graphs.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Dataset: _NS$c(\"Dataset\"),\r\n    /**\r\n     * An instance of sd:GraphCollection represents a collection of zero or more named graph descriptions. Each named graph description belonging to an sd:GraphCollection MUST be linked with the sd:namedGraph predicate.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    GraphCollection: _NS$c(\"GraphCollection\"),\r\n    /**\r\n     * An instance of sd:Graph represents the description of an RDF graph.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Graph: _NS$c(\"Graph\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The SPARQL endpoint of an sd:Service that implements the SPARQL Protocol service. The object of the sd:endpoint property is an IRI.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    endpoint: _NS$c(\"endpoint\"),\r\n    /**\r\n     * Relates an instance of sd:Service with a resource representing a supported feature.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    feature: _NS$c(\"feature\"),\r\n    /**\r\n     * Relates an instance of sd:Service with a resource representing an entailment regime used for basic graph pattern matching. This property is intended for use when a single entailment regime by default applies to all graphs in the default dataset of the service. In situations where a different entailment regime applies to a specific graph in the dataset, the sd:entailmentRegime property should be used to indicate this fact in the description of that graph.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    defaultEntailmentRegime: _NS$c(\"defaultEntailmentRegime\"),\r\n    /**\r\n     * Relates a named graph description with a resource representing an entailment regime used for basic graph pattern matching over that graph.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    entailmentRegime: _NS$c(\"entailmentRegime\"),\r\n    /**\r\n     * Relates an instance of sd:Service with a resource representing a supported profile of the default entailment regime (as declared by sd:defaultEntailmentRegime).\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    defaultSupportedEntailmentProfile: _NS$c(\"defaultSupportedEntailmentProfile\"),\r\n    /**\r\n     * Relates a named graph description with a resource representing a supported profile of the entailment regime (as declared by sd:entailmentRegime) used for basic graph pattern matching over that graph.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    supportedEntailmentProfile: _NS$c(\"supportedEntailmentProfile\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a function that may be used in a SPARQL SELECT expression or a FILTER, HAVING, GROUP BY, ORDER BY, or BIND clause.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    extensionFunction: _NS$c(\"extensionFunction\"),\r\n    /**\r\n     * Relates an instance of sd:Service to an aggregate that may be used in a SPARQL aggregate query (for instance in a HAVING clause or SELECT expression) besides the standard list of supported aggregates COUNT, SUM, MIN, MAX, AVG, GROUP_CONCAT, and SAMPLE\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    extensionAggregate: _NS$c(\"extensionAggregate\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a resource representing an implemented extension to the SPARQL Query or Update language.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    languageExtension: _NS$c(\"languageExtension\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a SPARQL language (e.g. Query and Update) that it implements.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    supportedLanguage: _NS$c(\"supportedLanguage\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a resource representing an implemented feature that extends the SPARQL Query or Update language and that is accessed by using the named property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    propertyFeature: _NS$c(\"propertyFeature\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a description of the default dataset available when no explicit dataset is specified in the query, update request or via protocol parameters.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    defaultDataset: _NS$c(\"defaultDataset\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a description of the graphs which are allowed in the construction of a dataset either via the SPARQL Protocol, with FROM/FROM NAMED clauses in a query, or with USING/USING NAMED in an update request, if the service limits the scope of dataset construction.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    availableGraphs: _NS$c(\"availableGraphs\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a format that is supported for serializing query results.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    resultFormat: _NS$c(\"resultFormat\"),\r\n    /**\r\n     * Relates an instance of sd:Service to a format that is supported for parsing RDF input; for example, via a SPARQL 1.1 Update LOAD statement, or when URIs are dereferenced in FROM/FROM NAMED/USING/USING NAMED clauses.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    inputFormat: _NS$c(\"inputFormat\"),\r\n    /**\r\n     * Relates an instance of sd:Dataset to the description of its default graph.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    defaultGraph: _NS$c(\"defaultGraph\"),\r\n    /**\r\n     * Relates an instance of sd:GraphCollection (or its subclass sd:Dataset) to the description of one of its named graphs. The description of such a named graph MUST include the sd:name property and MAY include the sd:graph property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    namedGraph: _NS$c(\"namedGraph\"),\r\n    /**\r\n     * Relates a named graph to the name by which it may be referenced in a FROM/FROM NAMED clause. The object of the sd:name property is an IRI.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    name: _NS$c(\"name\"),\r\n    /**\r\n     * Relates a named graph to its graph description.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    graph: _NS$c(\"graph\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - SDMX Dimension Vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$b = \"http://purl.org/linked-data/sdmx/2009/dimension#\";\r\nfunction _NS$b(localName) {\r\n    return (_NAMESPACE$b + localName);\r\n}\r\n/**\r\n * [Generator provided] - SDMX Dimension Vocabulary\r\n */\r\nvar SDMX_DIMENSION = {\r\n    PREFIX: \"sdmx-dimension\",\r\n    NAMESPACE: _NAMESPACE$b,\r\n    PREFIX_AND_NAMESPACE: { \"sdmx-dimension\": \"http://purl.org/linked-data/sdmx/2009/dimension#\" },\r\n    NS: _NS$b,\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The length of time that a person has lived or a thing has existed.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    age: _NS$b(\"age\"),\r\n    /**\r\n     * Legal, conjugal status of each individual in relation to the marriage laws or customs of the country.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    civilStatus: _NS$b(\"civilStatus\"),\r\n    /**\r\n     * Monetary denomination of the object being measured.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    currency: _NS$b(\"currency\"),\r\n    /**\r\n     * The highest level of an educational programme the person has successfully completed.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    educationLev: _NS$b(\"educationLev\"),\r\n    /**\r\n     * The time interval at which observations occur over a given time period.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    freq: _NS$b(\"freq\"),\r\n    /**\r\n     * Job or position held by an individual who performs a set of tasks and duties.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    occupation: _NS$b(\"occupation\"),\r\n    /**\r\n     * The country or geographic area to which the measured statistical phenomenon relates.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    refArea: _NS$b(\"refArea\"),\r\n    /**\r\n     * The period of time or point in time to which the measured observation is intended to refer.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    refPeriod: _NS$b(\"refPeriod\"),\r\n    /**\r\n     * The state of being male or female.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    sex: _NS$b(\"sex\"),\r\n    /**\r\n     * The period of time or point in time to which the measured observation refers.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: https://sdmx.org/wp-content/uploads/01_sdmx_cog_annex_1_cdc_2009.pdf\r\n     */\r\n    timePeriod: _NS$b(\"timePeriod\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Security vocabulary\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$a = \"https://w3id.org/security#\";\r\nfunction _NS$a(localName) {\r\n    return (_NAMESPACE$a + localName);\r\n}\r\n/**\r\n * [Generator provided] - Security vocabulary\r\n */\r\nvar SEC = {\r\n    PREFIX: \"sec\",\r\n    NAMESPACE: _NAMESPACE$a,\r\n    PREFIX_AND_NAMESPACE: { \"sec\": \"https://w3id.org/security#\" },\r\n    NS: _NS$a,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EcdsaSecp256k1Signature2019: _NS$a(\"EcdsaSecp256k1Signature2019\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EcdsaSecp256k1RecoverySignature2020: _NS$a(\"EcdsaSecp256k1RecoverySignature2020\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EcdsaSecp256k1VerificationKey2019: _NS$a(\"EcdsaSecp256k1VerificationKey2019\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EcdsaSecp256k1RecoveryMethod2020: _NS$a(\"EcdsaSecp256k1RecoveryMethod2020\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    RsaSignature2018: _NS$a(\"RsaSignature2018\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    RsaVerificationKey2018: _NS$a(\"RsaVerificationKey2018\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    SchnorrSecp256k1Signature2019: _NS$a(\"SchnorrSecp256k1Signature2019\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    SchnorrSecp256k1VerificationKey2019: _NS$a(\"SchnorrSecp256k1VerificationKey2019\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    ServiceEndpointProxyService: _NS$a(\"ServiceEndpointProxyService\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Digest: _NS$a(\"Digest\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EncryptedMessage: _NS$a(\"EncryptedMessage\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Signature: _NS$a(\"Signature\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    LinkedDataSignature2015: _NS$a(\"LinkedDataSignature2015\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    X25519KeyAgreementKey2019: _NS$a(\"X25519KeyAgreementKey2019\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Ed25519VerificationKey2018: _NS$a(\"Ed25519VerificationKey2018\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    BbsBlsSignature2020: _NS$a(\"BbsBlsSignature2020\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    BbsBlsSignatureProof2020: _NS$a(\"BbsBlsSignatureProof2020\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Bls12381G1Key2020: _NS$a(\"Bls12381G1Key2020\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Bls12381G2Key2020: _NS$a(\"Bls12381G2Key2020\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Key: _NS$a(\"Key\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    cipherAlgorithm: _NS$a(\"cipherAlgorithm\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    cipherData: _NS$a(\"cipherData\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    digestAlgorithm: _NS$a(\"digestAlgorithm\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    digestValue: _NS$a(\"digestValue\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    cipherKey: _NS$a(\"cipherKey\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    blockchainAccountId: _NS$a(\"blockchainAccountId\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    ethereumAddress: _NS$a(\"ethereumAddress\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    expires: _NS$a(\"expires\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    initializationVector: _NS$a(\"initializationVector\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    nonce: _NS$a(\"nonce\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    canonicalizationAlgorithm: _NS$a(\"canonicalizationAlgorithm\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    owner: _NS$a(\"owner\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    password: _NS$a(\"password\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    privateKeyPem: _NS$a(\"privateKeyPem\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    verificationMethod: _NS$a(\"verificationMethod\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKey: _NS$a(\"publicKey\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    assertionMethod: _NS$a(\"assertionMethod\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    authentication: _NS$a(\"authentication\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    capabilityDelegation: _NS$a(\"capabilityDelegation\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    capabilityInvocation: _NS$a(\"capabilityInvocation\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    keyAgreement: _NS$a(\"keyAgreement\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKeyBase58: _NS$a(\"publicKeyBase58\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKeyJwk: _NS$a(\"publicKeyJwk\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKeyPem: _NS$a(\"publicKeyPem\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKeyHex: _NS$a(\"publicKeyHex\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKeyMultibase: _NS$a(\"publicKeyMultibase\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    publicKeyService: _NS$a(\"publicKeyService\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    revoked: _NS$a(\"revoked\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    proof: _NS$a(\"proof\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    jws: _NS$a(\"jws\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    proofPurpose: _NS$a(\"proofPurpose\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    challenge: _NS$a(\"challenge\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    domain: _NS$a(\"domain\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    expiration: _NS$a(\"expiration\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    proofValue: _NS$a(\"proofValue\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    signature: _NS$a(\"signature\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    signatureValue: _NS$a(\"signatureValue\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    signatureAlgorithm: _NS$a(\"signatureAlgorithm\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    service: _NS$a(\"service\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    serviceEndpoint: _NS$a(\"serviceEndpoint\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    x509CertificateChain: _NS$a(\"x509CertificateChain\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    x509CertificateFingerprint: _NS$a(\"x509CertificateFingerprint\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    allowedAction: _NS$a(\"allowedAction\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    capability: _NS$a(\"capability\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    capabilityAction: _NS$a(\"capabilityAction\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    capabilityChain: _NS$a(\"capabilityChain\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    caveat: _NS$a(\"caveat\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    delegator: _NS$a(\"delegator\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    invocationTarget: _NS$a(\"invocationTarget\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    invoker: _NS$a(\"invoker\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - Shape Expressions (ShEx) - for validating RDF\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$9 = \"http://www.w3.org/ns/shex#\";\r\nfunction _NS$9(localName) {\r\n    return (_NAMESPACE$9 + localName);\r\n}\r\n/**\r\n * [Generator provided] - Shape Expressions (ShEx) - for validating RDF\r\n */\r\nvar SHEX = {\r\n    PREFIX: \"shex\",\r\n    NAMESPACE: _NAMESPACE$9,\r\n    PREFIX_AND_NAMESPACE: { \"shex\": \"http://www.w3.org/ns/shex#\" },\r\n    NS: _NS$9,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Annotations provide a format-independent way to provide additional information about elements in a schema.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    Annotation: _NS$9(\"Annotation\"),\r\n    /**\r\n     * A TripleExpression composed of one or more sub-expressions, all of which must match.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    EachOf: _NS$9(\"EachOf\"),\r\n    /**\r\n     * The abstract class of Triple Expressions.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    TripleExpression: _NS$9(\"TripleExpression\"),\r\n    /**\r\n     * An IRI prefix used for matching IRIs.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    IriStem: _NS$9(\"IriStem\"),\r\n    /**\r\n     * Abstract class for Stems\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    Stem: _NS$9(\"Stem\"),\r\n    /**\r\n     * An IRI prefix (or wildcard) along with a set of excluded values, used for node matching.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    IriStemRange: _NS$9(\"IriStemRange\"),\r\n    /**\r\n     * Abstract Class for Stem Ranges\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    StemRange: _NS$9(\"StemRange\"),\r\n    /**\r\n     * An Language tag used for matching Literal Languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    Language: _NS$9(\"Language\"),\r\n    /**\r\n     * An Language prefix used for matching Literal Languages.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    LanguageStem: _NS$9(\"LanguageStem\"),\r\n    /**\r\n     * An Language prefix (or wildcard) along with a set of excluded values, used for node matching.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    LanguageStemRange: _NS$9(\"LanguageStemRange\"),\r\n    /**\r\n     * An Literal prefix used for matching Literals.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    LiteralStem: _NS$9(\"LiteralStem\"),\r\n    /**\r\n     * An Literal prefix (or wildcard) along with a set of excluded values, used for node matching.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    LiteralStemRange: _NS$9(\"LiteralStemRange\"),\r\n    /**\r\n     * A constraint on the type or value of an RDF Node.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    NodeConstraint: _NS$9(\"NodeConstraint\"),\r\n    /**\r\n     * The abstract class of Shape Expressions.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    ShapeExpression: _NS$9(\"ShapeExpression\"),\r\n    /**\r\n     * The set of kinds of RDF Nodes.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    NodeKind: _NS$9(\"NodeKind\"),\r\n    /**\r\n     * A TripleExpression composed of one or more sub-expressions, one of which must match.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    OneOf: _NS$9(\"OneOf\"),\r\n    /**\r\n     * A Schema contains the set of shapes, used for matching a focus node.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    Schema: _NS$9(\"Schema\"),\r\n    /**\r\n     * A list of Semantic Actions that serve as an extension point for Shape Expressions. They appear in lists in Schema's startActs and Shape, OneOf, EachOf and TripleConstraint's semActs.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    SemAct: _NS$9(\"SemAct\"),\r\n    /**\r\n     * A shapes schema is captured in a Schema object where shapes is a mapping from shape label to shape expression.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    Shape: _NS$9(\"Shape\"),\r\n    /**\r\n     * A ShapeExpression composed of one or more sub-expressions, all of which must match.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    ShapeAnd: _NS$9(\"ShapeAnd\"),\r\n    /**\r\n     * A reference to a shape defined in some external Schema.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    ShapeExternal: _NS$9(\"ShapeExternal\"),\r\n    /**\r\n     * A ShapeNot is satisfied when it’s included ShapeExpression is not satisfied.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    ShapeNot: _NS$9(\"ShapeNot\"),\r\n    /**\r\n     * A ShapeExpression composed of one or more sub-expressions, one of which must match.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    ShapeOr: _NS$9(\"ShapeOr\"),\r\n    /**\r\n     * A constraint on a triple having a specific predicate and optionally a shape expression used for matching values.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    TripleConstraint: _NS$9(\"TripleConstraint\"),\r\n    /**\r\n     * Indicates that a stem is a Wildcard, rather than a URI prefix.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    Wildcard: _NS$9(\"Wildcard\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * Annotations on a TripleExpression.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    annotation: _NS$9(\"annotation\"),\r\n    /**\r\n     * Indicates that a Shape is closed, meaning that it may contain no property values other than those used within TripleConstraints.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    closed: _NS$9(\"closed\"),\r\n    /**\r\n     * Code executed by Semantic Action.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    code: _NS$9(\"code\"),\r\n    /**\r\n     * A datatype constraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    datatype: _NS$9(\"datatype\"),\r\n    /**\r\n     * Values that are excluded from value matching.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    exclusion: _NS$9(\"exclusion\"),\r\n    /**\r\n     * Expression associated with the TripleExpression.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    expression: _NS$9(\"expression\"),\r\n    /**\r\n     * List of 2 or more expressions associated with the TripleExpression.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    expressions: _NS$9(\"expressions\"),\r\n    /**\r\n     * Properties which may have extra values beyond those matched through a constraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    extra: _NS$9(\"extra\"),\r\n    /**\r\n     * Regular expression flags\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    flags: _NS$9(\"flags\"),\r\n    /**\r\n     * for \"fractiondigits\" constraints, v is less than or equals the number of digits to the right of the decimal place in the XML Schema canonical form[xmlschema-2] of the value of n, ignoring trailing zeros.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    fractiondigits: _NS$9(\"fractiondigits\"),\r\n    /**\r\n     * Abstract property of numeric facets on a NodeConstraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    numericFacet: _NS$9(\"numericFacet\"),\r\n    /**\r\n     * An abstract property of string and numeric facets on a NodeConstraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    xsFacet: _NS$9(\"xsFacet\"),\r\n    /**\r\n     * Constrains the subject of a triple, rather than the object.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    inverse: _NS$9(\"inverse\"),\r\n    /**\r\n     * The value used to match the language tag of a language-tagged string.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    languageTag: _NS$9(\"languageTag\"),\r\n    /**\r\n     * The exact length of the value of the cell.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    length: _NS$9(\"length\"),\r\n    /**\r\n     * An abstract property of string facets on a NodeConstraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    stringFacet: _NS$9(\"stringFacet\"),\r\n    /**\r\n     * Maximum number of times this TripleExpression may match; -1 for “*”\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    max: _NS$9(\"max\"),\r\n    /**\r\n     * An atomic property that contains a single number that is the maximum valid value (exclusive).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    maxexclusive: _NS$9(\"maxexclusive\"),\r\n    /**\r\n     * An atomic property that contains a single number that is the maximum valid value (inclusive).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    maxinclusive: _NS$9(\"maxinclusive\"),\r\n    /**\r\n     * A numeric atomic property that contains a single integer that is the maximum length of the value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    maxlength: _NS$9(\"maxlength\"),\r\n    /**\r\n     * Minimum number of times this TripleExpression may match.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    min: _NS$9(\"min\"),\r\n    /**\r\n     * An atomic property that contains a single number that is the minimum valid value (exclusive).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    minexclusive: _NS$9(\"minexclusive\"),\r\n    /**\r\n     * An atomic property that contains a single number that is the minimum valid value (inclusive).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    mininclusive: _NS$9(\"mininclusive\"),\r\n    /**\r\n     * An atomic property that contains a single integer that is the minimum length of the value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    minlength: _NS$9(\"minlength\"),\r\n    /**\r\n     * Identifier of SemAct extension.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    name: _NS$9(\"name\"),\r\n    /**\r\n     * Restiction on the kind of node matched; restricted to the defined instances of NodeKind. One of shex:iri, shex:bnode, shex:literal, or shex:nonliteral.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    nodeKind: _NS$9(\"nodeKind\"),\r\n    /**\r\n     * The object of an Annotation.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    object: _NS$9(\"object\"),\r\n    /**\r\n     * A regular expression used for matching a value.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    pattern: _NS$9(\"pattern\"),\r\n    /**\r\n     * The predicate of a TripleConstraint or Annotation.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    predicate: _NS$9(\"predicate\"),\r\n    /**\r\n     * Semantic Actions on this TripleExpression.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    semActs: _NS$9(\"semActs\"),\r\n    /**\r\n     * Shape Expression referenced by this shape.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    shapeExpr: _NS$9(\"shapeExpr\"),\r\n    /**\r\n     * A list of 2 or more Shape Expressions referenced by this shape.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    shapeExprs: _NS$9(\"shapeExprs\"),\r\n    /**\r\n     * Shapes in this Schema.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    shapes: _NS$9(\"shapes\"),\r\n    /**\r\n     * A ShapeExpression matched against the focus node prior to any other mapped expressions.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    start: _NS$9(\"start\"),\r\n    /**\r\n     * Semantic Actions run on the Schema.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    startActs: _NS$9(\"startActs\"),\r\n    /**\r\n     * A stem value used for matching or excluding values.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    stem: _NS$9(\"stem\"),\r\n    /**\r\n     * for \"totaldigits\" constraints, v equals the number of digits in the XML Schema canonical form[xmlschema-2] of the value of n\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    totaldigits: _NS$9(\"totaldigits\"),\r\n    /**\r\n     * A ShapeExpression used for matching the object (or subject if inverted) of a TripleConstraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    valueExpr: _NS$9(\"valueExpr\"),\r\n    /**\r\n     * A value restriction on a NodeConstraint.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/shex#\r\n     */\r\n    values: _NS$9(\"values\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * An RDF vocabulary for describing the basic structure and content of concept schemes such as thesauri, classification schemes, subject heading lists, taxonomies, 'folksonomies', other types of controlled vocabulary, and also concept schemes embedded in glossaries and terminologies.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$8 = \"http://www.w3.org/2004/02/skos/core#\";\r\nfunction _NS$8(localName) {\r\n    return (_NAMESPACE$8 + localName);\r\n}\r\n/**\r\n * An RDF vocabulary for describing the basic structure and content of concept schemes such as thesauri, classification schemes, subject heading lists, taxonomies, 'folksonomies', other types of controlled vocabulary, and also concept schemes embedded in glossaries and terminologies.\r\n */\r\nvar SKOS = {\r\n    PREFIX: \"skos\",\r\n    NAMESPACE: _NAMESPACE$8,\r\n    PREFIX_AND_NAMESPACE: { \"skos\": \"http://www.w3.org/2004/02/skos/core#\" },\r\n    NS: _NS$8,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * An idea or notion; a unit of thought.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    Concept: _NS$8(\"Concept\"),\r\n    /**\r\n     * A set of concepts, optionally including statements about semantic relationships between those concepts.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    ConceptScheme: _NS$8(\"ConceptScheme\"),\r\n    /**\r\n     * A meaningful collection of concepts.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    Collection: _NS$8(\"Collection\"),\r\n    /**\r\n     * An ordered collection of concepts, where both the grouping and the ordering are meaningful.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    OrderedCollection: _NS$8(\"OrderedCollection\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * A statement or formal explanation of the meaning of a concept.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    definition: _NS$8(\"definition\"),\r\n    /**\r\n     * A general note, for any purpose.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    note: _NS$8(\"note\"),\r\n    /**\r\n     * A note that helps to clarify the meaning and/or the use of a concept.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    scopeNote: _NS$8(\"scopeNote\"),\r\n    /**\r\n     * An example of the use of a concept.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    example: _NS$8(\"example\"),\r\n    /**\r\n     * Relates a resource (for example a concept) to a concept scheme in which it is included.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    inScheme: _NS$8(\"inScheme\"),\r\n    /**\r\n     * Relates, by convention, a concept scheme to a concept which is topmost in the broader/narrower concept hierarchies for that scheme, providing an entry point to these hierarchies.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    hasTopConcept: _NS$8(\"hasTopConcept\"),\r\n    /**\r\n     * Relates a concept to the concept scheme that it is a top level concept of.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    topConceptOf: _NS$8(\"topConceptOf\"),\r\n    /**\r\n     * A resource has no more than one value of skos:prefLabel per language tag, and no more than one value of skos:prefLabel without language tag.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    prefLabel: _NS$8(\"prefLabel\"),\r\n    /**\r\n     * The range of skos:altLabel is the class of RDF plain literals.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    altLabel: _NS$8(\"altLabel\"),\r\n    /**\r\n     * skos:prefLabel, skos:altLabel and skos:hiddenLabel are pairwise disjoint properties.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    hiddenLabel: _NS$8(\"hiddenLabel\"),\r\n    /**\r\n     * A notation, also known as classification code, is a string of characters such as \"T58.5\" or \"303.4833\" used to uniquely identify a concept within the scope of a given concept scheme.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    notation: _NS$8(\"notation\"),\r\n    /**\r\n     * A note about a modification to a concept.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    changeNote: _NS$8(\"changeNote\"),\r\n    /**\r\n     * A note for an editor, translator or maintainer of the vocabulary.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    editorialNote: _NS$8(\"editorialNote\"),\r\n    /**\r\n     * A note about the past state/use/meaning of a concept.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    historyNote: _NS$8(\"historyNote\"),\r\n    /**\r\n     * Links a concept to a concept related by meaning.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    semanticRelation: _NS$8(\"semanticRelation\"),\r\n    /**\r\n     * Broader concepts are typically rendered as parents in a concept hierarchy (tree).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    broader: _NS$8(\"broader\"),\r\n    /**\r\n     * skos:broaderTransitive is a transitive superproperty of skos:broader.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    broaderTransitive: _NS$8(\"broaderTransitive\"),\r\n    /**\r\n     * Narrower concepts are typically rendered as children in a concept hierarchy (tree).\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    narrower: _NS$8(\"narrower\"),\r\n    /**\r\n     * skos:narrowerTransitive is a transitive superproperty of skos:narrower.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    narrowerTransitive: _NS$8(\"narrowerTransitive\"),\r\n    /**\r\n     * skos:related is disjoint with skos:broaderTransitive\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    related: _NS$8(\"related\"),\r\n    /**\r\n     * Relates a collection to one of its members.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    member: _NS$8(\"member\"),\r\n    /**\r\n     * For any resource, every item in the list given as the value of the\r\n        skos:memberList property is also a value of the skos:member property.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    memberList: _NS$8(\"memberList\"),\r\n    /**\r\n     * These concept mapping relations mirror semantic relations, and the data model defined below is similar (with the exception of skos:exactMatch) to the data model defined for semantic relations. A distinct vocabulary is provided for concept mapping relations, to provide a convenient way to differentiate links within a concept scheme from links between concept schemes. However, this pattern of usage is not a formal requirement of the SKOS data model, and relies on informal definitions of best practice.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    mappingRelation: _NS$8(\"mappingRelation\"),\r\n    /**\r\n     * skos:broadMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    broadMatch: _NS$8(\"broadMatch\"),\r\n    /**\r\n     * skos:narrowMatch is used to state a hierarchical mapping link between two conceptual resources in different concept schemes.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    narrowMatch: _NS$8(\"narrowMatch\"),\r\n    /**\r\n     * skos:relatedMatch is used to state an associative mapping link between two conceptual resources in different concept schemes.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    relatedMatch: _NS$8(\"relatedMatch\"),\r\n    /**\r\n     * skos:exactMatch is disjoint with each of the properties skos:broadMatch and skos:relatedMatch.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    exactMatch: _NS$8(\"exactMatch\"),\r\n    /**\r\n     * skos:closeMatch is used to link two concepts that are sufficiently similar that they can be used interchangeably in some information retrieval applications. In order to avoid the possibility of \"compound errors\" when combining mappings across more than two concept schemes, skos:closeMatch is not declared to be a transitive property.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2004/02/skos/core\r\n     */\r\n    closeMatch: _NS$8(\"closeMatch\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * An RDF vocabulary extending SKOS and allowing the description and linking of lexical entities.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$7 = \"http://www.w3.org/2008/05/skos-xl#\";\r\nfunction _NS$7(localName) {\r\n    return (_NAMESPACE$7 + localName);\r\n}\r\n/**\r\n * An RDF vocabulary extending SKOS and allowing the description and linking of lexical entities.\r\n */\r\nvar SKOS_XL = {\r\n    PREFIX: \"skos-xl\",\r\n    NAMESPACE: _NAMESPACE$7,\r\n    PREFIX_AND_NAMESPACE: { \"skos-xl\": \"http://www.w3.org/2008/05/skos-xl#\" },\r\n    NS: _NS$7,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A special class of lexical entities.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2008/05/skos-xl\r\n     */\r\n    Label: _NS$7(\"Label\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * If two instances of the class skosxl:Label have the same literal form, they are not necessarily the same resource.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2008/05/skos-xl\r\n     */\r\n    literalForm: _NS$7(\"literalForm\"),\r\n    /**\r\n     * If C skosxl:prefLabel L and L skosxl:literalForm V, then X skos:prefLabel V.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/2004/02/skos/core#prefLabel\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2008/05/skos-xl\r\n     */\r\n    prefLabel: _NS$7(\"prefLabel\"),\r\n    /**\r\n     * If C skosxl:altLabel L and L skosxl:literalForm V, then X skos:altLabel V.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/2004/02/skos/core#altLabel\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2008/05/skos-xl\r\n     */\r\n    altLabel: _NS$7(\"altLabel\"),\r\n    /**\r\n     * If C skosxl:hiddenLabel L and L skosxl:literalForm V, then C skos:hiddenLabel V.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/2004/02/skos/core#hiddenLabel\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2008/05/skos-xl\r\n     */\r\n    hiddenLabel: _NS$7(\"hiddenLabel\"),\r\n    /**\r\n     * The property skosxl:labelRelation is used for representing binary ('direct') relations between instances of the class skosxl:Label.\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2008/05/skos-xl\r\n     */\r\n    labelRelation: _NS$7(\"labelRelation\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * [Generator provided] - UI Ontology\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$6 = \"http://www.w3.org/ns/ui#\";\r\nfunction _NS$6(localName) {\r\n    return (_NAMESPACE$6 + localName);\r\n}\r\n/**\r\n * [Generator provided] - UI Ontology\r\n */\r\nvar UI = {\r\n    PREFIX: \"ui\",\r\n    NAMESPACE: _NAMESPACE$6,\r\n    PREFIX_AND_NAMESPACE: { \"ui\": \"http://www.w3.org/ns/ui#\" },\r\n    NS: _NS$6,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    BooleanField: _NS$6(\"BooleanField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    NumericField: _NS$6(\"NumericField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    ValueField: _NS$6(\"ValueField\"),\r\n    /**\r\n     * A form can be any type of single field, or typically a Group of several fields,\r\n      including interspersed headings and comments.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [NoLocale].\r\n     */\r\n    Form: _NS$6(\"Form\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Single: _NS$6(\"Single\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Group: _NS$6(\"Group\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Choice: _NS$6(\"Choice\"),\r\n    /**\r\n     * A classifier allows the user to select the type of an object.\r\n      The possible types must be subclasses of some overall class, the \"category\".\r\n      (Ideally, the superclass is also set up as the disjoint union of the subclasses,\r\n      if they are disjoint.)\r\n  \n      The form normally stores the resulting classes using an r:type triple,\r\n      but a different predicate can be used if required, so the classifier field\r\n      needs is 'property' defined too.\r\n  \n      If the subclass selected itself is has subclasses defined, the user can\r\n      recursively select from them in turn, as many levels as needed.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Classifier: _NS$6(\"Classifier\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    ColorField: _NS$6(\"ColorField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    TextField: _NS$6(\"TextField\"),\r\n    /**\r\n     * Comment\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    Comment: _NS$6(\"Comment\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    DateField: _NS$6(\"DateField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    DateTimeField: _NS$6(\"DateTimeField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    DecimalField: _NS$6(\"DecimalField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EmailField: _NS$6(\"EmailField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Heading: _NS$6(\"Heading\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    SingleLineTextField: _NS$6(\"SingleLineTextField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Options: _NS$6(\"Options\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    IntegerField: _NS$6(\"IntegerField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    FloatField: _NS$6(\"FloatField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    PhoneField: _NS$6(\"PhoneField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Multiple: _NS$6(\"Multiple\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    MultiLineTextField: _NS$6(\"MultiLineTextField\"),\r\n    /**\r\n     * A NamedNodeURIField is like a SingleLineTextField, except\r\n          that the value it generates is not a literal string but an RDF node with the given URI.\r\n          Normally users should not see URIs. When they do, this a way to do it.\r\n          \n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    NamedNodeURIField: _NS$6(\"NamedNodeURIField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    TriStateField: _NS$6(\"TriStateField\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * parts\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    parts: _NS$6(\"parts\"),\r\n    /**\r\n     * A form which may be used to collect information about a\r\n      hitherto locally undocumented instance instance of this class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    creationForm: _NS$6(\"creationForm\"),\r\n    /**\r\n     * from\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    from: _NS$6(\"from\"),\r\n    /**\r\n     * Label\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    label: _NS$6(\"label\"),\r\n    /**\r\n     * Many fields prompt for information about a given property of the subject.\r\n      When field is filled in, this gives which property is written into the data.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    property: _NS$6(\"property\"),\r\n    /**\r\n     * The value for which this case is selected.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    for: _NS$6(\"for\"),\r\n    /**\r\n     * A string for the UI to use if the user needs a longer\r\n          prompts than just a field name, the s:label.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    prompt: _NS$6(\"prompt\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    use: _NS$6(\"use\"),\r\n    /**\r\n     * Must be a valid CSS color string such as one could put in\r\n              an HTML style attribute.  This must be in the #xxxxxx form,\r\n              (with 6 digits of lowercase hex) so that it\r\n              can work eg with Graphviz.\r\n              As this is just an encoded array of RGB values,\r\n              you can do math with these, such as blending, complement, etc.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Color: _NS$6(\"Color\"),\r\n    /**\r\n     * Contents\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    contents: _NS$6(\"contents\"),\r\n    /**\r\n     * size of field\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    size: _NS$6(\"size\"),\r\n    /**\r\n     * Must be a valid CSS style string such as one could put in\r\n          an HTML style attribute.  Depending on the user interface system, this can\r\n          by given to individuals, classes or properties. It is up to a user interface\r\n          which wants to draw on them to pick how it uses styles from which parts\r\n          of the data it has.  For example, the style of a class may be picked\r\n          to distinguish information about things in that class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    style: _NS$6(\"style\"),\r\n    /**\r\n     * The superclass subclasses of which will be selected.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    category: _NS$6(\"category\"),\r\n    /**\r\n     * Many fields prompt for information about a given property of the subject\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    dependingOn: _NS$6(\"dependingOn\"),\r\n    /**\r\n     * Max length\r\n     *\r\n     * This term has [3] labels (in languages [NoLocale, en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    maxLength: _NS$6(\"maxLength\"),\r\n    /**\r\n     * part\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    part: _NS$6(\"part\"),\r\n    /**\r\n     * Time field\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    TimeField: _NS$6(\"TimeField\"),\r\n    /**\r\n     * A form which may be used to add more infromation to an\r\n  instance of this class which we know something about.  Anything from\r\n  adding just add one more fact, to adding a whole lot of information about a specific\r\n  facet of the thing.\r\n  \n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    annotationForm: _NS$6(\"annotationForm\"),\r\n    /**\r\n     * background color\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    backgroundColor: _NS$6(\"backgroundColor\"),\r\n    /**\r\n     * URI or base64 representation of an image\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    backgroundImage: _NS$6(\"backgroundImage\"),\r\n    /**\r\n     * Base\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    base: _NS$6(\"base\"),\r\n    /**\r\n     * color\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    color: _NS$6(\"color\"),\r\n    /**\r\n     * Default error\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    defaultError: _NS$6(\"defaultError\"),\r\n    /**\r\n     * A really simple way of enabling user interfaces to\r\n              create new information about a class of things is to make a define of properties\r\n              to be specified when a information about a new item\r\n              (\"New item\" here means an item which the system\r\n              does not have prvious information about yet,\r\n              not an items which has just been created,\r\n              like new friend as opposed to new baby)\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    initialProperties: _NS$6(\"initialProperties\"),\r\n    /**\r\n     * Maximum date offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    maxDateOffset: _NS$6(\"maxDateOffset\"),\r\n    /**\r\n     * Maximum datetime offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    maxDatetimeOffset: _NS$6(\"maxDatetimeOffset\"),\r\n    /**\r\n     * max\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    maxValue: _NS$6(\"maxValue\"),\r\n    /**\r\n     * Minimum date offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    minDateOffset: _NS$6(\"minDateOffset\"),\r\n    /**\r\n     * Minimum datetime offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    minDatetimeOffset: _NS$6(\"minDatetimeOffset\"),\r\n    /**\r\n     * Min length\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    minLength: _NS$6(\"minLength\"),\r\n    /**\r\n     * min\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    minValue: _NS$6(\"minValue\"),\r\n    /**\r\n     * Name\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    name: _NS$6(\"name\"),\r\n    /**\r\n     * Old value\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    oldValue: _NS$6(\"oldValue\"),\r\n    /**\r\n     * Parent property\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    parentProperty: _NS$6(\"parentProperty\"),\r\n    /**\r\n     * Parts clone\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    partsClone: _NS$6(\"partsClone\"),\r\n    /**\r\n     * Pattern\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    pattern: _NS$6(\"pattern\"),\r\n    /**\r\n     * Reference\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    reference: _NS$6(\"reference\"),\r\n    /**\r\n     * Required\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    required: _NS$6(\"required\"),\r\n    /**\r\n     * Required error\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    requiredError: _NS$6(\"requiredError\"),\r\n    /**\r\n     * The sequence in which this item is arranged with repect to other parts.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    seqeunce: _NS$6(\"seqeunce\"),\r\n    /**\r\n     * A property which typically is used to sort\r\n          members of a given class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    sortBy: _NS$6(\"sortBy\"),\r\n    /**\r\n     * When individuals or classes must be sorted, then\r\n          if they are given different values of sortPriority a user agent can\r\n          use this as a hint to how to present information.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    sortPriority: _NS$6(\"sortPriority\"),\r\n    /**\r\n     * This  is a crude way of specifying a table-based\r\n              view for objects of this class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tableProperties: _NS$6(\"tableProperties\"),\r\n    /**\r\n     * Valid\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    valid: _NS$6(\"valid\"),\r\n    /**\r\n     * Validation error\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    validationError: _NS$6(\"validationError\"),\r\n    /**\r\n     * Value\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    value: _NS$6(\"value\"),\r\n    /**\r\n     * Values\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/ns/ui\r\n     */\r\n    values: _NS$6(\"values\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * Extension to UI terms providing multilingual alternative names and translations for comments (e.g., for use directly as labels or tool-tips in user interfaces or error messages)\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$5 = \"http://www.w3.org/ns/ui#\";\r\nfunction _NS$5(localName) {\r\n    return (_NAMESPACE$5 + localName);\r\n}\r\n/**\r\n * Extension to UI terms providing multilingual alternative names and translations for comments (e.g., for use directly as labels or tool-tips in user interfaces or error messages)\r\n */\r\nvar UI_INRUPT = {\r\n    PREFIX: \"ui-inrupt\",\r\n    NAMESPACE: _NAMESPACE$5,\r\n    PREFIX_AND_NAMESPACE: { \"ui-inrupt\": \"http://www.w3.org/ns/ui#\" },\r\n    NS: _NS$5,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    BooleanField: _NS$5(\"BooleanField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    NumericField: _NS$5(\"NumericField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    ValueField: _NS$5(\"ValueField\"),\r\n    /**\r\n     * A form can be any type of single field, or typically a Group of several fields,\r\n      including interspersed headings and comments.\r\n     *\r\n     * The term has a description only in English, but has a mismatch between its labels and comments, with [0] labels, but [1] comment in the language [NoLocale].\r\n     */\r\n    Form: _NS$5(\"Form\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Single: _NS$5(\"Single\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    TextField: _NS$5(\"TextField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    TriStateField: _NS$5(\"TriStateField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Group: _NS$5(\"Group\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Choice: _NS$5(\"Choice\"),\r\n    /**\r\n     * A classifier allows the user to select the type of an object.\r\n      The possible types must be subclasses of some overall class, the \"category\".\r\n      (Ideally, the superclass is also set up as the disjoint union of the subclasses,\r\n      if they are disjoint.)\r\n  \n      The form normally stores the resulting classes using an r:type triple,\r\n      but a different predicate can be used if required, so the classifier field\r\n      needs is 'property' defined too.\r\n  \n      If the subclass selected itself is has subclasses defined, the user can\r\n      recursively select from them in turn, as many levels as needed.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Classifier: _NS$5(\"Classifier\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    ColorField: _NS$5(\"ColorField\"),\r\n    /**\r\n     * Comment\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    Comment: _NS$5(\"Comment\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    DateField: _NS$5(\"DateField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    DateTimeField: _NS$5(\"DateTimeField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    DecimalField: _NS$5(\"DecimalField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    EmailField: _NS$5(\"EmailField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Heading: _NS$5(\"Heading\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    SingleLineTextField: _NS$5(\"SingleLineTextField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Options: _NS$5(\"Options\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    IntegerField: _NS$5(\"IntegerField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    FloatField: _NS$5(\"FloatField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    PhoneField: _NS$5(\"PhoneField\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    Multiple: _NS$5(\"Multiple\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    MultiLineTextField: _NS$5(\"MultiLineTextField\"),\r\n    /**\r\n     * A NamedNodeURIField is like a SingleLineTextField, except\r\n          that the value it generates is not a literal string but an RDF node with the given URI.\r\n          Normally users should not see URIs. When they do, this a way to do it.\r\n          \n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    NamedNodeURIField: _NS$5(\"NamedNodeURIField\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * A form which may be used to collect information about a\r\n      hitherto locally undocumented instance instance of this class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    creationForm: _NS$5(\"creationForm\"),\r\n    /**\r\n     * parts\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    parts: _NS$5(\"parts\"),\r\n    /**\r\n     * from\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    from: _NS$5(\"from\"),\r\n    /**\r\n     * Label\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    label: _NS$5(\"label\"),\r\n    /**\r\n     * Many fields prompt for information about a given property of the subject.\r\n      When field is filled in, this gives which property is written into the data.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    property: _NS$5(\"property\"),\r\n    /**\r\n     * The value for which this case is selected.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    for: _NS$5(\"for\"),\r\n    /**\r\n     * A string for the UI to use if the user needs a longer\r\n          prompts than just a field name, the s:label.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    prompt: _NS$5(\"prompt\"),\r\n    /**\r\n     *\r\n     *\r\n     * This term has no descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:label&#x27;, &#x27;rdfs:comment&#x27;, or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    use: _NS$5(\"use\"),\r\n    /**\r\n     * The superclass subclasses of which will be selected.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    category: _NS$5(\"category\"),\r\n    /**\r\n     * Must be a valid CSS color string such as one could put in\r\n              an HTML style attribute.  This must be in the #xxxxxx form,\r\n              (with 6 digits of lowercase hex) so that it\r\n              can work eg with Graphviz.\r\n              As this is just an encoded array of RGB values,\r\n              you can do math with these, such as blending, complement, etc.\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    Color: _NS$5(\"Color\"),\r\n    /**\r\n     * Contents\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    contents: _NS$5(\"contents\"),\r\n    /**\r\n     * size of field\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    size: _NS$5(\"size\"),\r\n    /**\r\n     * Must be a valid CSS style string such as one could put in\r\n          an HTML style attribute.  Depending on the user interface system, this can\r\n          by given to individuals, classes or properties. It is up to a user interface\r\n          which wants to draw on them to pick how it uses styles from which parts\r\n          of the data it has.  For example, the style of a class may be picked\r\n          to distinguish information about things in that class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    style: _NS$5(\"style\"),\r\n    /**\r\n     * Many fields prompt for information about a given property of the subject\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    dependingOn: _NS$5(\"dependingOn\"),\r\n    /**\r\n     * part\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    part: _NS$5(\"part\"),\r\n    /**\r\n     * Max length\r\n     *\r\n     * This term has [3] labels (in languages [NoLocale, en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    maxLength: _NS$5(\"maxLength\"),\r\n    /**\r\n     * Time field\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    TimeField: _NS$5(\"TimeField\"),\r\n    /**\r\n     * A form which may be used to add more infromation to an\r\n  instance of this class which we know something about.  Anything from\r\n  adding just add one more fact, to adding a whole lot of information about a specific\r\n  facet of the thing.\r\n  \n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    annotationForm: _NS$5(\"annotationForm\"),\r\n    /**\r\n     * background color\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    backgroundColor: _NS$5(\"backgroundColor\"),\r\n    /**\r\n     * URI or base64 representation of an image\r\n     *\r\n     * The term has a description only in English, with [1] label in the language [en], but [1] comment in the language [NoLocale] (so the difference is only between English and NoLocale, which we consider the same).\r\n     */\r\n    backgroundImage: _NS$5(\"backgroundImage\"),\r\n    /**\r\n     * Base\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    base: _NS$5(\"base\"),\r\n    /**\r\n     * color\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    color: _NS$5(\"color\"),\r\n    /**\r\n     * Default error\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    defaultError: _NS$5(\"defaultError\"),\r\n    /**\r\n     * A really simple way of enabling user interfaces to\r\n              create new information about a class of things is to make a define of properties\r\n              to be specified when a information about a new item\r\n              (\"New item\" here means an item which the system\r\n              does not have prvious information about yet,\r\n              not an items which has just been created,\r\n              like new friend as opposed to new baby)\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    initialProperties: _NS$5(\"initialProperties\"),\r\n    /**\r\n     * Maximum date offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    maxDateOffset: _NS$5(\"maxDateOffset\"),\r\n    /**\r\n     * Maximum datetime offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    maxDatetimeOffset: _NS$5(\"maxDatetimeOffset\"),\r\n    /**\r\n     * max\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    maxValue: _NS$5(\"maxValue\"),\r\n    /**\r\n     * Minimum date offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    minDateOffset: _NS$5(\"minDateOffset\"),\r\n    /**\r\n     * Minimum datetime offset\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    minDatetimeOffset: _NS$5(\"minDatetimeOffset\"),\r\n    /**\r\n     * Min length\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    minLength: _NS$5(\"minLength\"),\r\n    /**\r\n     * min\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    minValue: _NS$5(\"minValue\"),\r\n    /**\r\n     * Name\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    name: _NS$5(\"name\"),\r\n    /**\r\n     * Old value\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    oldValue: _NS$5(\"oldValue\"),\r\n    /**\r\n     * Parent property\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    parentProperty: _NS$5(\"parentProperty\"),\r\n    /**\r\n     * Parts clone\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    partsClone: _NS$5(\"partsClone\"),\r\n    /**\r\n     * Pattern\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    pattern: _NS$5(\"pattern\"),\r\n    /**\r\n     * Reference\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    reference: _NS$5(\"reference\"),\r\n    /**\r\n     * Required\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    required: _NS$5(\"required\"),\r\n    /**\r\n     * Required error\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    requiredError: _NS$5(\"requiredError\"),\r\n    /**\r\n     * The sequence in which this item is arranged with repect to other parts.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    seqeunce: _NS$5(\"seqeunce\"),\r\n    /**\r\n     * A property which typically is used to sort\r\n          members of a given class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    sortBy: _NS$5(\"sortBy\"),\r\n    /**\r\n     * When individuals or classes must be sorted, then\r\n          if they are given different values of sortPriority a user agent can\r\n          use this as a hint to how to present information.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    sortPriority: _NS$5(\"sortPriority\"),\r\n    /**\r\n     * This  is a crude way of specifying a table-based\r\n              view for objects of this class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    tableProperties: _NS$5(\"tableProperties\"),\r\n    /**\r\n     * Valid\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    valid: _NS$5(\"valid\"),\r\n    /**\r\n     * Validation error\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    validationError: _NS$5(\"validationError\"),\r\n    /**\r\n     * Value\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    value: _NS$5(\"value\"),\r\n    /**\r\n     * Values\r\n     *\r\n     * This term has [2] labels (in languages [en, es]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: https://w3id.org/inrupt/vocab/extension/ui#\r\n     */\r\n    values: _NS$5(\"values\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * A vocabulary for annotating vocabulary descriptions (VANN).\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$4 = \"http://purl.org/vocab/vann/\";\r\nfunction _NS$4(localName) {\r\n    return (_NAMESPACE$4 + localName);\r\n}\r\n/**\r\n * A vocabulary for annotating vocabulary descriptions (VANN).\r\n */\r\nvar VANN = {\r\n    PREFIX: \"vann\",\r\n    NAMESPACE: _NAMESPACE$4,\r\n    PREFIX_AND_NAMESPACE: { \"vann\": \"http://purl.org/vocab/vann/\" },\r\n    NS: _NS$4,\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * The preferred namespace prefix to ue when using terms from this vocabulary in an XML document.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    preferredNamespacePrefix: _NS$4(\"preferredNamespacePrefix\"),\r\n    /**\r\n     * The preferred namespace URI to use when using terms from this vocabulary in an XML document.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    preferredNamespaceUri: _NS$4(\"preferredNamespaceUri\"),\r\n    /**\r\n     * A reference to a resource that describes changes between this version of a vocabulary and the previous.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    changes: _NS$4(\"changes\"),\r\n    /**\r\n     * A reference to a resource that provides an example of how this resource can be used.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    example: _NS$4(\"example\"),\r\n    /**\r\n     * A group of related terms in a vocabulary.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    termGroup: _NS$4(\"termGroup\"),\r\n    /**\r\n     * A reference to a resource that provides information on how this resource is to be used.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     */\r\n    usageNote: _NS$4(\"usageNote\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * Ontology for vCard based on RFC6350\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$3 = \"http://www.w3.org/2006/vcard/ns#\";\r\nfunction _NS$3(localName) {\r\n    return (_NAMESPACE$3 + localName);\r\n}\r\n/**\r\n * Ontology for vCard based on RFC6350\r\n */\r\nvar VCARD = {\r\n    PREFIX: \"vcard\",\r\n    NAMESPACE: _NAMESPACE$3,\r\n    PREFIX_AND_NAMESPACE: { \"vcard\": \"http://www.w3.org/2006/vcard/ns#\" },\r\n    NS: _NS$3,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * Acquaintance\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Acquaintance: _NS$3(\"Acquaintance\"),\r\n    /**\r\n     * Used for relation type codes. The URI of the relation type code must be used as the value for the Relation Type.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    RelatedType: _NS$3(\"RelatedType\"),\r\n    /**\r\n     * Agent\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Agent: _NS$3(\"Agent\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    BBS: _NS$3(\"BBS\"),\r\n    /**\r\n     * Used for telephone type codes. The URI of the telephone type code must be used as the value for the Telephone Type.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    TelephoneType: _NS$3(\"TelephoneType\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Car: _NS$3(\"Car\"),\r\n    /**\r\n     * Also called mobile telephone\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Cell: _NS$3(\"Cell\"),\r\n    /**\r\n     * Child\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Child: _NS$3(\"Child\"),\r\n    /**\r\n     * Colleague\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Colleague: _NS$3(\"Colleague\"),\r\n    /**\r\n     * Contact\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Contact: _NS$3(\"Contact\"),\r\n    /**\r\n     * Coresident\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Coresident: _NS$3(\"Coresident\"),\r\n    /**\r\n     * Coworker\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Coworker: _NS$3(\"Coworker\"),\r\n    /**\r\n     * Crush\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Crush: _NS$3(\"Crush\"),\r\n    /**\r\n     * Date\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Date: _NS$3(\"Date\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Dom: _NS$3(\"Dom\"),\r\n    /**\r\n     * Used for type codes. The URI of the type code must be used as the value for Type.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Type: _NS$3(\"Type\"),\r\n    /**\r\n     * Emergency\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Emergency: _NS$3(\"Emergency\"),\r\n    /**\r\n     * Fax\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Fax: _NS$3(\"Fax\"),\r\n    /**\r\n     * Female\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Female: _NS$3(\"Female\"),\r\n    /**\r\n     * Used for gender codes. The URI of the gender code must be used as the value for Gender.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Gender: _NS$3(\"Gender\"),\r\n    /**\r\n     * Friend\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Friend: _NS$3(\"Friend\"),\r\n    /**\r\n     * This implies that the property is related to an individual's personal life\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Home: _NS$3(\"Home\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    ISDN: _NS$3(\"ISDN\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Internet: _NS$3(\"Internet\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Intl: _NS$3(\"Intl\"),\r\n    /**\r\n     * Kin\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Kin: _NS$3(\"Kin\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Label: _NS$3(\"Label\"),\r\n    /**\r\n     * Male\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Male: _NS$3(\"Male\"),\r\n    /**\r\n     * Me\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Me: _NS$3(\"Me\"),\r\n    /**\r\n     * Met\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Met: _NS$3(\"Met\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Modem: _NS$3(\"Modem\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Msg: _NS$3(\"Msg\"),\r\n    /**\r\n     * Muse\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Muse: _NS$3(\"Muse\"),\r\n    /**\r\n     * Neighbor\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Neighbor: _NS$3(\"Neighbor\"),\r\n    /**\r\n     * None\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    None: _NS$3(\"None\"),\r\n    /**\r\n     * Other\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Other: _NS$3(\"Other\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    PCS: _NS$3(\"PCS\"),\r\n    /**\r\n     * Pager\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Pager: _NS$3(\"Pager\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Parcel: _NS$3(\"Parcel\"),\r\n    /**\r\n     * Parent\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Parent: _NS$3(\"Parent\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Postal: _NS$3(\"Postal\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Pref: _NS$3(\"Pref\"),\r\n    /**\r\n     * Sibling\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Sibling: _NS$3(\"Sibling\"),\r\n    /**\r\n     * Spouse\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Spouse: _NS$3(\"Spouse\"),\r\n    /**\r\n     * Sweetheart\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Sweetheart: _NS$3(\"Sweetheart\"),\r\n    /**\r\n     * This class is deprecated. Use the hasTelephone object property.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Tel: _NS$3(\"Tel\"),\r\n    /**\r\n     * Also called sms telephone\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Text: _NS$3(\"Text\"),\r\n    /**\r\n     * Text phone\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    TextPhone: _NS$3(\"TextPhone\"),\r\n    /**\r\n     * Unknown\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Unknown: _NS$3(\"Unknown\"),\r\n    /**\r\n     * Video\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Video: _NS$3(\"Video\"),\r\n    /**\r\n     * Voice\r\n     *\r\n     * This term has a label (in language [en]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Voice: _NS$3(\"Voice\"),\r\n    /**\r\n     * This implies that the property is related to an individual's work place\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Work: _NS$3(\"Work\"),\r\n    /**\r\n     * This class is deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    X400: _NS$3(\"X400\"),\r\n    /**\r\n     * To specify the components of the delivery address for the  object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Address: _NS$3(\"Address\"),\r\n    /**\r\n     * To specify the electronic mail address for communication with the object the vCard represents. Use the hasEmail object property.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Email: _NS$3(\"Email\"),\r\n    /**\r\n     * Object representing a group of persons or entities.  A group object will usually contain hasMember properties to specify the members of the group.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Group: _NS$3(\"Group\"),\r\n    /**\r\n     * The parent class for all objects\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Kind: _NS$3(\"Kind\"),\r\n    /**\r\n     * An object representing a single person or entity\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Individual: _NS$3(\"Individual\"),\r\n    /**\r\n     * An object representing a named geographical place\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Location: _NS$3(\"Location\"),\r\n    /**\r\n     * An object representing an organization.  An organization is a single entity, and might represent a business or government, a department or division within a business or government, a club, an association, or the like.\r\n  \n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Organization: _NS$3(\"Organization\"),\r\n    /**\r\n     * The vCard class is  equivalent to the new Kind class, which is the parent for the four explicit types of vCards (Individual, Organization, Location, Group)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    VCard: _NS$3(\"VCard\"),\r\n    /**\r\n     * To specify the components of the name of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    Name: _NS$3(\"Name\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    adr: _NS$3(\"adr\"),\r\n    /**\r\n     * To specify the components of the delivery address for the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasAddress: _NS$3(\"hasAddress\"),\r\n    /**\r\n     * This object property has been deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    agent: _NS$3(\"agent\"),\r\n    /**\r\n     * The date of marriage, or equivalent, of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    anniversary: _NS$3(\"anniversary\"),\r\n    /**\r\n     * To specify the birth date of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    bday: _NS$3(\"bday\"),\r\n    /**\r\n     * The category information about the object, also known as tags\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    category: _NS$3(\"category\"),\r\n    /**\r\n     * This data property has been deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    class: _NS$3(\"class\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    email: _NS$3(\"email\"),\r\n    /**\r\n     * To specify the electronic mail address for communication with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasEmail: _NS$3(\"hasEmail\"),\r\n    /**\r\n     * This data property has been deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    extended_address: _NS$3(\"extended-address\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    geo: _NS$3(\"geo\"),\r\n    /**\r\n     * To specify information related to the global positioning of the object. May also be used as a property parameter.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasGeo: _NS$3(\"hasGeo\"),\r\n    /**\r\n     * Used to support property parameters for the additional name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasAdditionalName: _NS$3(\"hasAdditionalName\"),\r\n    /**\r\n     * To specify the busy time associated with the object. (Was called FBURL in RFC6350)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasCalendarBusy: _NS$3(\"hasCalendarBusy\"),\r\n    /**\r\n     * To specify the calendar associated with the object. (Was called CALURI in RFC6350)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasCalendarLink: _NS$3(\"hasCalendarLink\"),\r\n    /**\r\n     * To specify the calendar user address to which a scheduling request be sent for the object. (Was called CALADRURI in RFC6350)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasCalendarRequest: _NS$3(\"hasCalendarRequest\"),\r\n    /**\r\n     * Used to support property parameters for the category data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasCategory: _NS$3(\"hasCategory\"),\r\n    /**\r\n     * Used to support property parameters for the country name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasCountryName: _NS$3(\"hasCountryName\"),\r\n    /**\r\n     * Used to support property parameters for the formatted name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasFN: _NS$3(\"hasFN\"),\r\n    /**\r\n     * Used to support property parameters for the family name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasFamilyName: _NS$3(\"hasFamilyName\"),\r\n    /**\r\n     * To specify  the sex or gender identity of the object. URIs are recommended to enable interoperable sex and gender codes to be used.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasGender: _NS$3(\"hasGender\"),\r\n    /**\r\n     * Used to support property parameters for the given name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasGivenName: _NS$3(\"hasGivenName\"),\r\n    /**\r\n     * Used to support property parameters for the honorific prefix data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasHonorificPrefix: _NS$3(\"hasHonorificPrefix\"),\r\n    /**\r\n     * Used to support property parameters for the honorific suffix data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasHonorificSuffix: _NS$3(\"hasHonorificSuffix\"),\r\n    /**\r\n     * To specify the instant messaging and presence protocol communications with the object. (Was called IMPP in RFC6350)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasInstantMessage: _NS$3(\"hasInstantMessage\"),\r\n    /**\r\n     * Used to support property parameters for the language data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasLanguage: _NS$3(\"hasLanguage\"),\r\n    /**\r\n     * Used to support property parameters for the locality data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasLocality: _NS$3(\"hasLocality\"),\r\n    /**\r\n     * Used to support property parameters for the nickname data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * See also:\r\n     *  - http://www.w3.org/2006/vcard/ns#nickname\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasNickname: _NS$3(\"hasNickname\"),\r\n    /**\r\n     * The nick name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    nickname: _NS$3(\"nickname\"),\r\n    /**\r\n     * Used to support property parameters for the note data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasNote: _NS$3(\"hasNote\"),\r\n    /**\r\n     * Used to support property parameters for the organization name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasOrganizationName: _NS$3(\"hasOrganizationName\"),\r\n    /**\r\n     * Used to support property parameters for the organization unit name data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasOrganizationUnit: _NS$3(\"hasOrganizationUnit\"),\r\n    /**\r\n     * Used to support property parameters for the postal code data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasPostalCode: _NS$3(\"hasPostalCode\"),\r\n    /**\r\n     * Used to support property parameters for the region data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasRegion: _NS$3(\"hasRegion\"),\r\n    /**\r\n     * To specify a relationship between another entity and the entity represented by this object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasRelated: _NS$3(\"hasRelated\"),\r\n    /**\r\n     * Used to support property parameters for the role data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasRole: _NS$3(\"hasRole\"),\r\n    /**\r\n     * To identify the source of directory information of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasSource: _NS$3(\"hasSource\"),\r\n    /**\r\n     * Used to support property parameters for the street address data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasStreetAddress: _NS$3(\"hasStreetAddress\"),\r\n    /**\r\n     * Used to support property parameters for the title data property\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasTitle: _NS$3(\"hasTitle\"),\r\n    /**\r\n     * To specify a value that represents a globally unique identifier corresponding to the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasUID: _NS$3(\"hasUID\"),\r\n    /**\r\n     * Used to indicate the resource value of an object property that requires property parameters\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasValue: _NS$3(\"hasValue\"),\r\n    /**\r\n     * This data property has been deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    label: _NS$3(\"label\"),\r\n    /**\r\n     * To specify the language that may be used for contacting the object. May also be used as a property parameter.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    language: _NS$3(\"language\"),\r\n    /**\r\n     * This data property has been deprecated. See hasGeo\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    latitude: _NS$3(\"latitude\"),\r\n    /**\r\n     * This data property has been deprecated. See hasGeo\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    longitude: _NS$3(\"longitude\"),\r\n    /**\r\n     * This data property has been deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    mailer: _NS$3(\"mailer\"),\r\n    /**\r\n     * A note associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    note: _NS$3(\"note\"),\r\n    /**\r\n     * This object property has been mapped. Use the organization-name data property.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    org: _NS$3(\"org\"),\r\n    /**\r\n     * To specify the organizational name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    organization_name: _NS$3(\"organization-name\"),\r\n    /**\r\n     * To specify the organizational unit name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    organization_unit: _NS$3(\"organization-unit\"),\r\n    /**\r\n     * This data property has been deprecated\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    post_office_box: _NS$3(\"post-office-box\"),\r\n    /**\r\n     * To specify the identifier for the product that created the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    prodid: _NS$3(\"prodid\"),\r\n    /**\r\n     * To specify revision information about the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    rev: _NS$3(\"rev\"),\r\n    /**\r\n     * To specify the function or part played in a particular situation by the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    role: _NS$3(\"role\"),\r\n    /**\r\n     * To specify the string to be used for national-language-specific sorting. Used as a property parameter only.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    sort_string: _NS$3(\"sort-string\"),\r\n    /**\r\n     * To specify the position or job of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    title: _NS$3(\"title\"),\r\n    /**\r\n     * To indicate time zone information that is specific to the object. May also be used as a property parameter.\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    tz: _NS$3(\"tz\"),\r\n    /**\r\n     * Used to indicate the literal value of a data property that requires property parameters\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    value: _NS$3(\"value\"),\r\n    /**\r\n     * The country name associated with the address of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    country_name: _NS$3(\"country-name\"),\r\n    /**\r\n     * The locality (e.g. city or town) associated with the address of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    locality: _NS$3(\"locality\"),\r\n    /**\r\n     * The postal code associated with the address of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    postal_code: _NS$3(\"postal-code\"),\r\n    /**\r\n     * The region (e.g. state or province) associated with the address of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    region: _NS$3(\"region\"),\r\n    /**\r\n     * The street address associated with the address of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    street_address: _NS$3(\"street-address\"),\r\n    /**\r\n     * The formatted text corresponding to the name of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    fn: _NS$3(\"fn\"),\r\n    /**\r\n     * To include a member in the group this object represents. (This property can only be used by Group individuals)\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasMember: _NS$3(\"hasMember\"),\r\n    /**\r\n     * The additional name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    additional_name: _NS$3(\"additional-name\"),\r\n    /**\r\n     * The family name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    family_name: _NS$3(\"family-name\"),\r\n    /**\r\n     * The given name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    given_name: _NS$3(\"given-name\"),\r\n    /**\r\n     * The honorific prefix of the name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    honorific_prefix: _NS$3(\"honorific-prefix\"),\r\n    /**\r\n     * The honorific suffix of the name associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    honorific_suffix: _NS$3(\"honorific-suffix\"),\r\n    /**\r\n     * To specify a public key or authentication certificate associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasKey: _NS$3(\"hasKey\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    key: _NS$3(\"key\"),\r\n    /**\r\n     * To specify a graphic image of a logo associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasLogo: _NS$3(\"hasLogo\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    logo: _NS$3(\"logo\"),\r\n    /**\r\n     * To specify the components of the name of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasName: _NS$3(\"hasName\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    n: _NS$3(\"n\"),\r\n    /**\r\n     * To specify an image or photograph information that annotates some aspect of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasPhoto: _NS$3(\"hasPhoto\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    photo: _NS$3(\"photo\"),\r\n    /**\r\n     * To specify a digital sound content information that annotates some aspect of the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasSound: _NS$3(\"hasSound\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    sound: _NS$3(\"sound\"),\r\n    /**\r\n     * To specify the telephone number for telephony communication with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasTelephone: _NS$3(\"hasTelephone\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    tel: _NS$3(\"tel\"),\r\n    /**\r\n     * To specify a uniform resource locator associated with the object\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    hasURL: _NS$3(\"hasURL\"),\r\n    /**\r\n     * This object property has been mapped\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2006/vcard/ns\r\n     */\r\n    url: _NS$3(\"url\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * The Vocabulary of Interlinked Datasets (VoID) is an RDF Schema vocabulary for expressing metadata about RDF datasets. It is intended as a bridge between the publishers and users of RDF data, with applications ranging from data discovery to cataloging and archiving of datasets. This document provides a formal definition of the new RDF classes and properties introduced for VoID. It is a companion to the main specification document for VoID, <em><a href=\"http://www.w3.org/TR/void/\">Describing Linked Datasets with the VoID Vocabulary</a></em>.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$2 = \"http://rdfs.org/ns/void#\";\r\nfunction _NS$2(localName) {\r\n    return (_NAMESPACE$2 + localName);\r\n}\r\n/**\r\n * The Vocabulary of Interlinked Datasets (VoID) is an RDF Schema vocabulary for expressing metadata about RDF datasets. It is intended as a bridge between the publishers and users of RDF data, with applications ranging from data discovery to cataloging and archiving of datasets. This document provides a formal definition of the new RDF classes and properties introduced for VoID. It is a companion to the main specification document for VoID, <em><a href=\"http://www.w3.org/TR/void/\">Describing Linked Datasets with the VoID Vocabulary</a></em>.\r\n */\r\nvar VOID = {\r\n    PREFIX: \"void\",\r\n    NAMESPACE: _NAMESPACE$2,\r\n    PREFIX_AND_NAMESPACE: { \"void\": \"http://rdfs.org/ns/void#\" },\r\n    NS: _NS$2,\r\n    // *****************\r\n    // All the Classes.\r\n    // *****************\r\n    /**\r\n     * A set of RDF triples that are published, maintained or aggregated by a single provider.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Dataset: _NS$2(\"Dataset\"),\r\n    /**\r\n     * A collection of RDF links between two void:Datasets.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    Linkset: _NS$2(\"Linkset\"),\r\n    /**\r\n     * A technical feature of a void:Dataset, such as a supported RDF serialization format.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    TechnicalFeature: _NS$2(\"TechnicalFeature\"),\r\n    /**\r\n     * A web resource whose foaf:primaryTopic or foaf:topics include void:Datasets.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    DatasetDescription: _NS$2(\"DatasetDescription\"),\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * feature\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    feature: _NS$2(\"feature\"),\r\n    /**\r\n     * has subset\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    subset: _NS$2(\"subset\"),\r\n    /**\r\n     * One of the two datasets linked by the Linkset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    target: _NS$2(\"target\"),\r\n    /**\r\n     * has a SPARQL endpoint at\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    sparqlEndpoint: _NS$2(\"sparqlEndpoint\"),\r\n    /**\r\n     * a link predicate\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    linkPredicate: _NS$2(\"linkPredicate\"),\r\n    /**\r\n     * example resource of dataset\r\n     *\r\n     * This term has a label (in language [NoLocale]), but no long-form descriptions at all (i.e., the vocabulary doesn&#x27;t provide any &#x27;rdfs:comment&#x27; or &#x27;dcterms:description&#x27; meta-data).\r\n     */\r\n    exampleResource: _NS$2(\"exampleResource\"),\r\n    /**\r\n     * A vocabulary that is used in the dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    vocabulary: _NS$2(\"vocabulary\"),\r\n    /**\r\n     * The dataset describing the subjects of triples contained in the Linkset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    subjectsTarget: _NS$2(\"subjectsTarget\"),\r\n    /**\r\n     * The dataset describing the objects of the triples contained in the Linkset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    objectsTarget: _NS$2(\"objectsTarget\"),\r\n    /**\r\n     * An RDF dump, partial or complete, of a void:Dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    dataDump: _NS$2(\"dataDump\"),\r\n    /**\r\n     * Defines a simple URI look-up protocol for accessing a dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    uriLookupEndpoint: _NS$2(\"uriLookupEndpoint\"),\r\n    /**\r\n     * Defines a regular expression pattern matching URIs in the dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    uriRegexPattern: _NS$2(\"uriRegexPattern\"),\r\n    /**\r\n     * The rdfs:Class that is the rdf:type of all entities in a class-based partition.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    class: _NS$2(\"class\"),\r\n    /**\r\n     * The total number of distinct classes in a void:Dataset. In other words, the number of distinct resources occuring as objects of rdf:type triples in the dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    classes: _NS$2(\"classes\"),\r\n    /**\r\n     * A subset of a void:Dataset that contains only the entities of a certain rdfs:Class.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    classPartition: _NS$2(\"classPartition\"),\r\n    /**\r\n     * The total number of distinct objects in a void:Dataset. In other words, the number of distinct resources that occur in the object position of triples in the dataset. Literals are included in this count.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    distinctObjects: _NS$2(\"distinctObjects\"),\r\n    /**\r\n     * The total number of distinct subjects in a void:Dataset. In other words, the number of distinct resources that occur in the subject position of triples in the dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    distinctSubjects: _NS$2(\"distinctSubjects\"),\r\n    /**\r\n     * The total number of documents, for datasets that are published as a set of individual documents, such as RDF/XML documents or RDFa-annotated web pages. Non-RDF documents, such as web pages in HTML or images, are usually not included in this count. This property is intended for datasets where the total number of triples or entities is hard to determine. void:triples or void:entities should be preferred where practical.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    documents: _NS$2(\"documents\"),\r\n    /**\r\n     * The total number of entities that are described in a void:Dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    entities: _NS$2(\"entities\"),\r\n    /**\r\n     * Points to the void:Dataset that a document is a part of.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    inDataset: _NS$2(\"inDataset\"),\r\n    /**\r\n     * An OpenSearch description document for a free-text search service over a void:Dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    openSearchDescription: _NS$2(\"openSearchDescription\"),\r\n    /**\r\n     * The total number of distinct properties in a void:Dataset. In other words, the number of distinct resources that occur in the predicate position of triples in the dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    properties: _NS$2(\"properties\"),\r\n    /**\r\n     * The rdf:Property that is the predicate of all triples in a property-based partition.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    property: _NS$2(\"property\"),\r\n    /**\r\n     * A subset of a void:Dataset that contains only the triples of a certain rdf:Property.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    propertyPartition: _NS$2(\"propertyPartition\"),\r\n    /**\r\n     * A top concept or entry point for a void:Dataset that is structured in a tree-like fashion. All resources in a dataset can be reached by following links from its root resources in a small number of steps.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    rootResource: _NS$2(\"rootResource\"),\r\n    /**\r\n     * The total number of triples contained in a void:Dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    triples: _NS$2(\"triples\"),\r\n    /**\r\n     * A URI that is a common string prefix of all the entity URIs in a void:Dataset.\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     */\r\n    uriSpace: _NS$2(\"uriSpace\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * This vocabulary was created in the FOAF project, based on experience with FOAF, Dublin Core and other early RDF vocabularies. Deployment experience shows that changing namespace URIs is expensive and unrewarding, so this vocabulary provides terms to support in-place evolution of structured data vocabularies. By indicating status at the level of terms rather than vocabularies, dictionary-style, fine grained improvements become easier. Different organizations and parties can agree or disagree on the status of a vocabulary term; however the status published alongside the term may deserve special attention. Future work could include patterns for citing announcements and decisions, or using SKOS to decentralise the extension of the basic status levels.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE$1 = \"http://www.w3.org/2003/06/sw-vocab-status/ns#\";\r\nfunction _NS$1(localName) {\r\n    return (_NAMESPACE$1 + localName);\r\n}\r\n/**\r\n * This vocabulary was created in the FOAF project, based on experience with FOAF, Dublin Core and other early RDF vocabularies. Deployment experience shows that changing namespace URIs is expensive and unrewarding, so this vocabulary provides terms to support in-place evolution of structured data vocabularies. By indicating status at the level of terms rather than vocabularies, dictionary-style, fine grained improvements become easier. Different organizations and parties can agree or disagree on the status of a vocabulary term; however the status published alongside the term may deserve special attention. Future work could include patterns for citing announcements and decisions, or using SKOS to decentralise the extension of the basic status levels.\r\n */\r\nvar VS = {\r\n    PREFIX: \"vs\",\r\n    NAMESPACE: _NAMESPACE$1,\r\n    PREFIX_AND_NAMESPACE: { \"vs\": \"http://www.w3.org/2003/06/sw-vocab-status/ns#\" },\r\n    NS: _NS$1,\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * the status of a vocabulary term, expressed as a short symbolic string; known values include 'unstable','testing', 'stable' and 'archaic'\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2003/06/sw-vocab-status/ns#\r\n     */\r\n    term_status: _NS$1(\"term_status\"),\r\n    /**\r\n     * more information about the status etc of a term, typically human oriented\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2003/06/sw-vocab-status/ns#\r\n     */\r\n    moreinfo: _NS$1(\"moreinfo\"),\r\n    /**\r\n     * human-oriented documentation, examples etc for use of this term\r\n     *\r\n     * This term provides descriptions only with no explicit locale.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2003/06/sw-vocab-status/ns#\r\n     */\r\n    userdocs: _NS$1(\"userdocs\"),\r\n};\n\n/**\r\n * MIT License\r\n *\r\n * Copyright 2020 Inrupt Inc.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a copy\r\n * of this software and associated documentation files (the &quot;Software&quot;), to deal in\r\n * the Software without restriction, including without limitation the rights to use,\r\n * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the\r\n * Software, and to permit persons to whom the Software is furnished to do so,\r\n * subject to the following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included in\r\n * all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\r\n * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\r\n * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\r\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\n/**\r\n * Generated by the artifact generator [@inrupt/artifact-generator], version [1.0.4]\r\n * as part of artifact: [vocab-common-rdf], version: [1.0.3]\r\n * on 'Sunday, October 3, 2021 12:33 AM'.\r\n *\r\n * Vocabulary built from vocab list file: [common-rdf/vocab-common-rdf.yml].\r\n *\r\n * A vocabulary for describing XML Schema datatypes.\r\n */\r\n// We prefix our local variables with underscores to (hopefully!) prevent\r\n// potential names clashes with terms from vocabularies.\r\nvar _NAMESPACE = \"http://www.w3.org/2001/XMLSchema#\";\r\nfunction _NS(localName) {\r\n    return (_NAMESPACE + localName);\r\n}\r\n/**\r\n * A vocabulary for describing XML Schema datatypes.\r\n */\r\nvar XSD = {\r\n    PREFIX: \"xsd\",\r\n    NAMESPACE: _NAMESPACE,\r\n    PREFIX_AND_NAMESPACE: { \"xsd\": \"http://www.w3.org/2001/XMLSchema#\" },\r\n    NS: _NS,\r\n    // *******************\r\n    // All the Properties.\r\n    // *******************\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    changes: _NS(\"changes\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    string: _NS(\"string\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    boolean: _NS(\"boolean\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    float: _NS(\"float\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    double: _NS(\"double\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    decimal: _NS(\"decimal\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    dateTime: _NS(\"dateTime\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    duration: _NS(\"duration\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    hexBinary: _NS(\"hexBinary\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    base64Binary: _NS(\"base64Binary\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    anyURI: _NS(\"anyURI\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    ID: _NS(\"ID\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    IDREF: _NS(\"IDREF\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    ENTITY: _NS(\"ENTITY\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    NOTATION: _NS(\"NOTATION\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    normalizedString: _NS(\"normalizedString\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    token: _NS(\"token\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    language: _NS(\"language\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    IDREFS: _NS(\"IDREFS\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    ENTITIES: _NS(\"ENTITIES\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    NMTOKEN: _NS(\"NMTOKEN\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    NMTOKENS: _NS(\"NMTOKENS\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    Name: _NS(\"Name\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    QName: _NS(\"QName\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    NCName: _NS(\"NCName\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    integer: _NS(\"integer\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    nonNegativeInteger: _NS(\"nonNegativeInteger\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    positiveInteger: _NS(\"positiveInteger\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    nonPositiveInteger: _NS(\"nonPositiveInteger\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    negativeInteger: _NS(\"negativeInteger\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    byte: _NS(\"byte\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    int: _NS(\"int\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    long: _NS(\"long\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    short: _NS(\"short\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    unsignedByte: _NS(\"unsignedByte\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    unsignedInt: _NS(\"unsignedInt\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    unsignedLong: _NS(\"unsignedLong\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    unsignedShort: _NS(\"unsignedShort\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    date: _NS(\"date\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    time: _NS(\"time\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    gYearMonth: _NS(\"gYearMonth\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    gYear: _NS(\"gYear\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    gMonthDay: _NS(\"gMonthDay\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    gDay: _NS(\"gDay\"),\r\n    /**\r\n     * .\r\n     *\r\n     * This term provides descriptions only in English.\r\n     *\r\n     * Defined by the vocabulary: http://www.w3.org/2001/XMLSchema#\r\n     */\r\n    gMonth: _NS(\"gMonth\"),\r\n};\n\nexport { ACL, ALTR, AS, BOOKMARK, CRED, DCAT, DCTERMS, DOAP, EARL, FOAF, HTTP, HTTPH_INRUPT, HYDRA, ICAL, JSONLD, LDP, ODRL, OLO, OWL, POSIX, PROV_O, QB, RDF, RDFS, RLOG, SCHEMA_INRUPT, SD, SDMX_DIMENSION, SEC, SHEX, SKOS, SKOS_XL, UI, UI_INRUPT, VANN, VCARD, VOID, VS, XSD };\n","const _NAMESPACE = \"https://standards.iso.org/iso/21598/-1/ed-1/en/Container#\";\nfunction _NS (localName: string): string {\n  return (_NAMESPACE + localName);\n}\n\nconst ICDD_C = {\n  PREFIX: \"container\",\n  NAMESPACE: _NAMESPACE,\n  PREFIX_AND_NAMESPACE: { \"container\": \"https://standards.iso.org/iso/21598/-1/ed-1/en/Container#\" },\n  NS: _NS,\n\n  ContainerDescription: _NS(\"ContainerDescription\"),\n  Document: _NS(\"Document\"),\n\n  containsDocument: _NS(\"containsDocument\"),\n\n  creationDate: _NS(\"creationDate\"),\n  filename: _NS(\"filename\"),\n  format: _NS(\"format\"),\n  modificationDate: _NS(\"modificationDate\")\n}\n\nexport default ICDD_C;","import { AccessService } from \"./access-service\";\nimport { urlJoin } from 'url-join-ts';\nimport { DataService } from \"./data-service\";\nimport { computeChecksumMd5 } from './utils';\n\n// Import from \"@inrupt/solid-client\"\nimport {\n    createSolidDataset,\n    buildThing,\n    getSolidDataset,\n    createThing,\n    setThing,\n    setUrl,\n    addUrl,\n    getThingAll,\n    getUrlAll,\n    setDatetime,\n    saveSolidDatasetAt\n} from \"@inrupt/solid-client\";\n\nimport { RDF, SCHEMA_INRUPT, DCAT } from '@inrupt/vocab-common-rdf';\nimport ICDD_C from './vocab/icdd-c';\n\nexport class ICDDService{\n\n    public fetch;\n    public verbose: boolean = false;\n    public accessService: AccessService;\n    public dataService: DataService;\n\n    constructor(fetch: any, verbose: boolean = false){\n        this.fetch = fetch;\n        this.verbose = verbose;\n        this.accessService = new AccessService(fetch);\n        this.dataService = new DataService(fetch);\n    }\n\n    public async initICDD(rootURL: string, icddName: string, makePublic: boolean = false){\n\n        // Create main folder\n        const baseURL = urlJoin(rootURL, encodeURIComponent(icddName), \"/\");\n    \n        // Might fail if folders already exist\n        this.verbose && console.time(`Created root container for ICDD...`);\n        try{\n          await this.dataService.createContainer(baseURL, makePublic);\n        }catch(err){\n          this.verbose && console.log(`Could not create container ${baseURL}`);\n          throw err;\n        }\n        this.verbose && console.timeEnd(`Created root container for ICDD...`);\n        \n        // Create subfolders\n        this.verbose && console.time(`Created ICDD subfolders...`);\n        let folderURLs = [\"ontology_resources\", \"payload_triples\", \"payload_documents\"].map(f => urlJoin(rootURL, icddName, f, \"/\"));\n    \n        let createFolderPromises: Promise<any>[] = [];\n        folderURLs.forEach(url => {\n          createFolderPromises.push(this.dataService.createContainer(url, makePublic));\n        });\n        this.verbose && console.timeEnd(`Created ICDD subfolders...`);\n    \n        // Might fail if folders already exist\n        try{\n          await Promise.all(createFolderPromises);\n        }catch(err){\n          console.log(`Could not create sub-containers`);\n          throw err;\n        }\n    \n        // Add index.rdf\n        // Might fail if folders already exist\n        this.verbose && console.time(`Created index.rdf...`);\n        try{\n            await this.buildIndex(baseURL, icddName, makePublic);\n        }catch(err){\n            console.log(`Could not create index-file`);\n            throw err;\n        }\n        this.verbose && console.timeEnd(`Created index.rdf...`);\n    \n        return \"DONE\";\n    \n    }\n\n    public async deleteICDD(icddURL: string): Promise<string>{\n        await this.dataService.deleteContainer(icddURL);\n        return \"DONE\";\n    }\n\n    public async addPayloadDocuments(icddRootURL: string, files: File[], makePublic: boolean = false){\n        return this.addFiles(icddRootURL, \"payload_documents\", files, makePublic);\n    }\n\n    public async addPayloadTriples(icddRootURL: string, files: File[], makePublic: boolean = false){\n        return this.addFiles(icddRootURL, \"payload_triples\", files, makePublic);\n    }\n\n    public async addOntologyResources(icddRootURL: string, files: File[], makePublic: boolean = false){\n        return this.addFiles(icddRootURL, \"ontology_resources\", files, makePublic);\n    }\n\n    private async addFiles(icddRootURL: string, subfolder: string, files: File[], makePublic: boolean = false){\n\n        const containerURL = urlJoin(icddRootURL, subfolder, \"/\");\n\n        // 1. Calculate md5 hashes of files\n        const md5Promises: any = [];\n        files.forEach((file: File) => md5Promises.push(computeChecksumMd5(file)));\n        const md5Hashes = await Promise.all(md5Promises);\n\n        // 2. Upload the files and append them to index file while doing so\n        let uploadFilePromises: any[] = [];\n        files.forEach((file, i) => {\n            const fileExtension = file.name.split('.').pop() || \"txt\";\n            const fileName = `${md5Hashes[i]}.${fileExtension}`;\n\n            // Append file to index.rdf\n            uploadFilePromises.push(this.addFileToIndex(icddRootURL, fileName, fileExtension, subfolder))\n\n            // Upload file to payload_documents\n            const fileURL = urlJoin(containerURL, fileName);\n            uploadFilePromises.push(this.dataService.writeFileToPod(file, fileURL, makePublic));\n        })\n        await Promise.all(uploadFilePromises);\n\n        return \"DONE\";\n\n    }\n\n    private async buildIndex(rootURL: string, icddName: string, makePublic: boolean = true){\n\n        let indexDataset = createSolidDataset();\n\n        // Create container description\n        // Use various add functions to add properties to the Thing\n        // Note: solid-client functions do not modify objects passed in as arguments. \n        // Instead the functions return new objects with the modifications.\n        const now = new Date();\n        const containerDescription = buildThing(createThing())      // Build new resource (ID created by SDK)\n            .addUrl(RDF.type, ICDD_C.ContainerDescription)          // Define type\n            .addStringNoLocale(SCHEMA_INRUPT.name, icddName)        // Define name\n            .addDatetime(ICDD_C.creationDate, now)                  // Set creation date\n            .addDatetime(ICDD_C.modificationDate, now)              // Set modification date\n            .build();\n        \n        // Update SolidDataset with the containerDescription Thing.\n        // Note: solid-client functions do not modify objects passed in as arguments. \n        // Instead the functions return new objects with the modifications.\n        indexDataset = setThing(indexDataset, containerDescription);\n        \n        // Save the SolidDataset at the specified URL.\n        // The function returns a SolidDataset that reflects your sent data\n        const datasetWithAcl = await saveSolidDatasetAt(\n            urlJoin(rootURL, \"index\"),\n            indexDataset,\n            { fetch: this.fetch }\n        );\n\n        if(makePublic){\n            await this.accessService.makePublic(urlJoin(rootURL, \"index\"));\n        }\n\n        return datasetWithAcl;\n        \n\n    }\n\n    private async addFileToIndex(icddRootURL: string, fileName: string, format: string, subfolder: string){\n\n        const now = new Date();\n        const filePath = `/${subfolder}/${fileName}`;\n\n        // Get dataset\n        let indexDataset = await getSolidDataset(\n            urlJoin(icddRootURL, \"index\"),\n            { fetch: this.fetch }\n        );\n\n        // Add document\n        const newDocument = buildThing(createThing())               // Build new resource (ID created by SDK)\n            .addUrl(RDF.type, ICDD_C.Document)                      // Define type\n            .addStringNoLocale(ICDD_C.format, format)               // Set format\n            .addStringNoLocale(ICDD_C.filename, fileName)           // Set file name\n            .addStringNoLocale(DCAT.downloadURL, filePath)          // Set file path (Why is relative URI not supported?)\n            .addDatetime(ICDD_C.creationDate, now)                  // Set creation date\n            .addDatetime(ICDD_C.modificationDate, now)              // Set modification date\n            .build();\n        \n        indexDataset = setThing(indexDataset, newDocument);\n\n        // Get container description\n        let containerDescription = getThingAll(indexDataset).find(item => {\n            return getUrlAll(item, RDF.type).indexOf(ICDD_C.ContainerDescription) != -1;\n        });\n\n        // Make changes to container description\n        if(containerDescription != undefined){\n            // Update modification date\n            containerDescription = setDatetime(containerDescription, ICDD_C.modificationDate, now);\n\n            // Add reference to new document\n            containerDescription = addUrl(containerDescription, ICDD_C.containsDocument, newDocument);\n\n            // Update dataset\n            indexDataset = setThing(indexDataset, containerDescription);\n        }\n\n        // Save the SolidDataset at the specified URL.\n        // The function returns a SolidDataset that reflects your sent data\n        const datasetWithAcl = await saveSolidDatasetAt(\n            urlJoin(icddRootURL, \"index\"),\n            indexDataset,\n            { fetch: this.fetch }\n        );\n\n        return datasetWithAcl;\n    }\n\n}","import { ICDDService as MyICDDService } from \"./helpers/icdd-service\";\n\n// export class Consolid{\n\n//     public fetch;\n//     public verbose: boolean = false;\n//     public icddService: ICDDService;\n\n//     constructor(fetch: any, verbose: boolean = false){\n//         this.fetch = fetch;\n//         this.verbose = verbose;\n//         this.icddService = new ICDDService(fetch, verbose);\n//     }\n\n//     initICDD(rootURL: string, icddName: string, makePublic: boolean = true){\n//         return this.icddService.initICDD(rootURL, icddName, makePublic)\n//     }\n\n// }\n\nexport namespace Consolid{\n\n    export const ICDDService = MyICDDService;\n\n}","const RDF  = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    XSD  = 'http://www.w3.org/2001/XMLSchema#',\n    SWAP = 'http://www.w3.org/2000/10/swap/';\n\nexport default {\n  xsd: {\n    decimal: `${XSD}decimal`,\n    boolean: `${XSD}boolean`,\n    double:  `${XSD}double`,\n    integer: `${XSD}integer`,\n    string:  `${XSD}string`,\n  },\n  rdf: {\n    type:       `${RDF}type`,\n    nil:        `${RDF}nil`,\n    first:      `${RDF}first`,\n    rest:       `${RDF}rest`,\n    langString: `${RDF}langString`,\n  },\n  owl: {\n    sameAs: 'http://www.w3.org/2002/07/owl#sameAs',\n  },\n  r: {\n    forSome: `${SWAP}reify#forSome`,\n    forAll:  `${SWAP}reify#forAll`,\n  },\n  log: {\n    implies: `${SWAP}log#implies`,\n  },\n};\n","/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","// **N3Lexer** tokenizes N3 documents.\nimport namespaces from './IRIs';\nimport queueMicrotask from 'queue-microtask';\n\nconst { xsd } = namespaces;\n\n// Regular expression and replacement string to escape N3 strings\nconst escapeSequence = /\\\\u([a-fA-F0-9]{4})|\\\\U([a-fA-F0-9]{8})|\\\\([^])/g;\nconst escapeReplacements = {\n  '\\\\': '\\\\', \"'\": \"'\", '\"': '\"',\n  'n': '\\n', 'r': '\\r', 't': '\\t', 'f': '\\f', 'b': '\\b',\n  '_': '_', '~': '~', '.': '.', '-': '-', '!': '!', '$': '$', '&': '&',\n  '(': '(', ')': ')', '*': '*', '+': '+', ',': ',', ';': ';', '=': '=',\n  '/': '/', '?': '?', '#': '#', '@': '@', '%': '%',\n};\nconst illegalIriChars = /[\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]/;\n\nconst lineModeRegExps = {\n  _iri: true,\n  _unescapedIri: true,\n  _simpleQuotedString: true,\n  _langcode: true,\n  _blank: true,\n  _newline: true,\n  _comment: true,\n  _whitespace: true,\n  _endOfFile: true,\n};\nconst invalidRegExp = /$0^/;\n\n// ## Constructor\nexport default class N3Lexer {\n  constructor(options) {\n    // ## Regular expressions\n    // It's slightly faster to have these as properties than as in-scope variables\n    this._iri = /^<((?:[^ <>{}\\\\]|\\\\[uU])+)>[ \\t]*/; // IRI with escape sequences; needs sanity check after unescaping\n    this._unescapedIri = /^<([^\\x00-\\x20<>\\\\\"\\{\\}\\|\\^\\`]*)>[ \\t]*/; // IRI without escape sequences; no unescaping\n    this._simpleQuotedString = /^\"([^\"\\\\\\r\\n]*)\"(?=[^\"])/; // string without escape sequences\n    this._simpleApostropheString = /^'([^'\\\\\\r\\n]*)'(?=[^'])/;\n    this._langcode = /^@([a-z]+(?:-[a-z0-9]+)*)(?=[^a-z0-9\\-])/i;\n    this._prefix = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:(?=[#\\s<])/;\n    this._prefixed = /^((?:[A-Za-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)?:((?:(?:[0-:A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])(?:(?:[\\.\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~])*(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff]|%[0-9a-fA-F]{2}|\\\\[!#-\\/;=?\\-@_~]))?)?)(?:[ \\t]+|(?=\\.?[,;!\\^\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._variable = /^\\?(?:(?:[A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:[\\-0-:A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?=[.,;!\\^\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._blank = /^_:((?:[0-9A-Z_a-z\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02ff\\u0370-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])(?:\\.?[\\-0-9A-Z_a-z\\xb7\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u037d\\u037f-\\u1fff\\u200c\\u200d\\u203f\\u2040\\u2070-\\u218f\\u2c00-\\u2fef\\u3001-\\ud7ff\\uf900-\\ufdcf\\ufdf0-\\ufffd]|[\\ud800-\\udb7f][\\udc00-\\udfff])*)(?:[ \\t]+|(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>]))/;\n    this._number = /^[\\-+]?(?:(\\d+\\.\\d*|\\.?\\d+)[eE][\\-+]?|\\d*(\\.)?)\\d+(?=\\.?[,;:\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._boolean = /^(?:true|false)(?=[.,;\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._keyword = /^@[a-z]+(?=[\\s#<:])/i;\n    this._sparqlKeyword = /^(?:PREFIX|BASE|GRAPH)(?=[\\s#<])/i;\n    this._shortPredicates = /^a(?=[\\s#()\\[\\]\\{\\}\"'<>])/;\n    this._newline = /^[ \\t]*(?:#[^\\n\\r]*)?(?:\\r\\n|\\n|\\r)[ \\t]*/;\n    this._comment = /#([^\\n\\r]*)/;\n    this._whitespace = /^[ \\t]+/;\n    this._endOfFile = /^(?:#[^\\n\\r]*)?$/;\n    options = options || {};\n\n    // In line mode (N-Triples or N-Quads), only simple features may be parsed\n    if (this._lineMode = !!options.lineMode) {\n      this._n3Mode = false;\n      // Don't tokenize special literals\n      for (const key in this) {\n        if (!(key in lineModeRegExps) && this[key] instanceof RegExp)\n          this[key] = invalidRegExp;\n      }\n    }\n    // When not in line mode, enable N3 functionality by default\n    else {\n      this._n3Mode = options.n3 !== false;\n    }\n    // Don't output comment tokens by default\n    this._comments = !!options.comments;\n    // Cache the last tested closing position of long literals\n    this._literalClosingPos = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_tokenizeToEnd` tokenizes as for as possible, emitting tokens through the callback\n  _tokenizeToEnd(callback, inputFinished) {\n    // Continue parsing as far as possible; the loop will return eventually\n    let input = this._input;\n    const outputComments = this._comments;\n    while (true) {\n      // Count and skip whitespace lines\n      let whiteSpaceMatch, comment;\n      while (whiteSpaceMatch = this._newline.exec(input)) {\n        // Try to find a comment\n        if (outputComments && (comment = this._comment.exec(whiteSpaceMatch[0])))\n          callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n        // Advance the input\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n        this._line++;\n      }\n      // Skip whitespace on current line\n      if (!whiteSpaceMatch && (whiteSpaceMatch = this._whitespace.exec(input)))\n        input = input.substr(whiteSpaceMatch[0].length, input.length);\n\n      // Stop for now if we're at the end\n      if (this._endOfFile.test(input)) {\n        // If the input is finished, emit EOF\n        if (inputFinished) {\n          // Try to find a final comment\n          if (outputComments && (comment = this._comment.exec(input)))\n            callback(null, { line: this._line, type: 'comment', value: comment[1], prefix: '' });\n          callback(input = null, { line: this._line, type: 'eof', value: '', prefix: '' });\n        }\n        return this._input = input;\n      }\n\n      // Look for specific token types based on the first character\n      const line = this._line, firstChar = input[0];\n      let type = '', value = '', prefix = '',\n          match = null, matchLength = 0, inconclusive = false;\n      switch (firstChar) {\n      case '^':\n        // We need at least 3 tokens lookahead to distinguish ^^<IRI> and ^^pre:fixed\n        if (input.length < 3)\n          break;\n        // Try to match a type\n        else if (input[1] === '^') {\n          this._previousMarker = '^^';\n          // Move to type IRI or prefixed name\n          input = input.substr(2);\n          if (input[0] !== '<') {\n            inconclusive = true;\n            break;\n          }\n        }\n        // If no type, it must be a path expression\n        else {\n          if (this._n3Mode) {\n            matchLength = 1;\n            type = '^';\n          }\n          break;\n        }\n        // Fall through in case the type is an IRI\n      case '<':\n        // Try to find a full IRI without escape sequences\n        if (match = this._unescapedIri.exec(input))\n          type = 'IRI', value = match[1];\n        // Try to find a full IRI with escape sequences\n        else if (match = this._iri.exec(input)) {\n          value = this._unescape(match[1]);\n          if (value === null || illegalIriChars.test(value))\n            return reportSyntaxError(this);\n          type = 'IRI';\n        }\n        // Try to find a nested triple\n        else if (input.length > 1 && input[1] === '<')\n          type = '<<', matchLength = 2;\n        // Try to find a backwards implication arrow\n        else if (this._n3Mode && input.length > 1 && input[1] === '=')\n          type = 'inverse', matchLength = 2, value = '>';\n        break;\n\n      case '>':\n        if (input.length > 1 && input[1] === '>')\n          type = '>>', matchLength = 2;\n        break;\n\n      case '_':\n        // Try to find a blank node. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a blank node.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if ((match = this._blank.exec(input)) ||\n            inputFinished && (match = this._blank.exec(`${input} `)))\n          type = 'blank', prefix = '_', value = match[1];\n        break;\n\n      case '\"':\n        // Try to find a literal without escape sequences\n        if (match = this._simpleQuotedString.exec(input))\n          value = match[1];\n        // Try to find a literal wrapped in three pairs of quotes\n        else {\n          ({ value, matchLength } = this._parseLiteral(input));\n          if (value === null)\n            return reportSyntaxError(this);\n        }\n        if (match !== null || matchLength !== 0) {\n          type = 'literal';\n          this._literalClosingPos = 0;\n        }\n        break;\n\n      case \"'\":\n        if (!this._lineMode) {\n          // Try to find a literal without escape sequences\n          if (match = this._simpleApostropheString.exec(input))\n            value = match[1];\n          // Try to find a literal wrapped in three pairs of quotes\n          else {\n            ({ value, matchLength } = this._parseLiteral(input));\n            if (value === null)\n              return reportSyntaxError(this);\n          }\n          if (match !== null || matchLength !== 0) {\n            type = 'literal';\n            this._literalClosingPos = 0;\n          }\n        }\n        break;\n\n      case '?':\n        // Try to find a variable\n        if (this._n3Mode && (match = this._variable.exec(input)))\n          type = 'var', value = match[0];\n        break;\n\n      case '@':\n        // Try to find a language code\n        if (this._previousMarker === 'literal' && (match = this._langcode.exec(input)))\n          type = 'langcode', value = match[1];\n        // Try to find a keyword\n        else if (match = this._keyword.exec(input))\n          type = match[0];\n        break;\n\n      case '.':\n        // Try to find a dot as punctuation\n        if (input.length === 1 ? inputFinished : (input[1] < '0' || input[1] > '9')) {\n          type = '.';\n          matchLength = 1;\n          break;\n        }\n        // Fall through to numerical case (could be a decimal dot)\n\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '+':\n      case '-':\n        // Try to find a number. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a number.\n        // Therefore, try inserting a space if we're at the end of the input.\n        if (match = this._number.exec(input) ||\n            inputFinished && (match = this._number.exec(`${input} `))) {\n          type = 'literal', value = match[0];\n          prefix = (typeof match[1] === 'string' ? xsd.double :\n                    (typeof match[2] === 'string' ? xsd.decimal : xsd.integer));\n        }\n        break;\n\n      case 'B':\n      case 'b':\n      case 'p':\n      case 'P':\n      case 'G':\n      case 'g':\n        // Try to find a SPARQL-style keyword\n        if (match = this._sparqlKeyword.exec(input))\n          type = match[0].toUpperCase();\n        else\n          inconclusive = true;\n        break;\n\n      case 'f':\n      case 't':\n        // Try to match a boolean\n        if (match = this._boolean.exec(input))\n          type = 'literal', value = match[0], prefix = xsd.boolean;\n        else\n          inconclusive = true;\n        break;\n\n      case 'a':\n        // Try to find an abbreviated predicate\n        if (match = this._shortPredicates.exec(input))\n          type = 'abbreviation', value = 'a';\n        else\n          inconclusive = true;\n        break;\n\n      case '=':\n        // Try to find an implication arrow or equals sign\n        if (this._n3Mode && input.length > 1) {\n          type = 'abbreviation';\n          if (input[1] !== '>')\n            matchLength = 1, value = '=';\n          else\n            matchLength = 2, value = '>';\n        }\n        break;\n\n      case '!':\n        if (!this._n3Mode)\n          break;\n      case ',':\n      case ';':\n      case '[':\n      case ']':\n      case '(':\n      case ')':\n      case '{':\n      case '}':\n        if (!this._lineMode) {\n          matchLength = 1;\n          type = firstChar;\n        }\n        break;\n\n      default:\n        inconclusive = true;\n      }\n\n      // Some first characters do not allow an immediate decision, so inspect more\n      if (inconclusive) {\n        // Try to find a prefix\n        if ((this._previousMarker === '@prefix' || this._previousMarker === 'PREFIX') &&\n            (match = this._prefix.exec(input)))\n          type = 'prefix', value = match[1] || '';\n        // Try to find a prefixed name. Since it can contain (but not end with) a dot,\n        // we always need a non-dot character before deciding it is a prefixed name.\n        // Therefore, try inserting a space if we're at the end of the input.\n        else if ((match = this._prefixed.exec(input)) ||\n                 inputFinished && (match = this._prefixed.exec(`${input} `)))\n          type = 'prefixed', prefix = match[1] || '', value = this._unescape(match[2]);\n      }\n\n      // A type token is special: it can only be emitted after an IRI or prefixed name is read\n      if (this._previousMarker === '^^') {\n        switch (type) {\n        case 'prefixed': type = 'type';    break;\n        case 'IRI':      type = 'typeIRI'; break;\n        default:         type = '';\n        }\n      }\n\n      // What if nothing of the above was found?\n      if (!type) {\n        // We could be in streaming mode, and then we just wait for more input to arrive.\n        // Otherwise, a syntax error has occurred in the input.\n        // One exception: error on an unaccounted linebreak (= not inside a triple-quoted literal).\n        if (inputFinished || (!/^'''|^\"\"\"/.test(input) && /\\n|\\r/.test(input)))\n          return reportSyntaxError(this);\n        else\n          return this._input = input;\n      }\n\n      // Emit the parsed token\n      const token = { line: line, type: type, value: value, prefix: prefix };\n      callback(null, token);\n      this.previousToken = token;\n      this._previousMarker = type;\n      // Advance to next part to tokenize\n      input = input.substr(matchLength || match[0].length, input.length);\n    }\n\n    // Signals the syntax error through the callback\n    function reportSyntaxError(self) { callback(self._syntaxError(/^\\S*/.exec(input)[0])); }\n  }\n\n  // ### `_unescape` replaces N3 escape codes by their corresponding characters\n  _unescape(item) {\n    let invalid = false;\n    const replaced = item.replace(escapeSequence, (sequence, unicode4, unicode8, escapedChar) => {\n      // 4-digit unicode character\n      if (typeof unicode4 === 'string')\n        return String.fromCharCode(Number.parseInt(unicode4, 16));\n      // 8-digit unicode character\n      if (typeof unicode8 === 'string') {\n        let charCode = Number.parseInt(unicode8, 16);\n        return charCode <= 0xFFFF ? String.fromCharCode(Number.parseInt(unicode8, 16)) :\n          String.fromCharCode(0xD800 + ((charCode -= 0x10000) >> 10), 0xDC00 + (charCode & 0x3FF));\n      }\n      // fixed escape sequence\n      if (escapedChar in escapeReplacements)\n        return escapeReplacements[escapedChar];\n      // invalid escape sequence\n      invalid = true;\n      return '';\n    });\n    return invalid ? null : replaced;\n  }\n\n  // ### `_parseLiteral` parses a literal into an unescaped value\n  _parseLiteral(input) {\n    // Ensure we have enough lookahead to identify triple-quoted strings\n    if (input.length >= 3) {\n      // Identify the opening quote(s)\n      const opening = input.match(/^(?:\"\"\"|\"|'''|'|)/)[0];\n      const openingLength = opening.length;\n\n      // Find the next candidate closing quotes\n      let closingPos = Math.max(this._literalClosingPos, openingLength);\n      while ((closingPos = input.indexOf(opening, closingPos)) > 0) {\n        // Count backslashes right before the closing quotes\n        let backslashCount = 0;\n        while (input[closingPos - backslashCount - 1] === '\\\\')\n          backslashCount++;\n\n        // An even number of backslashes (in particular 0)\n        // means these are actual, non-escaped closing quotes\n        if (backslashCount % 2 === 0) {\n          // Extract and unescape the value\n          const raw = input.substring(openingLength, closingPos);\n          const lines = raw.split(/\\r\\n|\\r|\\n/).length - 1;\n          const matchLength = closingPos + openingLength;\n          // Only triple-quoted strings can be multi-line\n          if (openingLength === 1 && lines !== 0 ||\n              openingLength === 3 && this._lineMode)\n            break;\n          this._line += lines;\n          return { value: this._unescape(raw), matchLength };\n        }\n        closingPos++;\n      }\n      this._literalClosingPos = input.length - openingLength + 1;\n    }\n    return { value: '', matchLength: 0 };\n  }\n\n  // ### `_syntaxError` creates a syntax error for the given issue\n  _syntaxError(issue) {\n    this._input = null;\n    const err = new Error(`Unexpected \"${issue}\" on line ${this._line}.`);\n    err.context = {\n      token: undefined,\n      line: this._line,\n      previousToken: this.previousToken,\n    };\n    return err;\n  }\n\n  // ### Strips off any starting UTF BOM mark.\n  _readStartingBom(input) {\n    return input.startsWith('\\ufeff') ? input.substr(1) : input;\n  }\n\n  // ## Public methods\n\n  // ### `tokenize` starts the transformation of an N3 document into an array of tokens.\n  // The input can be a string or a stream.\n  tokenize(input, callback) {\n    this._line = 1;\n\n    // If the input is a string, continuously emit tokens through the callback until the end\n    if (typeof input === 'string') {\n      this._input = this._readStartingBom(input);\n      // If a callback was passed, asynchronously call it\n      if (typeof callback === 'function')\n        queueMicrotask(() => this._tokenizeToEnd(callback, true));\n      // If no callback was passed, tokenize synchronously and return\n      else {\n        const tokens = [];\n        let error;\n        this._tokenizeToEnd((e, t) => e ? (error = e) : tokens.push(t), true);\n        if (error) throw error;\n        return tokens;\n      }\n    }\n    // Otherwise, the input must be a stream\n    else {\n      this._pendingBuffer = null;\n      if (typeof input.setEncoding === 'function')\n        input.setEncoding('utf8');\n      // Adds the data chunk to the buffer and parses as far as possible\n      input.on('data', data => {\n        if (this._input !== null && data.length !== 0) {\n          // Prepend any previous pending writes\n          if (this._pendingBuffer) {\n            data = Buffer.concat([this._pendingBuffer, data]);\n            this._pendingBuffer = null;\n          }\n          // Hold if the buffer ends in an incomplete unicode sequence\n          if (data[data.length - 1] & 0x80) {\n            this._pendingBuffer = data;\n          }\n          // Otherwise, tokenize as far as possible\n          else {\n            // Only read a BOM at the start\n            if (typeof this._input === 'undefined')\n              this._input = this._readStartingBom(typeof data === 'string' ? data : data.toString());\n            else\n              this._input += data;\n            this._tokenizeToEnd(callback, false);\n          }\n        }\n      });\n      // Parses until the end\n      input.on('end', () => {\n        if (typeof this._input === 'string')\n          this._tokenizeToEnd(callback, true);\n      });\n      input.on('error', callback);\n    }\n  }\n}\n","// **N3Util** provides N3 utility functions.\n\nimport N3DataFactory from './N3DataFactory';\n\n// Tests whether the given term represents an IRI\nexport function isNamedNode(term) {\n  return !!term && term.termType === 'NamedNode';\n}\n\n// Tests whether the given term represents a blank node\nexport function isBlankNode(term) {\n  return !!term && term.termType === 'BlankNode';\n}\n\n// Tests whether the given term represents a literal\nexport function isLiteral(term) {\n  return !!term && term.termType === 'Literal';\n}\n\n// Tests whether the given term represents a variable\nexport function isVariable(term) {\n  return !!term && term.termType === 'Variable';\n}\n\n// Tests whether the given term represents the default graph\nexport function isDefaultGraph(term) {\n  return !!term && term.termType === 'DefaultGraph';\n}\n\n// Tests whether the given quad is in the default graph\nexport function inDefaultGraph(quad) {\n  return isDefaultGraph(quad.graph);\n}\n\n// Creates a function that prepends the given IRI to a local name\nexport function prefix(iri, factory) {\n  return prefixes({ '': iri }, factory)('');\n}\n\n// Creates a function that allows registering and expanding prefixes\nexport function prefixes(defaultPrefixes, factory) {\n  // Add all of the default prefixes\n  const prefixes = Object.create(null);\n  for (const prefix in defaultPrefixes)\n    processPrefix(prefix, defaultPrefixes[prefix]);\n  // Set the default factory if none was specified\n  factory = factory || N3DataFactory;\n\n  // Registers a new prefix (if an IRI was specified)\n  // or retrieves a function that expands an existing prefix (if no IRI was specified)\n  function processPrefix(prefix, iri) {\n    // Create a new prefix if an IRI is specified or the prefix doesn't exist\n    if (typeof iri === 'string') {\n      // Create a function that expands the prefix\n      const cache = Object.create(null);\n      prefixes[prefix] = local => {\n        return cache[local] || (cache[local] = factory.namedNode(iri + local));\n      };\n    }\n    else if (!(prefix in prefixes)) {\n      throw new Error(`Unknown prefix: ${prefix}`);\n    }\n    return prefixes[prefix];\n  }\n  return processPrefix;\n}\n","// N3.js implementations of the RDF/JS core data types\n// See https://github.com/rdfjs/representation-task-force/blob/master/interface-spec.md\n\nimport namespaces from './IRIs';\nimport { isDefaultGraph } from './N3Util';\nconst { rdf, xsd } = namespaces;\n\n// eslint-disable-next-line prefer-const\nlet DEFAULTGRAPH;\nlet _blankNodeCounter = 0;\n\nconst escapedLiteral = /^\"(.*\".*)(?=\"[^\"]*$)/;\nconst quadId = /^<<(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) (\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+) ?(\"(?:\"\"|[^\"])*\"[^ ]*|[^ ]+)?>>$/;\n\n// ## DataFactory singleton\nconst DataFactory = {\n  namedNode,\n  blankNode,\n  variable,\n  literal,\n  defaultGraph,\n  quad,\n  triple: quad,\n};\nexport default DataFactory;\n\n// ## Term constructor\nexport class Term {\n  constructor(id) {\n    this.id = id;\n  }\n\n  // ### The value of this term\n  get value() {\n    return this.id;\n  }\n\n  // ### Implement hashCode for Immutable.js, since we implement `equals`\n  // https://immutable-js.com/docs/v4.0.0/ValueObject/#hashCode()\n  get hashCode() {\n    return 0;\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Term)\n      return this.id === other.id;\n    // Otherwise, compare term type and value\n    return !!other && this.termType === other.termType &&\n                      this.value    === other.value;\n  }\n\n  // ### Returns a plain object representation of this term\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n    };\n  }\n}\n\n\n// ## NamedNode constructor\nexport class NamedNode extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'NamedNode';\n  }\n}\n\n// ## Literal constructor\nexport class Literal extends Term {\n  // ### The term type of this term\n  get termType() {\n    return 'Literal';\n  }\n\n  // ### The text value of this literal\n  get value() {\n    return this.id.substring(1, this.id.lastIndexOf('\"'));\n  }\n\n  // ### The language of this literal\n  get language() {\n    // Find the last quotation mark (e.g., '\"abc\"@en-us')\n    const id = this.id;\n    let atPos = id.lastIndexOf('\"') + 1;\n    // If \"@\" it follows, return the remaining substring; empty otherwise\n    return atPos < id.length && id[atPos++] === '@' ? id.substr(atPos).toLowerCase() : '';\n  }\n\n  // ### The datatype IRI of this literal\n  get datatype() {\n    return new NamedNode(this.datatypeString);\n  }\n\n  // ### The datatype string of this literal\n  get datatypeString() {\n    // Find the last quotation mark (e.g., '\"abc\"^^http://ex.org/types#t')\n    const id = this.id, dtPos = id.lastIndexOf('\"') + 1;\n    const char = dtPos < id.length ? id[dtPos] : '';\n    // If \"^\" it follows, return the remaining substring\n    return char === '^' ? id.substr(dtPos + 2) :\n           // If \"@\" follows, return rdf:langString; xsd:string otherwise\n           (char !== '@' ? xsd.string : rdf.langString);\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both literals were created by this library,\n    // equality can be computed through ids\n    if (other instanceof Literal)\n      return this.id === other.id;\n    // Otherwise, compare term type, value, language, and datatype\n    return !!other && !!other.datatype &&\n                      this.termType === other.termType &&\n                      this.value    === other.value    &&\n                      this.language === other.language &&\n                      this.datatype.value === other.datatype.value;\n  }\n\n  toJSON() {\n    return {\n      termType: this.termType,\n      value:    this.value,\n      language: this.language,\n      datatype: { termType: 'NamedNode', value: this.datatypeString },\n    };\n  }\n}\n\n// ## BlankNode constructor\nexport class BlankNode extends Term {\n  constructor(name) {\n    super(`_:${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'BlankNode';\n  }\n\n  // ### The name of this blank node\n  get value() {\n    return this.id.substr(2);\n  }\n}\n\nexport class Variable extends Term {\n  constructor(name) {\n    super(`?${name}`);\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Variable';\n  }\n\n  // ### The name of this variable\n  get value() {\n    return this.id.substr(1);\n  }\n}\n\n// ## DefaultGraph constructor\nexport class DefaultGraph extends Term {\n  constructor() {\n    super('');\n    return DEFAULTGRAPH || this;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'DefaultGraph';\n  }\n\n  // ### Returns whether this object represents the same term as the other\n  equals(other) {\n    // If both terms were created by this library,\n    // equality can be computed through strict equality;\n    // otherwise, compare term types.\n    return (this === other) || (!!other && (this.termType === other.termType));\n  }\n}\n\n// ## DefaultGraph singleton\nDEFAULTGRAPH = new DefaultGraph();\n\n\n// ### Constructs a term from the given internal string ID\nexport function termFromId(id, factory) {\n  factory = factory || DataFactory;\n\n  // Falsy value or empty string indicate the default graph\n  if (!id)\n    return factory.defaultGraph();\n\n  // Identify the term type based on the first character\n  switch (id[0]) {\n  case '?':\n    return factory.variable(id.substr(1));\n  case '_':\n    return factory.blankNode(id.substr(2));\n  case '\"':\n    // Shortcut for internal literals\n    if (factory === DataFactory)\n      return new Literal(id);\n    // Literal without datatype or language\n    if (id[id.length - 1] === '\"')\n      return factory.literal(id.substr(1, id.length - 2));\n    // Literal with datatype or language\n    const endPos = id.lastIndexOf('\"', id.length - 1);\n    return factory.literal(id.substr(1, endPos - 1),\n            id[endPos + 1] === '@' ? id.substr(endPos + 2)\n                                   : factory.namedNode(id.substr(endPos + 3)));\n  case '<':\n    const components = quadId.exec(id);\n    return factory.quad(\n      termFromId(unescapeQuotes(components[1]), factory),\n      termFromId(unescapeQuotes(components[2]), factory),\n      termFromId(unescapeQuotes(components[3]), factory),\n      components[4] && termFromId(unescapeQuotes(components[4]), factory)\n    );\n  default:\n    return factory.namedNode(id);\n  }\n}\n\n// ### Constructs an internal string ID from the given term or ID string\nexport function termToId(term) {\n  if (typeof term === 'string')\n    return term;\n  if (term instanceof Term && term.termType !== 'Quad')\n    return term.id;\n  if (!term)\n    return DEFAULTGRAPH.id;\n\n  // Term instantiated with another library\n  switch (term.termType) {\n  case 'NamedNode':    return term.value;\n  case 'BlankNode':    return `_:${term.value}`;\n  case 'Variable':     return `?${term.value}`;\n  case 'DefaultGraph': return '';\n  case 'Literal':      return `\"${term.value}\"${\n    term.language ? `@${term.language}` :\n      (term.datatype && term.datatype.value !== xsd.string ? `^^${term.datatype.value}` : '')}`;\n  case 'Quad':\n    // To identify RDF* quad components, we escape quotes by doubling them.\n    // This avoids the overhead of backslash parsing of Turtle-like syntaxes.\n    return `<<${\n        escapeQuotes(termToId(term.subject))\n      } ${\n        escapeQuotes(termToId(term.predicate))\n      } ${\n        escapeQuotes(termToId(term.object))\n      }${\n        (isDefaultGraph(term.graph)) ? '' : ` ${termToId(term.graph)}`\n      }>>`;\n  default: throw new Error(`Unexpected termType: ${term.termType}`);\n  }\n}\n\n\n// ## Quad constructor\nexport class Quad extends Term {\n  constructor(subject, predicate, object, graph) {\n    super('');\n    this._subject   = subject;\n    this._predicate = predicate;\n    this._object    = object;\n    this._graph     = graph || DEFAULTGRAPH;\n  }\n\n  // ### The term type of this term\n  get termType() {\n    return 'Quad';\n  }\n\n  get subject() {\n    return this._subject;\n  }\n\n  get predicate() {\n    return this._predicate;\n  }\n\n  get object() {\n    return this._object;\n  }\n\n  get graph() {\n    return this._graph;\n  }\n\n  // ### Returns a plain object representation of this quad\n  toJSON() {\n    return {\n      termType:  this.termType,\n      subject:   this._subject.toJSON(),\n      predicate: this._predicate.toJSON(),\n      object:    this._object.toJSON(),\n      graph:     this._graph.toJSON(),\n    };\n  }\n\n  // ### Returns whether this object represents the same quad as the other\n  equals(other) {\n    return !!other && this._subject.equals(other.subject)     &&\n                      this._predicate.equals(other.predicate) &&\n                      this._object.equals(other.object)       &&\n                      this._graph.equals(other.graph);\n  }\n}\nexport { Quad as Triple };\n\n// ### Escapes the quotes within the given literal\nexport function escapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"/g, '\"\"')}`);\n}\n\n// ### Unescapes the quotes within the given literal\nexport function unescapeQuotes(id) {\n  return id.replace(escapedLiteral, (_, quoted) => `\"${quoted.replace(/\"\"/g, '\"')}`);\n}\n\n// ### Creates an IRI\nfunction namedNode(iri) {\n  return new NamedNode(iri);\n}\n\n// ### Creates a blank node\nfunction blankNode(name) {\n  return new BlankNode(name || `n3-${_blankNodeCounter++}`);\n}\n\n// ### Creates a literal\nfunction literal(value, languageOrDataType) {\n  // Create a language-tagged string\n  if (typeof languageOrDataType === 'string')\n    return new Literal(`\"${value}\"@${languageOrDataType.toLowerCase()}`);\n\n  // Automatically determine datatype for booleans and numbers\n  let datatype = languageOrDataType ? languageOrDataType.value : '';\n  if (datatype === '') {\n    // Convert a boolean\n    if (typeof value === 'boolean')\n      datatype = xsd.boolean;\n    // Convert an integer or double\n    else if (typeof value === 'number') {\n      if (Number.isFinite(value))\n        datatype = Number.isInteger(value) ? xsd.integer : xsd.double;\n      else {\n        datatype = xsd.double;\n        if (!Number.isNaN(value))\n          value = value > 0 ? 'INF' : '-INF';\n      }\n    }\n  }\n\n  // Create a datatyped literal\n  return (datatype === '' || datatype === xsd.string) ?\n    new Literal(`\"${value}\"`) :\n    new Literal(`\"${value}\"^^${datatype}`);\n}\n\n// ### Creates a variable\nfunction variable(name) {\n  return new Variable(name);\n}\n\n// ### Returns the default graph\nfunction defaultGraph() {\n  return DEFAULTGRAPH;\n}\n\n// ### Creates a quad\nfunction quad(subject, predicate, object, graph) {\n  return new Quad(subject, predicate, object, graph);\n}\n","// **N3Parser** parses N3 documents.\nimport N3Lexer from './N3Lexer';\nimport N3DataFactory from './N3DataFactory';\nimport namespaces from './IRIs';\n\nlet blankNodePrefix = 0;\n\n// ## Constructor\nexport default class N3Parser {\n  constructor(options) {\n    this._contextStack = [];\n    this._graph = null;\n\n    // Set the document IRI\n    options = options || {};\n    this._setBase(options.baseIRI);\n    options.factory && initDataFactory(this, options.factory);\n\n    // Set supported features depending on the format\n    const format = (typeof options.format === 'string') ?\n                 options.format.match(/\\w*$/)[0].toLowerCase() : '',\n        isTurtle = /turtle/.test(format), isTriG = /trig/.test(format),\n        isNTriples = /triple/.test(format), isNQuads = /quad/.test(format),\n        isN3 = this._n3Mode = /n3/.test(format),\n        isLineMode = isNTriples || isNQuads;\n    if (!(this._supportsNamedGraphs = !(isTurtle || isN3)))\n      this._readPredicateOrNamedGraph = this._readPredicate;\n    // Support triples in other graphs\n    this._supportsQuads = !(isTurtle || isTriG || isNTriples || isN3);\n    // Support nesting of triples\n    this._supportsRDFStar = format === '' || /star|\\*$/.test(format);\n    // Disable relative IRIs in N-Triples or N-Quads mode\n    if (isLineMode)\n      this._resolveRelativeIRI = iri => { return null; };\n    this._blankNodePrefix = typeof options.blankNodePrefix !== 'string' ? '' :\n                              options.blankNodePrefix.replace(/^(?!_:)/, '_:');\n    this._lexer = options.lexer || new N3Lexer({ lineMode: isLineMode, n3: isN3 });\n    // Disable explicit quantifiers by default\n    this._explicitQuantifiers = !!options.explicitQuantifiers;\n  }\n\n  // ## Static class methods\n\n  // ### `_resetBlankNodePrefix` restarts blank node prefix identification\n  static _resetBlankNodePrefix() {\n    blankNodePrefix = 0;\n  }\n\n  // ## Private methods\n\n  // ### `_setBase` sets the base IRI to resolve relative IRIs\n  _setBase(baseIRI) {\n    if (!baseIRI) {\n      this._base = '';\n      this._basePath = '';\n    }\n    else {\n      // Remove fragment if present\n      const fragmentPos = baseIRI.indexOf('#');\n      if (fragmentPos >= 0)\n        baseIRI = baseIRI.substr(0, fragmentPos);\n      // Set base IRI and its components\n      this._base = baseIRI;\n      this._basePath   = baseIRI.indexOf('/') < 0 ? baseIRI :\n                         baseIRI.replace(/[^\\/?]*(?:\\?.*)?$/, '');\n      baseIRI = baseIRI.match(/^(?:([a-z][a-z0-9+.-]*:))?(?:\\/\\/[^\\/]*)?/i);\n      this._baseRoot   = baseIRI[0];\n      this._baseScheme = baseIRI[1];\n    }\n  }\n\n  // ### `_saveContext` stores the current parsing context\n  // when entering a new scope (list, blank node, formula)\n  _saveContext(type, graph, subject, predicate, object) {\n    const n3Mode = this._n3Mode;\n    this._contextStack.push({\n      subject: subject, predicate: predicate, object: object,\n      graph: graph, type: type,\n      inverse: n3Mode ? this._inversePredicate : false,\n      blankPrefix: n3Mode ? this._prefixes._ : '',\n      quantified: n3Mode ? this._quantified : null,\n    });\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      // Every new scope resets the predicate direction\n      this._inversePredicate = false;\n      // In N3, blank nodes are scoped to a formula\n      // (using a dot as separator, as a blank node label cannot start with it)\n      this._prefixes._ = (this._graph ? `${this._graph.id.substr(2)}.` : '.');\n      // Quantifiers are scoped to a formula\n      this._quantified = Object.create(this._quantified);\n    }\n  }\n\n  // ### `_restoreContext` restores the parent context\n  // when leaving a scope (list, blank node, formula)\n  _restoreContext() {\n    const context = this._contextStack.pop(), n3Mode = this._n3Mode;\n    this._subject   = context.subject;\n    this._predicate = context.predicate;\n    this._object    = context.object;\n    this._graph     = context.graph;\n    // The settings below only apply to N3 streams\n    if (n3Mode) {\n      this._inversePredicate = context.inverse;\n      this._prefixes._ = context.blankPrefix;\n      this._quantified = context.quantified;\n    }\n  }\n\n  // ### `_readInTopContext` reads a token when in the top context\n  _readInTopContext(token) {\n    switch (token.type) {\n    // If an EOF token arrives in the top context, signal that we're done\n    case 'eof':\n      if (this._graph !== null)\n        return this._error('Unclosed graph', token);\n      delete this._prefixes._;\n      return this._callback(null, null, this._prefixes);\n    // It could be a prefix declaration\n    case 'PREFIX':\n      this._sparqlStyle = true;\n    case '@prefix':\n      return this._readPrefix;\n    // It could be a base declaration\n    case 'BASE':\n      this._sparqlStyle = true;\n    case '@base':\n      return this._readBaseIRI;\n    // It could be a graph\n    case '{':\n      if (this._supportsNamedGraphs) {\n        this._graph = '';\n        this._subject = null;\n        return this._readSubject;\n      }\n    case 'GRAPH':\n      if (this._supportsNamedGraphs)\n        return this._readNamedGraphLabel;\n    // Otherwise, the next token must be a subject\n    default:\n      return this._readSubject(token);\n    }\n  }\n\n  // ### `_readEntity` reads an IRI, prefixed name, blank node, or variable\n  _readEntity(token, quantifier) {\n    let value;\n    switch (token.type) {\n    // Read a relative or absolute IRI\n    case 'IRI':\n    case 'typeIRI':\n      const iri = this._resolveIRI(token.value);\n      if (iri === null)\n        return this._error('Invalid IRI', token);\n      value = this._namedNode(iri);\n      break;\n    // Read a prefixed name\n    case 'type':\n    case 'prefixed':\n      const prefix = this._prefixes[token.prefix];\n      if (prefix === undefined)\n        return this._error(`Undefined prefix \"${token.prefix}:\"`, token);\n      value = this._namedNode(prefix + token.value);\n      break;\n    // Read a blank node\n    case 'blank':\n      value = this._blankNode(this._prefixes[token.prefix] + token.value);\n      break;\n    // Read a variable\n    case 'var':\n      value = this._variable(token.value.substr(1));\n      break;\n    // Everything else is not an entity\n    default:\n      return this._error(`Expected entity but got ${token.type}`, token);\n    }\n    // In N3 mode, replace the entity if it is quantified\n    if (!quantifier && this._n3Mode && (value.id in this._quantified))\n      value = this._quantified[value.id];\n    return value;\n  }\n\n  // ### `_readSubject` reads a quad's subject\n  _readSubject(token) {\n    this._predicate = null;\n    switch (token.type) {\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph,\n                        this._subject = this._blankNode(), null, null);\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this.RDF_NIL, null, null);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph,\n                        this._graph = this._blankNode(), null, null);\n      return this._readSubject;\n    case '}':\n       // No subject; the graph in which we are reading is closed instead\n      return this._readPunctuation(token);\n    case '@forSome':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forSome\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORSOME;\n      this._quantifier = this._blankNode;\n      return this._readQuantifierList;\n    case '@forAll':\n      if (!this._n3Mode)\n        return this._error('Unexpected \"@forAll\"', token);\n      this._subject = null;\n      this._predicate = this.N3_FORALL;\n      this._quantifier = this._variable;\n      return this._readQuantifierList;\n    case 'literal':\n      if (!this._n3Mode)\n        return this._error('Unexpected literal', token);\n\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._completeSubjectLiteral;\n      }\n      else\n        this._subject = this._literal(token.value, this._namedNode(token.prefix));\n\n      break;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, null, null, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the subject entity\n      if ((this._subject = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the subject might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._readPredicateOrNamedGraph);\n    }\n\n    // The next token must be a predicate,\n    // or, if the subject was actually a graph IRI, a named graph\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // ### `_readPredicate` reads a quad's predicate\n  _readPredicate(token) {\n    const type = token.type;\n    switch (type) {\n    case 'inverse':\n      this._inversePredicate = true;\n    case 'abbreviation':\n      this._predicate = this.ABBREVIATIONS[token.value];\n      break;\n    case '.':\n    case ']':\n    case '}':\n      // Expected predicate didn't come, must have been trailing semicolon\n      if (this._predicate === null)\n        return this._error(`Unexpected ${type}`, token);\n      this._subject = null;\n      return type === ']' ? this._readBlankNodeTail(token) : this._readPunctuation(token);\n    case ';':\n      // Additional semicolons can be safely ignored\n      return this._predicate !== null ? this._readPredicate :\n             this._error('Expected predicate but got ;', token);\n    case '[':\n      if (this._n3Mode) {\n        // Start a new quad with a new blank node as subject\n        this._saveContext('blank', this._graph, this._subject,\n                          this._subject = this._blankNode(), null);\n        return this._readBlankNodeHead;\n      }\n    case 'blank':\n      if (!this._n3Mode)\n        return this._error('Disallowed blank node as predicate', token);\n    default:\n      if ((this._predicate = this._readEntity(token)) === undefined)\n        return;\n    }\n    // The next token must be an object\n    return this._readObject;\n  }\n\n  // ### `_readObject` reads a quad's object\n  _readObject(token) {\n    switch (token.type) {\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        return this._readDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else\n        this._object = this._literal(token.value, this._namedNode(token.prefix));\n      break;\n    case '[':\n      // Start a new quad with a new blank node as subject\n      this._saveContext('blank', this._graph, this._subject, this._predicate,\n                        this._subject = this._blankNode());\n      return this._readBlankNodeHead;\n    case '(':\n      // Start a new list\n      this._saveContext('list', this._graph, this._subject, this._predicate, this.RDF_NIL);\n      this._subject = null;\n      return this._readListItem;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    case '<<':\n      if (!this._supportsRDFStar)\n        return this._error('Unexpected RDF* syntax', token);\n      this._saveContext('<<', this._graph, this._subject, this._predicate, null);\n      this._graph = null;\n      return this._readSubject;\n    default:\n      // Read the object entity\n      if ((this._object = this._readEntity(token)) === undefined)\n        return;\n      // In N3 mode, the object might be a path\n      if (this._n3Mode)\n        return this._getPathReader(this._getContextEndReader());\n    }\n    return this._getContextEndReader();\n  }\n\n  // ### `_readPredicateOrNamedGraph` reads a quad's predicate, or a named graph\n  _readPredicateOrNamedGraph(token) {\n    return token.type === '{' ? this._readGraph(token) : this._readPredicate(token);\n  }\n\n  // ### `_readGraph` reads a graph\n  _readGraph(token) {\n    if (token.type !== '{')\n      return this._error(`Expected graph but got ${token.type}`, token);\n    // The \"subject\" we read is actually the GRAPH's label\n    this._graph = this._subject, this._subject = null;\n    return this._readSubject;\n  }\n\n  // ### `_readBlankNodeHead` reads the head of a blank node\n  _readBlankNodeHead(token) {\n    if (token.type === ']') {\n      this._subject = null;\n      return this._readBlankNodeTail(token);\n    }\n    else {\n      this._predicate = null;\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readBlankNodeTail` reads the end of a blank node\n  _readBlankNodeTail(token) {\n    if (token.type !== ']')\n      return this._readBlankNodePunctuation(token);\n\n    // Store blank node quad\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this blank node\n    const empty = this._predicate === null;\n    this._restoreContext();\n    // If the blank node was the object, restore previous context and read punctuation\n    if (this._object !== null)\n      return this._getContextEndReader();\n    // If the blank node was the predicate, continue reading the object\n    else if (this._predicate !== null)\n      return this._readObject;\n    // If the blank node was the subject, continue reading the predicate\n    else\n      // If the blank node was empty, it could be a named graph label\n      return empty ? this._readPredicateOrNamedGraph : this._readPredicateAfterBlank;\n  }\n\n  // ### `_readPredicateAfterBlank` reads a predicate after an anonymous blank node\n  _readPredicateAfterBlank(token) {\n    switch (token.type) {\n    case '.':\n    case '}':\n      // No predicate is coming if the triple is terminated here\n      this._subject = null;\n      return this._readPunctuation(token);\n    default:\n      return this._readPredicate(token);\n    }\n  }\n\n  // ### `_readListItem` reads items from a list\n  _readListItem(token) {\n    let item = null,                      // The item of the list\n        list = null,                      // The list itself\n        next = this._readListItem;        // The next function to execute\n    const previousList = this._subject,   // The previous list that contains this list\n        stack = this._contextStack,       // The stack of parent contexts\n        parent = stack[stack.length - 1]; // The parent containing the current list\n\n    switch (token.type) {\n    case '[':\n      // Stack the current list quad and start a new quad with a blank node as subject\n      this._saveContext('blank', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST,\n                        this._subject = item = this._blankNode());\n      next = this._readBlankNodeHead;\n      break;\n    case '(':\n      // Stack the current list quad and start a new list\n      this._saveContext('list', this._graph,\n                        list = this._blankNode(), this.RDF_FIRST, this.RDF_NIL);\n      this._subject = null;\n      break;\n    case ')':\n      // Closing the list; restore the parent context\n      this._restoreContext();\n      // If this list is contained within a parent list, return the membership quad here.\n      // This will be `<parent list element> rdf:first <this list>.`.\n      if (stack.length !== 0 && stack[stack.length - 1].type === 'list')\n        this._emit(this._subject, this._predicate, this._object, this._graph);\n      // Was this list the parent's subject?\n      if (this._predicate === null) {\n        // The next token is the predicate\n        next = this._readPredicate;\n        // No list tail if this was an empty list\n        if (this._subject === this.RDF_NIL)\n          return next;\n      }\n      // The list was in the parent context's object\n      else {\n        next = this._getContextEndReader();\n        // No list tail if this was an empty list\n        if (this._object === this.RDF_NIL)\n          return next;\n      }\n      // Close the list by making the head nil\n      list = this.RDF_NIL;\n      break;\n    case 'literal':\n      // Regular literal, can still get a datatype or language\n      if (token.prefix.length === 0) {\n        this._literalValue = token.value;\n        next = this._readListItemDataTypeOrLang;\n      }\n      // Pre-datatyped string literal (prefix stores the datatype)\n      else {\n        item = this._literal(token.value, this._namedNode(token.prefix));\n        next = this._getContextEndReader();\n      }\n      break;\n    case '{':\n      // Start a new formula\n      if (!this._n3Mode)\n        return this._error('Unexpected graph', token);\n      this._saveContext('formula', this._graph, this._subject, this._predicate,\n                        this._graph = this._blankNode());\n      return this._readSubject;\n    default:\n      if ((item = this._readEntity(token)) === undefined)\n        return;\n    }\n\n     // Create a new blank node if no item head was assigned yet\n    if (list === null)\n      this._subject = list = this._blankNode();\n\n    // Is this the first element of the list?\n    if (previousList === null) {\n      // This list is either the subject or the object of its parent\n      if (parent.predicate === null)\n        parent.subject = list;\n      else\n        parent.object = list;\n    }\n    else {\n      // Continue the previous list with the current list\n      this._emit(previousList, this.RDF_REST, list, this._graph);\n    }\n    // If an item was read, add it to the list\n    if (item !== null) {\n      // In N3 mode, the item might be a path\n      if (this._n3Mode && (token.type === 'IRI' || token.type === 'prefixed')) {\n        // Create a new context to add the item's path\n        this._saveContext('item', this._graph, list, this.RDF_FIRST, item);\n        this._subject = item, this._predicate = null;\n        // _readPath will restore the context and output the item\n        return this._getPathReader(this._readListItem);\n      }\n      // Output the item\n      this._emit(list, this.RDF_FIRST, item, this._graph);\n    }\n    return next;\n  }\n\n  // ### `_readDataTypeOrLang` reads an _optional_ datatype or language\n  _readDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, false);\n  }\n\n\n  // ### `_readListItemDataTypeOrLang` reads an _optional_ datatype or language in a list\n  _readListItemDataTypeOrLang(token) {\n    return this._completeObjectLiteral(token, true);\n  }\n\n  // ### `_completeLiteral` completes a literal with an optional datatype or language\n  _completeLiteral(token) {\n    // Create a simple string literal by default\n    let literal = this._literal(this._literalValue);\n\n    switch (token.type) {\n    // Create a datatyped literal\n    case 'type':\n    case 'typeIRI':\n      const datatype = this._readEntity(token);\n      if (datatype === undefined) return; // No datatype means an error occurred\n      literal = this._literal(this._literalValue, datatype);\n      token = null;\n      break;\n    // Create a language-tagged string\n    case 'langcode':\n      literal = this._literal(this._literalValue, token.value);\n      token = null;\n      break;\n    }\n\n    return { token, literal };\n  }\n\n  // Completes a literal in subject position\n  _completeSubjectLiteral(token) {\n    this._subject = this._completeLiteral(token).literal;\n    return this._readPredicateOrNamedGraph;\n  }\n\n  // Completes a literal in object position\n  _completeObjectLiteral(token, listItem) {\n    const completed = this._completeLiteral(token);\n    if (!completed)\n      return;\n    this._object = completed.literal;\n\n    // If this literal was part of a list, write the item\n    // (we could also check the context stack, but passing in a flag is faster)\n    if (listItem)\n      this._emit(this._subject, this.RDF_FIRST, this._object, this._graph);\n    // If the token was consumed, continue with the rest of the input\n    if (completed.token === null)\n      return this._getContextEndReader();\n    // Otherwise, consume the token now\n    else {\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(completed.token);\n    }\n  }\n\n  // ### `_readFormulaTail` reads the end of a formula\n  _readFormulaTail(token) {\n    if (token.type !== '}')\n      return this._readPunctuation(token);\n\n    // Store the last quad of the formula\n    if (this._subject !== null)\n      this._emit(this._subject, this._predicate, this._object, this._graph);\n\n    // Restore the parent context containing this formula\n    this._restoreContext();\n    // If the formula was the subject, continue reading the predicate.\n    // If the formula was the object, read punctuation.\n    return this._object === null ? this._readPredicate : this._getContextEndReader();\n  }\n\n  // ### `_readPunctuation` reads punctuation between quads or quad parts\n  _readPunctuation(token) {\n    let next, graph = this._graph;\n    const subject = this._subject, inversePredicate = this._inversePredicate;\n    switch (token.type) {\n    // A closing brace ends a graph\n    case '}':\n      if (this._graph === null)\n        return this._error('Unexpected graph closing', token);\n      if (this._n3Mode)\n        return this._readFormulaTail(token);\n      this._graph = null;\n    // A dot just ends the statement, without sharing anything with the next\n    case '.':\n      this._subject = null;\n      next = this._contextStack.length ? this._readSubject : this._readInTopContext;\n      if (inversePredicate) this._inversePredicate = false;\n      break;\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (graph = this._readEntity(token)) !== undefined) {\n        next = this._readQuadPunctuation;\n        break;\n      }\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    if (subject !== null) {\n      const predicate = this._predicate, object = this._object;\n      if (!inversePredicate)\n        this._emit(subject, predicate, object,  graph);\n      else\n        this._emit(object,  predicate, subject, graph);\n    }\n    return next;\n  }\n\n    // ### `_readBlankNodePunctuation` reads punctuation in a blank node\n  _readBlankNodePunctuation(token) {\n    let next;\n    switch (token.type) {\n    // Semicolon means the subject is shared; predicate and object are different\n    case ';':\n      next = this._readPredicate;\n      break;\n    // Comma means both the subject and predicate are shared; the object is different\n    case ',':\n      next = this._readObject;\n      break;\n    default:\n      return this._error(`Expected punctuation to follow \"${this._object.id}\"`, token);\n    }\n    // A quad has been completed now, so return it\n    this._emit(this._subject, this._predicate, this._object, this._graph);\n    return next;\n  }\n\n  // ### `_readQuadPunctuation` reads punctuation after a quad\n  _readQuadPunctuation(token) {\n    if (token.type !== '.')\n      return this._error('Expected dot to follow quad', token);\n    return this._readInTopContext;\n  }\n\n  // ### `_readPrefix` reads the prefix of a prefix declaration\n  _readPrefix(token) {\n    if (token.type !== 'prefix')\n      return this._error('Expected prefix to follow @prefix', token);\n    this._prefix = token.value;\n    return this._readPrefixIRI;\n  }\n\n  // ### `_readPrefixIRI` reads the IRI of a prefix declaration\n  _readPrefixIRI(token) {\n    if (token.type !== 'IRI')\n      return this._error(`Expected IRI to follow prefix \"${this._prefix}:\"`, token);\n    const prefixNode = this._readEntity(token);\n    this._prefixes[this._prefix] = prefixNode.value;\n    this._prefixCallback(this._prefix, prefixNode);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readBaseIRI` reads the IRI of a base declaration\n  _readBaseIRI(token) {\n    const iri = token.type === 'IRI' && this._resolveIRI(token.value);\n    if (!iri)\n      return this._error('Expected valid IRI to follow base declaration', token);\n    this._setBase(iri);\n    return this._readDeclarationPunctuation;\n  }\n\n  // ### `_readNamedGraphLabel` reads the label of a named graph\n  _readNamedGraphLabel(token) {\n    switch (token.type) {\n    case 'IRI':\n    case 'blank':\n    case 'prefixed':\n      return this._readSubject(token), this._readGraph;\n    case '[':\n      return this._readNamedGraphBlankLabel;\n    default:\n      return this._error('Invalid graph label', token);\n    }\n  }\n\n  // ### `_readNamedGraphLabel` reads a blank node label of a named graph\n  _readNamedGraphBlankLabel(token) {\n    if (token.type !== ']')\n      return this._error('Invalid graph label', token);\n    this._subject = this._blankNode();\n    return this._readGraph;\n  }\n\n  // ### `_readDeclarationPunctuation` reads the punctuation of a declaration\n  _readDeclarationPunctuation(token) {\n    // SPARQL-style declarations don't have punctuation\n    if (this._sparqlStyle) {\n      this._sparqlStyle = false;\n      return this._readInTopContext(token);\n    }\n\n    if (token.type !== '.')\n      return this._error('Expected declaration to end with a dot', token);\n    return this._readInTopContext;\n  }\n\n  // Reads a list of quantified symbols from a @forSome or @forAll statement\n  _readQuantifierList(token) {\n    let entity;\n    switch (token.type) {\n    case 'IRI':\n    case 'prefixed':\n      if ((entity = this._readEntity(token, true)) !== undefined)\n        break;\n    default:\n      return this._error(`Unexpected ${token.type}`, token);\n    }\n    // Without explicit quantifiers, map entities to a quantified entity\n    if (!this._explicitQuantifiers)\n      this._quantified[entity.id] = this._quantifier(this._blankNode().value);\n    // With explicit quantifiers, output the reified quantifier\n    else {\n      // If this is the first item, start a new quantifier list\n      if (this._subject === null)\n        this._emit(this._graph || this.DEFAULTGRAPH, this._predicate,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Otherwise, continue the previous list\n      else\n        this._emit(this._subject, this.RDF_REST,\n                   this._subject = this._blankNode(), this.QUANTIFIERS_GRAPH);\n      // Output the list item\n      this._emit(this._subject, this.RDF_FIRST, entity, this.QUANTIFIERS_GRAPH);\n    }\n    return this._readQuantifierPunctuation;\n  }\n\n  // Reads punctuation from a @forSome or @forAll statement\n  _readQuantifierPunctuation(token) {\n    // Read more quantifiers\n    if (token.type === ',')\n      return this._readQuantifierList;\n    // End of the quantifier list\n    else {\n      // With explicit quantifiers, close the quantifier list\n      if (this._explicitQuantifiers) {\n        this._emit(this._subject, this.RDF_REST, this.RDF_NIL, this.QUANTIFIERS_GRAPH);\n        this._subject = null;\n      }\n      // Read a dot\n      this._readCallback = this._getContextEndReader();\n      return this._readCallback(token);\n    }\n  }\n\n  // ### `_getPathReader` reads a potential path and then resumes with the given function\n  _getPathReader(afterPath) {\n    this._afterPath = afterPath;\n    return this._readPath;\n  }\n\n  // ### `_readPath` reads a potential path\n  _readPath(token) {\n    switch (token.type) {\n    // Forward path\n    case '!': return this._readForwardPath;\n    // Backward path\n    case '^': return this._readBackwardPath;\n    // Not a path; resume reading where we left off\n    default:\n      const stack = this._contextStack, parent = stack.length && stack[stack.length - 1];\n      // If we were reading a list item, we still need to output it\n      if (parent && parent.type === 'item') {\n        // The list item is the remaining subejct after reading the path\n        const item = this._subject;\n        // Switch back to the context of the list\n        this._restoreContext();\n        // Output the list item\n        this._emit(this._subject, this.RDF_FIRST, item, this._graph);\n      }\n      return this._afterPath(token);\n    }\n  }\n\n  // ### `_readForwardPath` reads a '!' path\n  _readForwardPath(token) {\n    let subject, predicate;\n    const object = this._blankNode();\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's object\n    if (this._predicate === null)\n      subject = this._subject, this._subject = object;\n    // If we were reading an object, replace the subject by the path's object\n    else\n      subject = this._object,  this._object  = object;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readBackwardPath` reads a '^' path\n  _readBackwardPath(token) {\n    const subject = this._blankNode();\n    let predicate, object;\n    // The next token is the predicate\n    if ((predicate = this._readEntity(token)) === undefined)\n      return;\n    // If we were reading a subject, replace the subject by the path's subject\n    if (this._predicate === null)\n      object = this._subject, this._subject = subject;\n    // If we were reading an object, replace the subject by the path's subject\n    else\n      object = this._object,  this._object  = subject;\n    // Emit the path's current quad and read its next section\n    this._emit(subject, predicate, object, this._graph);\n    return this._readPath;\n  }\n\n  // ### `_readRDFStarTailOrGraph` reads the graph of a nested RDF* quad or the end of a nested RDF* triple\n  _readRDFStarTailOrGraph(token) {\n    if (token.type !== '>>') {\n      // An entity means this is a quad (only allowed if not already inside a graph)\n      if (this._supportsQuads && this._graph === null && (this._graph = this._readEntity(token)) !== undefined)\n        return this._readRDFStarTail;\n      return this._error(`Expected >> to follow \"${this._object.id}\"`, token);\n    }\n    return this._readRDFStarTail(token);\n  }\n\n  // ### `_readRDFStarTail` reads the end of a nested RDF* triple\n  _readRDFStarTail(token) {\n    if (token.type !== '>>')\n      return this._error(`Expected >> but got ${token.type}`, token);\n    // Read the quad and restore the previous context\n    const quad = this._quad(this._subject, this._predicate, this._object,\n      this._graph || this.DEFAULTGRAPH);\n    this._restoreContext();\n    // If the triple was the subject, continue by reading the predicate.\n    if (this._subject === null) {\n      this._subject = quad;\n      return this._readPredicate;\n    }\n    // If the triple was the object, read context end.\n    else {\n      this._object = quad;\n      return this._getContextEndReader();\n    }\n  }\n\n  // ### `_getContextEndReader` gets the next reader function at the end of a context\n  _getContextEndReader() {\n    const contextStack = this._contextStack;\n    if (!contextStack.length)\n      return this._readPunctuation;\n\n    switch (contextStack[contextStack.length - 1].type) {\n    case 'blank':\n      return this._readBlankNodeTail;\n    case 'list':\n      return this._readListItem;\n    case 'formula':\n      return this._readFormulaTail;\n    case '<<':\n      return this._readRDFStarTailOrGraph;\n    }\n  }\n\n  // ### `_emit` sends a quad through the callback\n  _emit(subject, predicate, object, graph) {\n    this._callback(null, this._quad(subject, predicate, object, graph || this.DEFAULTGRAPH));\n  }\n\n  // ### `_error` emits an error message through the callback\n  _error(message, token) {\n    const err = new Error(`${message} on line ${token.line}.`);\n    err.context = {\n      token: token,\n      line: token.line,\n      previousToken: this._lexer.previousToken,\n    };\n    this._callback(err);\n    this._callback = noop;\n  }\n\n  // ### `_resolveIRI` resolves an IRI against the base path\n  _resolveIRI(iri) {\n    return /^[a-z][a-z0-9+.-]*:/i.test(iri) ? iri : this._resolveRelativeIRI(iri);\n  }\n\n  // ### `_resolveRelativeIRI` resolves an IRI against the base path,\n  // assuming that a base path has been set and that the IRI is indeed relative\n  _resolveRelativeIRI(iri) {\n    // An empty relative IRI indicates the base IRI\n    if (!iri.length)\n      return this._base;\n    // Decide resolving strategy based in the first character\n    switch (iri[0]) {\n    // Resolve relative fragment IRIs against the base IRI\n    case '#': return this._base + iri;\n    // Resolve relative query string IRIs by replacing the query string\n    case '?': return this._base.replace(/(?:\\?.*)?$/, iri);\n    // Resolve root-relative IRIs at the root of the base IRI\n    case '/':\n      // Resolve scheme-relative IRIs to the scheme\n      return (iri[1] === '/' ? this._baseScheme : this._baseRoot) + this._removeDotSegments(iri);\n    // Resolve all other IRIs at the base IRI's path\n    default:\n      // Relative IRIs cannot contain a colon in the first path segment\n      return (/^[^/:]*:/.test(iri)) ? null : this._removeDotSegments(this._basePath + iri);\n    }\n  }\n\n  // ### `_removeDotSegments` resolves './' and '../' path segments in an IRI as per RFC3986\n  _removeDotSegments(iri) {\n    // Don't modify the IRI if it does not contain any dot segments\n    if (!/(^|\\/)\\.\\.?($|[/#?])/.test(iri))\n      return iri;\n\n    // Start with an imaginary slash before the IRI in order to resolve trailing './' and '../'\n    const length = iri.length;\n    let result = '', i = -1, pathStart = -1, segmentStart = 0, next = '/';\n\n    while (i < length) {\n      switch (next) {\n      // The path starts with the first slash after the authority\n      case ':':\n        if (pathStart < 0) {\n          // Skip two slashes before the authority\n          if (iri[++i] === '/' && iri[++i] === '/')\n            // Skip to slash after the authority\n            while ((pathStart = i + 1) < length && iri[pathStart] !== '/')\n              i = pathStart;\n        }\n        break;\n      // Don't modify a query string or fragment\n      case '?':\n      case '#':\n        i = length;\n        break;\n      // Handle '/.' or '/..' path segments\n      case '/':\n        if (iri[i + 1] === '.') {\n          next = iri[++i + 1];\n          switch (next) {\n          // Remove a '/.' segment\n          case '/':\n            result += iri.substring(segmentStart, i - 1);\n            segmentStart = i + 1;\n            break;\n          // Remove a trailing '/.' segment\n          case undefined:\n          case '?':\n          case '#':\n            return result + iri.substring(segmentStart, i) + iri.substr(i + 1);\n          // Remove a '/..' segment\n          case '.':\n            next = iri[++i + 1];\n            if (next === undefined || next === '/' || next === '?' || next === '#') {\n              result += iri.substring(segmentStart, i - 2);\n              // Try to remove the parent path from result\n              if ((segmentStart = result.lastIndexOf('/')) >= pathStart)\n                result = result.substr(0, segmentStart);\n              // Remove a trailing '/..' segment\n              if (next !== '/')\n                return `${result}/${iri.substr(i + 1)}`;\n              segmentStart = i + 1;\n            }\n          }\n        }\n      }\n      next = iri[++i];\n    }\n    return result + iri.substring(segmentStart);\n  }\n\n  // ## Public methods\n\n  // ### `parse` parses the N3 input and emits each parsed quad through the callback\n  parse(input, quadCallback, prefixCallback) {\n    // The read callback is the next function to be executed when a token arrives.\n    // We start reading in the top context.\n    this._readCallback = this._readInTopContext;\n    this._sparqlStyle = false;\n    this._prefixes = Object.create(null);\n    this._prefixes._ = this._blankNodePrefix ? this._blankNodePrefix.substr(2)\n                                             : `b${blankNodePrefix++}_`;\n    this._prefixCallback = prefixCallback || noop;\n    this._inversePredicate = false;\n    this._quantified = Object.create(null);\n\n    // Parse synchronously if no quad callback is given\n    if (!quadCallback) {\n      const quads = [];\n      let error;\n      this._callback = (e, t) => { e ? (error = e) : t && quads.push(t); };\n      this._lexer.tokenize(input).every(token => {\n        return this._readCallback = this._readCallback(token);\n      });\n      if (error) throw error;\n      return quads;\n    }\n\n    // Parse asynchronously otherwise, executing the read callback when a token arrives\n    this._callback = quadCallback;\n    this._lexer.tokenize(input, (error, token) => {\n      if (error !== null)\n        this._callback(error), this._callback = noop;\n      else if (this._readCallback)\n        this._readCallback = this._readCallback(token);\n    });\n  }\n}\n\n// The empty function\nfunction noop() {}\n\n// Initializes the parser with the given data factory\nfunction initDataFactory(parser, factory) {\n  // Set factory methods\n  const namedNode = factory.namedNode;\n  parser._namedNode   = namedNode;\n  parser._blankNode   = factory.blankNode;\n  parser._literal     = factory.literal;\n  parser._variable    = factory.variable;\n  parser._quad        = factory.quad;\n  parser.DEFAULTGRAPH = factory.defaultGraph();\n\n  // Set common named nodes\n  parser.RDF_FIRST  = namedNode(namespaces.rdf.first);\n  parser.RDF_REST   = namedNode(namespaces.rdf.rest);\n  parser.RDF_NIL    = namedNode(namespaces.rdf.nil);\n  parser.N3_FORALL  = namedNode(namespaces.r.forAll);\n  parser.N3_FORSOME = namedNode(namespaces.r.forSome);\n  parser.ABBREVIATIONS = {\n    'a': namedNode(namespaces.rdf.type),\n    '=': namedNode(namespaces.owl.sameAs),\n    '>': namedNode(namespaces.log.implies),\n  };\n  parser.QUANTIFIERS_GRAPH = namedNode('urn:n3:quantifiers');\n}\ninitDataFactory(N3Parser.prototype, N3DataFactory);\n","// **N3Writer** writes N3 documents.\nimport namespaces from './IRIs';\nimport { default as N3DataFactory, Term } from './N3DataFactory';\nimport { isDefaultGraph } from './N3Util';\n\nconst DEFAULTGRAPH = N3DataFactory.defaultGraph();\n\nconst { rdf, xsd } = namespaces;\n\n// Characters in literals that require escaping\nconst escape    = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019\\ud800-\\udbff]/,\n    escapeAll = /[\"\\\\\\t\\n\\r\\b\\f\\u0000-\\u0019]|[\\ud800-\\udbff][\\udc00-\\udfff]/g,\n    escapedCharacters = {\n      '\\\\': '\\\\\\\\', '\"': '\\\\\"', '\\t': '\\\\t',\n      '\\n': '\\\\n', '\\r': '\\\\r', '\\b': '\\\\b', '\\f': '\\\\f',\n    };\n\n// ## Placeholder class to represent already pretty-printed terms\nclass SerializedTerm extends Term {\n  // Pretty-printed nodes are not equal to any other node\n  // (e.g., [] does not equal [])\n  equals() {\n    return false;\n  }\n}\n\n// ## Constructor\nexport default class N3Writer {\n  constructor(outputStream, options) {\n    // ### `_prefixRegex` matches a prefixed name or IRI that begins with one of the added prefixes\n    this._prefixRegex = /$0^/;\n\n    // Shift arguments if the first argument is not a stream\n    if (outputStream && typeof outputStream.write !== 'function')\n      options = outputStream, outputStream = null;\n    options = options || {};\n    this._lists = options.lists;\n\n    // If no output stream given, send the output as string through the end callback\n    if (!outputStream) {\n      let output = '';\n      this._outputStream = {\n        write(chunk, encoding, done) { output += chunk; done && done(); },\n        end: done => { done && done(null, output); },\n      };\n      this._endStream = true;\n    }\n    else {\n      this._outputStream = outputStream;\n      this._endStream = options.end === undefined ? true : !!options.end;\n    }\n\n    // Initialize writer, depending on the format\n    this._subject = null;\n    if (!(/triple|quad/i).test(options.format)) {\n      this._lineMode = false;\n      this._graph = DEFAULTGRAPH;\n      this._prefixIRIs = Object.create(null);\n      options.prefixes && this.addPrefixes(options.prefixes);\n      if (options.baseIRI) {\n        this._baseMatcher = new RegExp(`^${escapeRegex(options.baseIRI)\n            }${options.baseIRI.endsWith('/') ? '' : '[#?]'}`);\n        this._baseLength = options.baseIRI.length;\n      }\n    }\n    else {\n      this._lineMode = true;\n      this._writeQuad = this._writeQuadLine;\n    }\n  }\n\n  // ## Private methods\n\n  // ### Whether the current graph is the default graph\n  get _inDefaultGraph() {\n    return DEFAULTGRAPH.equals(this._graph);\n  }\n\n  // ### `_write` writes the argument to the output stream\n  _write(string, callback) {\n    this._outputStream.write(string, 'utf8', callback);\n  }\n\n  // ### `_writeQuad` writes the quad to the output stream\n  _writeQuad(subject, predicate, object, graph, done) {\n    try {\n      // Write the graph's label if it has changed\n      if (!graph.equals(this._graph)) {\n        // Close the previous graph and start the new one\n        this._write((this._subject === null ? '' : (this._inDefaultGraph ? '.\\n' : '\\n}\\n')) +\n                    (DEFAULTGRAPH.equals(graph) ? '' : `${this._encodeIriOrBlank(graph)} {\\n`));\n        this._graph = graph;\n        this._subject = null;\n      }\n      // Don't repeat the subject if it's the same\n      if (subject.equals(this._subject)) {\n        // Don't repeat the predicate if it's the same\n        if (predicate.equals(this._predicate))\n          this._write(`, ${this._encodeObject(object)}`, done);\n        // Same subject, different predicate\n        else\n          this._write(`;\\n    ${\n                      this._encodePredicate(this._predicate = predicate)} ${\n                      this._encodeObject(object)}`, done);\n      }\n      // Different subject; write the whole quad\n      else\n        this._write(`${(this._subject === null ? '' : '.\\n') +\n                    this._encodeSubject(this._subject = subject)} ${\n                    this._encodePredicate(this._predicate = predicate)} ${\n                    this._encodeObject(object)}`, done);\n    }\n    catch (error) { done && done(error); }\n  }\n\n  // ### `_writeQuadLine` writes the quad to the output stream as a single line\n  _writeQuadLine(subject, predicate, object, graph, done) {\n    // Write the quad without prefixes\n    delete this._prefixMatch;\n    this._write(this.quadToString(subject, predicate, object, graph), done);\n  }\n\n  // ### `quadToString` serializes a quad as a string\n  quadToString(subject, predicate, object, graph) {\n    return  `${this._encodeSubject(subject)} ${\n            this._encodeIriOrBlank(predicate)} ${\n            this._encodeObject(object)\n            }${graph && graph.value ? ` ${this._encodeIriOrBlank(graph)} .\\n` : ' .\\n'}`;\n  }\n\n  // ### `quadsToString` serializes an array of quads as a string\n  quadsToString(quads) {\n    return quads.map(t => {\n      return this.quadToString(t.subject, t.predicate, t.object, t.graph);\n    }).join('');\n  }\n\n  // ### `_encodeSubject` represents a subject\n  _encodeSubject(entity) {\n    return entity.termType === 'Quad' ?\n      this._encodeQuad(entity) : this._encodeIriOrBlank(entity);\n  }\n\n  // ### `_encodeIriOrBlank` represents an IRI or blank node\n  _encodeIriOrBlank(entity) {\n    // A blank node or list is represented as-is\n    if (entity.termType !== 'NamedNode') {\n      // If it is a list head, pretty-print it\n      if (this._lists && (entity.value in this._lists))\n        entity = this.list(this._lists[entity.value]);\n      return 'id' in entity ? entity.id : `_:${entity.value}`;\n    }\n    let iri = entity.value;\n    // Use relative IRIs if requested and possible\n    if (this._baseMatcher && this._baseMatcher.test(iri))\n      iri = iri.substr(this._baseLength);\n    // Escape special characters\n    if (escape.test(iri))\n      iri = iri.replace(escapeAll, characterReplacer);\n    // Try to represent the IRI as prefixed name\n    const prefixMatch = this._prefixRegex.exec(iri);\n    return !prefixMatch ? `<${iri}>` :\n           (!prefixMatch[1] ? iri : this._prefixIRIs[prefixMatch[1]] + prefixMatch[2]);\n  }\n\n  // ### `_encodeLiteral` represents a literal\n  _encodeLiteral(literal) {\n    // Escape special characters\n    let value = literal.value;\n    if (escape.test(value))\n      value = value.replace(escapeAll, characterReplacer);\n\n    // Write a language-tagged literal\n    if (literal.language)\n      return `\"${value}\"@${literal.language}`;\n\n    // Write dedicated literals per data type\n    if (this._lineMode) {\n      // Only abbreviate strings in N-Triples or N-Quads\n      if (literal.datatype.value === xsd.string)\n        return `\"${value}\"`;\n    }\n    else {\n      // Use common datatype abbreviations in Turtle or TriG\n      switch (literal.datatype.value) {\n      case xsd.string:\n        return `\"${value}\"`;\n      case xsd.boolean:\n        if (value === 'true' || value === 'false')\n          return value;\n        break;\n      case xsd.integer:\n        if (/^[+-]?\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.decimal:\n        if (/^[+-]?\\d*\\.\\d+$/.test(value))\n          return value;\n        break;\n      case xsd.double:\n        if (/^[+-]?(?:\\d+\\.\\d*|\\.?\\d+)[eE][+-]?\\d+$/.test(value))\n          return value;\n        break;\n      }\n    }\n\n    // Write a regular datatyped literal\n    return `\"${value}\"^^${this._encodeIriOrBlank(literal.datatype)}`;\n  }\n\n  // ### `_encodePredicate` represents a predicate\n  _encodePredicate(predicate) {\n    return predicate.value === rdf.type ? 'a' : this._encodeIriOrBlank(predicate);\n  }\n\n  // ### `_encodeObject` represents an object\n  _encodeObject(object) {\n    switch (object.termType) {\n    case 'Quad':\n      return this._encodeQuad(object);\n    case 'Literal':\n      return this._encodeLiteral(object);\n    default:\n      return this._encodeIriOrBlank(object);\n    }\n  }\n\n  // ### `_encodeQuad` encodes an RDF* quad\n  _encodeQuad({ subject, predicate, object, graph }) {\n    return `<<${\n      this._encodeSubject(subject)} ${\n      this._encodePredicate(predicate)} ${\n      this._encodeObject(object)}${\n      isDefaultGraph(graph) ? '' : ` ${this._encodeIriOrBlank(graph)}`}>>`;\n  }\n\n  // ### `_blockedWrite` replaces `_write` after the writer has been closed\n  _blockedWrite() {\n    throw new Error('Cannot write because the writer has been closed.');\n  }\n\n  // ### `addQuad` adds the quad to the output stream\n  addQuad(subject, predicate, object, graph, done) {\n    // The quad was given as an object, so shift parameters\n    if (object === undefined)\n      this._writeQuad(subject.subject, subject.predicate, subject.object, subject.graph, predicate);\n    // The optional `graph` parameter was not provided\n    else if (typeof graph === 'function')\n      this._writeQuad(subject, predicate, object, DEFAULTGRAPH, graph);\n    // The `graph` parameter was provided\n    else\n      this._writeQuad(subject, predicate, object, graph || DEFAULTGRAPH, done);\n  }\n\n  // ### `addQuads` adds the quads to the output stream\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `addPrefix` adds the prefix to the output stream\n  addPrefix(prefix, iri, done) {\n    const prefixes = {};\n    prefixes[prefix] = iri;\n    this.addPrefixes(prefixes, done);\n  }\n\n  // ### `addPrefixes` adds the prefixes to the output stream\n  addPrefixes(prefixes, done) {\n    // Ignore prefixes if not supported by the serialization\n    if (!this._prefixIRIs)\n      return done && done();\n\n    // Write all new prefixes\n    let hasPrefixes = false;\n    for (let prefix in prefixes) {\n      let iri = prefixes[prefix];\n      if (typeof iri !== 'string')\n        iri = iri.value;\n      hasPrefixes = true;\n      // Finish a possible pending quad\n      if (this._subject !== null) {\n        this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n        this._subject = null, this._graph = '';\n      }\n      // Store and write the prefix\n      this._prefixIRIs[iri] = (prefix += ':');\n      this._write(`@prefix ${prefix} <${iri}>.\\n`);\n    }\n    // Recreate the prefix matcher\n    if (hasPrefixes) {\n      let IRIlist = '', prefixList = '';\n      for (const prefixIRI in this._prefixIRIs) {\n        IRIlist += IRIlist ? `|${prefixIRI}` : prefixIRI;\n        prefixList += (prefixList ? '|' : '') + this._prefixIRIs[prefixIRI];\n      }\n      IRIlist = escapeRegex(IRIlist, /[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n      this._prefixRegex = new RegExp(`^(?:${prefixList})[^\\/]*$|` +\n                                     `^(${IRIlist})([a-zA-Z][\\\\-_a-zA-Z0-9]*)$`);\n    }\n    // End a prefix block with a newline\n    this._write(hasPrefixes ? '\\n' : '', done);\n  }\n\n  // ### `blank` creates a blank node with the given content\n  blank(predicate, object) {\n    let children = predicate, child, length;\n    // Empty blank node\n    if (predicate === undefined)\n      children = [];\n    // Blank node passed as blank(Term(\"predicate\"), Term(\"object\"))\n    else if (predicate.termType)\n      children = [{ predicate: predicate, object: object }];\n    // Blank node passed as blank({ predicate: predicate, object: object })\n    else if (!('length' in predicate))\n      children = [predicate];\n\n    switch (length = children.length) {\n    // Generate an empty blank node\n    case 0:\n      return new SerializedTerm('[]');\n    // Generate a non-nested one-triple blank node\n    case 1:\n      child = children[0];\n      if (!(child.object instanceof SerializedTerm))\n        return new SerializedTerm(`[ ${this._encodePredicate(child.predicate)} ${\n                                  this._encodeObject(child.object)} ]`);\n    // Generate a multi-triple or nested blank node\n    default:\n      let contents = '[';\n      // Write all triples in order\n      for (let i = 0; i < length; i++) {\n        child = children[i];\n        // Write only the object is the predicate is the same as the previous\n        if (child.predicate.equals(predicate))\n          contents += `, ${this._encodeObject(child.object)}`;\n        // Otherwise, write the predicate and the object\n        else {\n          contents += `${(i ? ';\\n  ' : '\\n  ') +\n                      this._encodePredicate(child.predicate)} ${\n                      this._encodeObject(child.object)}`;\n          predicate = child.predicate;\n        }\n      }\n      return new SerializedTerm(`${contents}\\n]`);\n    }\n  }\n\n  // ### `list` creates a list node with the given content\n  list(elements) {\n    const length = elements && elements.length || 0, contents = new Array(length);\n    for (let i = 0; i < length; i++)\n      contents[i] = this._encodeObject(elements[i]);\n    return new SerializedTerm(`(${contents.join(' ')})`);\n  }\n\n  // ### `end` signals the end of the output stream\n  end(done) {\n    // Finish a possible pending quad\n    if (this._subject !== null) {\n      this._write(this._inDefaultGraph ? '.\\n' : '\\n}\\n');\n      this._subject = null;\n    }\n    // Disallow further writing\n    this._write = this._blockedWrite;\n\n    // Try to end the underlying stream, ensuring done is called exactly one time\n    let singleDone = done && ((error, result) => { singleDone = null, done(error, result); });\n    if (this._endStream) {\n      try { return this._outputStream.end(singleDone); }\n      catch (error) { /* error closing stream */ }\n    }\n    singleDone && singleDone();\n  }\n}\n\n// Replaces a character by its escaped version\nfunction characterReplacer(character) {\n  // Replace a single character by its escaped version\n  let result = escapedCharacters[character];\n  if (result === undefined) {\n    // Replace a single character with its 4-bit unicode escape sequence\n    if (character.length === 1) {\n      result = character.charCodeAt(0).toString(16);\n      result = '\\\\u0000'.substr(0, 6 - result.length) + result;\n    }\n    // Replace a surrogate pair with its 8-bit unicode escape sequence\n    else {\n      result = ((character.charCodeAt(0) - 0xD800) * 0x400 +\n                 character.charCodeAt(1) + 0x2400).toString(16);\n      result = '\\\\U00000000'.substr(0, 10 - result.length) + result;\n    }\n  }\n  return result;\n}\n\nfunction escapeRegex(regex) {\n  return regex.replace(/[\\]\\/\\(\\)\\*\\+\\?\\.\\\\\\$]/g, '\\\\$&');\n}\n","module.exports = require('stream');\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nconst codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n\n  function getMessage (arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message\n    } else {\n      return message(arg1, arg2, arg3)\n    }\n  }\n\n  class NodeError extends Base {\n    constructor (arg1, arg2, arg3) {\n      super(getMessage(arg1, arg2, arg3));\n    }\n  }\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    const len = expected.length;\n    expected = expected.map((i) => String(i));\n    if (len > 2) {\n      return `one of ${thing} ${expected.slice(0, len - 1).join(', ')}, or ` +\n             expected[len - 1];\n    } else if (len === 2) {\n      return `one of ${thing} ${expected[0]} or ${expected[1]}`;\n    } else {\n      return `of ${thing} ${expected[0]}`;\n    }\n  } else {\n    return `of ${thing} ${String(expected)}`;\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n\treturn str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n\tif (this_len === undefined || this_len > str.length) {\n\t\tthis_len = str.length;\n\t}\n\treturn str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"'\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  let determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  let msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = `The ${name} ${determiner} ${oneOf(expected, 'type')}`;\n  } else {\n    const type = includes(name, '.') ? 'property' : 'argument';\n    msg = `The \"${name}\" ${type} ${determiner} ${oneOf(expected, 'type')}`;\n  }\n\n  msg += `. Received type ${typeof actual}`;\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented'\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\n\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar ERR_INVALID_ARG_TYPE = require('../../../errors').codes.ERR_INVALID_ARG_TYPE;\n\nfunction from(Readable, iterable, opts) {\n  var iterator;\n\n  if (iterable && typeof iterable.next === 'function') {\n    iterator = iterable;\n  } else if (iterable && iterable[Symbol.asyncIterator]) iterator = iterable[Symbol.asyncIterator]();else if (iterable && iterable[Symbol.iterator]) iterator = iterable[Symbol.iterator]();else throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable);\n\n  var readable = new Readable(_objectSpread({\n    objectMode: true\n  }, opts)); // Reading boolean to protect against _read\n  // being called before last iteration completion.\n\n  var reading = false;\n\n  readable._read = function () {\n    if (!reading) {\n      reading = true;\n      next();\n    }\n  };\n\n  function next() {\n    return _next2.apply(this, arguments);\n  }\n\n  function _next2() {\n    _next2 = _asyncToGenerator(function* () {\n      try {\n        var _ref = yield iterator.next(),\n            value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          readable.push(null);\n        } else if (readable.push((yield value))) {\n          next();\n        } else {\n          reading = false;\n        }\n      } catch (err) {\n        readable.destroy(err);\n      }\n    });\n    return _next2.apply(this, arguments);\n  }\n\n  return readable;\n}\n\nmodule.exports = from;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","var Stream = require('stream');\nif (process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream.Readable;\n  Object.assign(module.exports, Stream);\n  module.exports.Stream = Stream;\n} else {\n  exports = module.exports = require('./lib/_stream_readable.js');\n  exports.Stream = Stream || exports;\n  exports.Readable = exports;\n  exports.Writable = require('./lib/_stream_writable.js');\n  exports.Duplex = require('./lib/_stream_duplex.js');\n  exports.Transform = require('./lib/_stream_transform.js');\n  exports.PassThrough = require('./lib/_stream_passthrough.js');\n  exports.finished = require('./lib/internal/streams/end-of-stream.js');\n  exports.pipeline = require('./lib/internal/streams/pipeline.js');\n}\n","// **N3Store** objects store N3 quads by graph in memory.\nimport { default as N3DataFactory, termToId, termFromId } from './N3DataFactory';\nimport { Readable } from 'readable-stream';\nimport namespaces from './IRIs';\n\n// ## Constructor\nexport default class N3Store {\n  constructor(quads, options) {\n    // The number of quads is initially zero\n    this._size = 0;\n    // `_graphs` contains subject, predicate, and object indexes per graph\n    this._graphs = Object.create(null);\n    // `_ids` maps entities such as `http://xmlns.com/foaf/0.1/name` to numbers,\n    // saving memory by using only numbers as keys in `_graphs`\n    this._id = 0;\n    this._ids = Object.create(null);\n    this._ids['><'] = 0; // dummy entry, so the first actual key is non-zero\n    this._entities = Object.create(null); // inverse of `_ids`\n    // `_blankNodeIndex` is the index of the last automatically named blank node\n    this._blankNodeIndex = 0;\n\n    // Shift parameters if `quads` is not given\n    if (!options && quads && !quads[0])\n      options = quads, quads = null;\n    options = options || {};\n    this._factory = options.factory || N3DataFactory;\n\n    // Add quads if passed\n    if (quads)\n      this.addQuads(quads);\n  }\n\n  // ## Public properties\n\n  // ### `size` returns the number of quads in the store\n  get size() {\n    // Return the quad count if if was cached\n    let size = this._size;\n    if (size !== null)\n      return size;\n\n    // Calculate the number of quads by counting to the deepest level\n    size = 0;\n    const graphs = this._graphs;\n    let subjects, subject;\n    for (const graphKey in graphs)\n      for (const subjectKey in (subjects = graphs[graphKey].subjects))\n        for (const predicateKey in (subject = subjects[subjectKey]))\n          size += Object.keys(subject[predicateKey]).length;\n    return this._size = size;\n  }\n\n  // ## Private methods\n\n  // ### `_addToIndex` adds a quad to a three-layered index.\n  // Returns if the index has changed, if the entry did not already exist.\n  _addToIndex(index0, key0, key1, key2) {\n    // Create layers as necessary\n    const index1 = index0[key0] || (index0[key0] = {});\n    const index2 = index1[key1] || (index1[key1] = {});\n    // Setting the key to _any_ value signals the presence of the quad\n    const existed = key2 in index2;\n    if (!existed)\n      index2[key2] = null;\n    return !existed;\n  }\n\n  // ### `_removeFromIndex` removes a quad from a three-layered index\n  _removeFromIndex(index0, key0, key1, key2) {\n    // Remove the quad from the index\n    const index1 = index0[key0], index2 = index1[key1];\n    delete index2[key2];\n\n    // Remove intermediary index layers if they are empty\n    for (const key in index2) return;\n    delete index1[key1];\n    for (const key in index1) return;\n    delete index0[key0];\n  }\n\n  // ### `_findInIndex` finds a set of quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  // `name0`, `name1`, and `name2` are the names of the keys at each level,\n  // used when reconstructing the resulting quad\n  // (for instance: _subject_, _predicate_, and _object_).\n  // Finally, `graph` will be the graph of the created quads.\n  // If `callback` is given, each result is passed through it\n  // and iteration halts when it returns truthy for any quad.\n  // If instead `array` is given, each result is added to the array.\n  _findInIndex(index0, key0, key1, key2, name0, name1, name2, graph, callback, array) {\n    let tmp, index1, index2;\n    // Depending on the number of variables, keys or reverse index are faster\n    const varCount = !key0 + !key1 + !key2,\n        entityKeys = varCount > 1 ? Object.keys(this._ids) : this._entities;\n\n    // If a key is specified, use only that part of index 0.\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      const entity0 = entityKeys[value0];\n\n      if (index1 = index0[value0]) {\n        // If a key is specified, use only that part of index 1.\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          const entity1 = entityKeys[value1];\n\n          if (index2 = index1[value1]) {\n            // If a key is specified, use only that part of index 2, if it exists.\n            const values = key2 ? (key2 in index2 ? [key2] : []) : Object.keys(index2);\n            // Create quads for all items found in index 2.\n            for (let l = 0; l < values.length; l++) {\n              const parts = { subject: null, predicate: null, object: null };\n              parts[name0] = termFromId(entity0, this._factory);\n              parts[name1] = termFromId(entity1, this._factory);\n              parts[name2] = termFromId(entityKeys[values[l]], this._factory);\n              const quad = this._factory.quad(\n                parts.subject, parts.predicate, parts.object, termFromId(graph, this._factory));\n              if (array)\n                array.push(quad);\n              else if (callback(quad))\n                return true;\n            }\n          }\n        }\n      }\n    }\n    return array;\n  }\n\n  // ### `_loop` executes the callback on all keys of index 0\n  _loop(index0, callback) {\n    for (const key0 in index0)\n      callback(key0);\n  }\n\n  // ### `_loopByKey0` executes the callback on all keys of a certain entry in index 0\n  _loopByKey0(index0, key0, callback) {\n    let index1, key1;\n    if (index1 = index0[key0]) {\n      for (key1 in index1)\n        callback(key1);\n    }\n  }\n\n  // ### `_loopByKey1` executes the callback on given keys of all entries in index 0\n  _loopByKey1(index0, key1, callback) {\n    let key0, index1;\n    for (key0 in index0) {\n      index1 = index0[key0];\n      if (index1[key1])\n        callback(key0);\n    }\n  }\n\n  // ### `_loopBy2Keys` executes the callback on given keys of certain entries in index 2\n  _loopBy2Keys(index0, key0, key1, callback) {\n    let index1, index2, key2;\n    if ((index1 = index0[key0]) && (index2 = index1[key1])) {\n      for (key2 in index2)\n        callback(key2);\n    }\n  }\n\n  // ### `_countInIndex` counts matching quads in a three-layered index.\n  // The index base is `index0` and the keys at each level are `key0`, `key1`, and `key2`.\n  // Any of these keys can be undefined, which is interpreted as a wildcard.\n  _countInIndex(index0, key0, key1, key2) {\n    let count = 0, tmp, index1, index2;\n\n    // If a key is specified, count only that part of index 0\n    if (key0) (tmp = index0, index0 = {})[key0] = tmp[key0];\n    for (const value0 in index0) {\n      if (index1 = index0[value0]) {\n        // If a key is specified, count only that part of index 1\n        if (key1) (tmp = index1, index1 = {})[key1] = tmp[key1];\n        for (const value1 in index1) {\n          if (index2 = index1[value1]) {\n            // If a key is specified, count the quad if it exists\n            if (key2) (key2 in index2) && count++;\n            // Otherwise, count all quads\n            else count += Object.keys(index2).length;\n          }\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `_getGraphs` returns an array with the given graph,\n  // or all graphs if the argument is null or undefined.\n  _getGraphs(graph) {\n    if (!isString(graph))\n      return this._graphs;\n    const graphs = {};\n    graphs[graph] = this._graphs[graph];\n    return graphs;\n  }\n\n  // ### `_uniqueEntities` returns a function that accepts an entity ID\n  // and passes the corresponding entity to callback if it hasn't occurred before.\n  _uniqueEntities(callback) {\n    const uniqueIds = Object.create(null);\n    return id => {\n      if (!(id in uniqueIds)) {\n        uniqueIds[id] = true;\n        callback(termFromId(this._entities[id], this._factory));\n      }\n    };\n  }\n\n  // ## Public methods\n\n  // ### `add` adds the specified quad to the dataset.\n  // Returns the dataset instance it was called on.\n  // Existing quads, as defined in Quad.equals, will be ignored.\n  add(quad) {\n    this.addQuad(quad);\n    return this;\n  }\n\n  // ### `addQuad` adds a new quad to the store.\n  // Returns if the quad index has changed, if the quad did not already exist.\n  addQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find the graph that will contain the triple\n    let graphItem = this._graphs[graph];\n    // Create the graph if it doesn't exist yet\n    if (!graphItem) {\n      graphItem = this._graphs[graph] = { subjects: {}, predicates: {}, objects: {} };\n      // Freezing a graph helps subsequent `add` performance,\n      // and properties will never be modified anyway\n      Object.freeze(graphItem);\n    }\n\n    // Since entities can often be long IRIs, we avoid storing them in every index.\n    // Instead, we have a separate index that maps entities to numbers,\n    // which are then used as keys in the other indexes.\n    const ids = this._ids;\n    const entities = this._entities;\n    subject   = ids[subject]   || (ids[entities[++this._id] = subject]   = this._id);\n    predicate = ids[predicate] || (ids[entities[++this._id] = predicate] = this._id);\n    object    = ids[object]    || (ids[entities[++this._id] = object]    = this._id);\n\n    const changed = this._addToIndex(graphItem.subjects,   subject,   predicate, object);\n    this._addToIndex(graphItem.predicates, predicate, object,    subject);\n    this._addToIndex(graphItem.objects,    object,    subject,   predicate);\n\n    // The cached quad count is now invalid\n    this._size = null;\n    return changed;\n  }\n\n  // ### `addQuads` adds multiple quads to the store\n  addQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.addQuad(quads[i]);\n  }\n\n  // ### `delete` removes the specified quad from the dataset.\n  // Returns the dataset instance it was called on.\n  delete(quad) {\n    this.removeQuad(quad);\n    return this;\n  }\n\n  // ### `has` determines whether a dataset includes a certain quad.\n  // Returns true or false as appropriate.\n  has(quad) {\n    const quads = this.getQuads(quad.subject, quad.predicate, quad.object, quad.graph);\n    return quads.length !== 0;\n  }\n\n  // ### `import` adds a stream of quads to the store\n  import(stream) {\n    stream.on('data', quad => { this.addQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeQuad` removes a quad from the store if it exists\n  removeQuad(subject, predicate, object, graph) {\n    // Shift arguments if a quad object is given instead of components\n    if (!predicate)\n      graph = subject.graph, object = subject.object,\n        predicate = subject.predicate, subject = subject.subject;\n\n    // Convert terms to internal string representation\n    subject = termToId(subject);\n    predicate = termToId(predicate);\n    object = termToId(object);\n    graph = termToId(graph);\n\n    // Find internal identifiers for all components\n    // and verify the quad exists.\n    const ids = this._ids, graphs = this._graphs;\n    let graphItem, subjects, predicates;\n    if (!(subject    = ids[subject]) || !(predicate = ids[predicate]) ||\n        !(object     = ids[object])  || !(graphItem = graphs[graph])  ||\n        !(subjects   = graphItem.subjects[subject]) ||\n        !(predicates = subjects[predicate]) ||\n        !(object in predicates))\n      return false;\n\n    // Remove it from all indexes\n    this._removeFromIndex(graphItem.subjects,   subject,   predicate, object);\n    this._removeFromIndex(graphItem.predicates, predicate, object,    subject);\n    this._removeFromIndex(graphItem.objects,    object,    subject,   predicate);\n    if (this._size !== null) this._size--;\n\n    // Remove the graph if it is empty\n    for (subject in graphItem.subjects) return true;\n    delete graphs[graph];\n    return true;\n  }\n\n  // ### `removeQuads` removes multiple quads from the store\n  removeQuads(quads) {\n    for (let i = 0; i < quads.length; i++)\n      this.removeQuad(quads[i]);\n  }\n\n  // ### `remove` removes a stream of quads from the store\n  remove(stream) {\n    stream.on('data', quad => { this.removeQuad(quad); });\n    return stream;\n  }\n\n  // ### `removeMatches` removes all matching quads from the store\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  removeMatches(subject, predicate, object, graph) {\n    const stream = new Readable({ objectMode: true });\n\n    stream._read = () => {\n      for (const quad of this.getQuads(subject, predicate, object, graph))\n        stream.push(quad);\n      stream.push(null);\n    };\n\n    return this.remove(stream);\n  }\n\n  // ### `deleteGraph` removes all triples with the given graph from the store\n  deleteGraph(graph) {\n    return this.removeMatches(null, null, null, graph);\n  }\n\n  // ### `getQuads` returns an array of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const quads = [], graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return quads;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the object index will be the fastest\n            this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                              'object', 'subject', 'predicate', graphId, null, quads);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            this._findInIndex(content.subjects, subjectId, predicateId, null,\n                              'subject', 'predicate', 'object', graphId, null, quads);\n        }\n        else if (predicateId)\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          this._findInIndex(content.predicates, predicateId, objectId, null,\n                            'predicate', 'object', 'subject', graphId, null, quads);\n        else if (objectId)\n          // If only object is given, the object index will be the fastest\n          this._findInIndex(content.objects, objectId, null, null,\n                            'object', 'subject', 'predicate', graphId, null, quads);\n        else\n          // If nothing is given, iterate subjects and predicates first\n          this._findInIndex(content.subjects, null, null, null,\n                            'subject', 'predicate', 'object', graphId, null, quads);\n      }\n    }\n    return quads;\n  }\n\n  // ### `match` returns a new dataset that is comprised of all quads in the current instance matching the given arguments.\n  // The logic described in Quad Matching is applied for each quad in this dataset to check if it should be included in the output dataset.\n  // Note: This method always returns a new DatasetCore, even if that dataset contains no quads.\n  // Note: Since a DatasetCore is an unordered set, the order of the quads within the returned sequence is arbitrary.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  // For backwards compatibility, the object return also implements the Readable stream interface.\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this, subject, predicate, object, graph);\n  }\n\n  // ### `countQuads` returns the number of quads matching a pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  countQuads(subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let count = 0, content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return 0;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subject) {\n          if (object)\n            // If subject and object are given, the object index will be the fastest\n            count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            count += this._countInIndex(content.subjects, subjectId, predicateId, objectId);\n        }\n        else if (predicate) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          count += this._countInIndex(content.predicates, predicateId, objectId, subjectId);\n        }\n        else {\n          // If only object is possibly given, the object index will be the fastest\n          count += this._countInIndex(content.objects, objectId, subjectId, predicateId);\n        }\n      }\n    }\n    return count;\n  }\n\n  // ### `forEach` executes the callback on all quads.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forEach(callback, subject, predicate, object, graph) {\n    this.some(quad => {\n      callback(quad);\n      return false;\n    }, subject, predicate, object, graph);\n  }\n\n  // ### `every` executes the callback on all quads,\n  // and returns `true` if it returns truthy for all them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  every(callback, subject, predicate, object, graph) {\n    let some = false;\n    const every = !this.some(quad => {\n      some = true;\n      return !callback(quad);\n    }, subject, predicate, object, graph);\n    return some && every;\n  }\n\n  // ### `some` executes the callback on all quads,\n  // and returns `true` if it returns truthy for any of them.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  some(callback, subject, predicate, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const graphs = this._getGraphs(graph), ids = this._ids;\n    let content, subjectId, predicateId, objectId;\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject])   ||\n        isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return false;\n\n    for (const graphId in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graphId]) {\n        // Choose the optimal index, based on what fields are present\n        if (subjectId) {\n          if (objectId) {\n          // If subject and object are given, the object index will be the fastest\n            if (this._findInIndex(content.objects, objectId, subjectId, predicateId,\n                                  'object', 'subject', 'predicate', graphId, callback, null))\n              return true;\n          }\n          else\n            // If only subject and possibly predicate are given, the subject index will be the fastest\n            if (this._findInIndex(content.subjects, subjectId, predicateId, null,\n                                  'subject', 'predicate', 'object', graphId, callback, null))\n              return true;\n        }\n        else if (predicateId) {\n          // If only predicate and possibly object are given, the predicate index will be the fastest\n          if (this._findInIndex(content.predicates, predicateId, objectId, null,\n                                'predicate', 'object', 'subject', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else if (objectId) {\n          // If only object is given, the object index will be the fastest\n          if (this._findInIndex(content.objects, objectId, null, null,\n                                'object', 'subject', 'predicate', graphId, callback, null)) {\n            return true;\n          }\n        }\n        else\n        // If nothing is given, iterate subjects and predicates first\n        if (this._findInIndex(content.subjects, null, null, null,\n                              'subject', 'predicate', 'object', graphId, callback, null)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  // ### `getSubjects` returns all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getSubjects(predicate, object, graph) {\n    const results = [];\n    this.forSubjects(s => { results.push(s); }, predicate, object, graph);\n    return results;\n  }\n\n  // ### `forSubjects` executes the callback on all subjects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forSubjects(callback, predicate, object, graph) {\n    // Convert terms to internal string representation\n    predicate = predicate && termToId(predicate);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, predicateId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(predicate) && !(predicateId = ids[predicate]) ||\n        isString(object)    && !(objectId    = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (predicateId) {\n          if (objectId)\n            // If predicate and object are given, the POS index is best.\n            this._loopBy2Keys(content.predicates, predicateId, objectId, callback);\n          else\n            // If only predicate is given, the SPO index is best.\n            this._loopByKey1(content.subjects, predicateId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the OSP index is best.\n          this._loopByKey0(content.objects, objectId, callback);\n        else\n          // If no params given, iterate all the subjects\n          this._loop(content.subjects, callback);\n      }\n    }\n  }\n\n  // ### `getPredicates` returns all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getPredicates(subject, object, graph) {\n    const results = [];\n    this.forPredicates(p => { results.push(p); }, subject, object, graph);\n    return results;\n  }\n\n  // ### `forPredicates` executes the callback on all predicates that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forPredicates(callback, subject, object, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    object = object && termToId(object);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, objectId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject) && !(subjectId = ids[subject]) ||\n        isString(object)  && !(objectId  = ids[object]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (objectId)\n            // If subject and object are given, the OSP index is best.\n            this._loopBy2Keys(content.objects, objectId, subjectId, callback);\n          else\n            // If only subject is given, the SPO index is best.\n            this._loopByKey0(content.subjects, subjectId, callback);\n        }\n        else if (objectId)\n          // If only object is given, the POS index is best.\n          this._loopByKey1(content.predicates, objectId, callback);\n        else\n          // If no params given, iterate all the predicates.\n          this._loop(content.predicates, callback);\n      }\n    }\n  }\n\n  // ### `getObjects` returns all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getObjects(subject, predicate, graph) {\n    const results = [];\n    this.forObjects(o => { results.push(o); }, subject, predicate, graph);\n    return results;\n  }\n\n  // ### `forObjects` executes the callback on all objects that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forObjects(callback, subject, predicate, graph) {\n    // Convert terms to internal string representation\n    subject = subject && termToId(subject);\n    predicate = predicate && termToId(predicate);\n    graph = graph && termToId(graph);\n\n    const ids = this._ids, graphs = this._getGraphs(graph);\n    let content, subjectId, predicateId;\n    callback = this._uniqueEntities(callback);\n\n    // Translate IRIs to internal index keys.\n    if (isString(subject)   && !(subjectId   = ids[subject]) ||\n        isString(predicate) && !(predicateId = ids[predicate]))\n      return;\n\n    for (graph in graphs) {\n      // Only if the specified graph contains triples, there can be results\n      if (content = graphs[graph]) {\n        // Choose optimal index based on which fields are wildcards\n        if (subjectId) {\n          if (predicateId)\n            // If subject and predicate are given, the SPO index is best.\n            this._loopBy2Keys(content.subjects, subjectId, predicateId, callback);\n          else\n            // If only subject is given, the OSP index is best.\n            this._loopByKey1(content.objects, subjectId, callback);\n        }\n        else if (predicateId)\n          // If only predicate is given, the POS index is best.\n          this._loopByKey0(content.predicates, predicateId, callback);\n        else\n          // If no params given, iterate all the objects.\n          this._loop(content.objects, callback);\n      }\n    }\n  }\n\n  // ### `getGraphs` returns all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  getGraphs(subject, predicate, object) {\n    const results = [];\n    this.forGraphs(g => { results.push(g); }, subject, predicate, object);\n    return results;\n  }\n\n  // ### `forGraphs` executes the callback on all graphs that match the pattern.\n  // Setting any field to `undefined` or `null` indicates a wildcard.\n  forGraphs(callback, subject, predicate, object) {\n    for (const graph in this._graphs) {\n      this.some(quad => {\n        callback(quad.graph);\n        return true; // Halt iteration of some()\n      }, subject, predicate, object, graph);\n    }\n  }\n\n  // ### `createBlankNode` creates a new blank node, returning its name\n  createBlankNode(suggestedName) {\n    let name, index;\n    // Generate a name based on the suggested name\n    if (suggestedName) {\n      name = suggestedName = `_:${suggestedName}`, index = 1;\n      while (this._ids[name])\n        name = suggestedName + index++;\n    }\n    // Generate a generic blank node name\n    else {\n      do { name = `_:b${this._blankNodeIndex++}`; }\n      while (this._ids[name]);\n    }\n    // Add the blank node to the entities, avoiding the generation of duplicates\n    this._ids[name] = ++this._id;\n    this._entities[this._id] = name;\n    return this._factory.blankNode(name.substr(2));\n  }\n\n  // ### `extractLists` finds and removes all list triples\n  // and returns the items per list.\n  extractLists({ remove = false, ignoreErrors = false } = {}) {\n    const lists = {}; // has scalar keys so could be a simple Object\n    const onError = ignoreErrors ? (() => true) :\n                  ((node, message) => { throw new Error(`${node.value} ${message}`); });\n\n    // Traverse each list from its tail\n    const tails = this.getQuads(null, namespaces.rdf.rest, namespaces.rdf.nil, null);\n    const toRemove = remove ? [...tails] : [];\n    tails.forEach(tailQuad => {\n      const items = [];             // the members found as objects of rdf:first quads\n      let malformed = false;      // signals whether the current list is malformed\n      let head;                   // the head of the list (_:b1 in above example)\n      let headPos;                // set to subject or object when head is set\n      const graph = tailQuad.graph; // make sure list is in exactly one graph\n\n      // Traverse the list from tail to end\n      let current = tailQuad.subject;\n      while (current && !malformed) {\n        const objectQuads = this.getQuads(null, null, current, null);\n        const subjectQuads = this.getQuads(current, null, null, null);\n        let quad, first = null, rest = null, parent = null;\n\n        // Find the first and rest of this list node\n        for (let i = 0; i < subjectQuads.length && !malformed; i++) {\n          quad = subjectQuads[i];\n          if (!quad.graph.equals(graph))\n            malformed = onError(current, 'not confined to single graph');\n          else if (head)\n            malformed = onError(current, 'has non-list arcs out');\n\n          // one rdf:first\n          else if (quad.predicate.value === namespaces.rdf.first) {\n            if (first)\n              malformed = onError(current, 'has multiple rdf:first arcs');\n            else\n              toRemove.push(first = quad);\n          }\n\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (rest)\n              malformed = onError(current, 'has multiple rdf:rest arcs');\n            else\n              toRemove.push(rest = quad);\n          }\n\n          // alien triple\n          else if (objectQuads.length)\n            malformed = onError(current, 'can\\'t be subject and object');\n          else {\n            head = quad; // e.g. { (1 2 3) :p :o }\n            headPos = 'subject';\n          }\n        }\n\n        // { :s :p (1 2) } arrives here with no head\n        // { (1 2) :p :o } arrives here with head set to the list.\n        for (let i = 0; i < objectQuads.length && !malformed; ++i) {\n          quad = objectQuads[i];\n          if (head)\n            malformed = onError(current, 'can\\'t have coreferences');\n          // one rdf:rest\n          else if (quad.predicate.value === namespaces.rdf.rest) {\n            if (parent)\n              malformed = onError(current, 'has incoming rdf:rest arcs');\n            else\n              parent = quad;\n          }\n          else {\n            head = quad; // e.g. { :s :p (1 2) }\n            headPos = 'object';\n          }\n        }\n\n        // Store the list item and continue with parent\n        if (!first)\n          malformed = onError(current, 'has no list head');\n        else\n          items.unshift(first.object);\n        current = parent && parent.subject;\n      }\n\n      // Don't remove any quads if the list is malformed\n      if (malformed)\n        remove = false;\n      // Store the list under the value of its head\n      else if (head)\n        lists[head[headPos].value] = items;\n    });\n\n    // Remove list quads if requested\n    if (remove)\n      this.removeQuads(toRemove);\n    return lists;\n  }\n\n  // ### Store is an iterable.\n  // Can be used where iterables are expected: for...of loops, array spread operator,\n  // `yield*`, and destructuring assignment (order is not guaranteed).\n  *[Symbol.iterator]() {\n    yield* this.getQuads();\n  }\n}\n\n// Determines whether the argument is a string\nfunction isString(s) {\n  return typeof s === 'string' || s instanceof String;\n}\n\n/**\n * A class that implements both DatasetCore and Readable.\n */\nclass DatasetCoreAndReadableStream extends Readable {\n  constructor(n3Store, subject, predicate, object, graph) {\n    super({ objectMode: true });\n    Object.assign(this, { n3Store, subject, predicate, object, graph });\n  }\n\n  get filtered() {\n    if (!this._filtered) {\n      const { n3Store, graph, object, predicate, subject } = this;\n      const quads = n3Store.getQuads(subject, predicate, object, graph);\n      this._filtered = new N3Store(quads, { factory: n3Store._factory });\n    }\n    return this._filtered;\n  }\n  get size() {\n    return this.filtered.size;\n  }\n\n  _read() {\n    for (const quad of this.filtered.getQuads())\n      this.push(quad);\n    this.push(null);\n  }\n\n  add(quad) {\n    return this.filtered.add(quad);\n  }\n\n  delete(quad) {\n    return this.filtered.delete(quad);\n  }\n\n  has(quad) {\n    return this.filtered.has(quad);\n  }\n\n  match(subject, predicate, object, graph) {\n    return new DatasetCoreAndReadableStream(this.filtered, subject, predicate, object, graph);\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.filtered.getQuads();\n  }\n}\n","// **N3StreamParser** parses a text stream into a quad stream.\nimport N3Parser from './N3Parser';\nimport { Transform } from 'readable-stream';\n\n// ## Constructor\nexport default class N3StreamParser extends Transform {\n  constructor(options) {\n    super({ decodeStrings: true });\n    this._readableState.objectMode = true;\n\n    // Set up parser with dummy stream to obtain `data` and `end` callbacks\n    const parser = new N3Parser(options);\n    let onData, onEnd;\n    parser.parse({\n      on: (event, callback) => {\n        switch (event) {\n        case 'data': onData = callback; break;\n        case 'end':   onEnd = callback; break;\n        }\n      },\n    },\n      // Handle quads by pushing them down the pipeline\n      (error, quad) => { error && this.emit('error', error) || quad && this.push(quad); },\n      // Emit prefixes through the `prefix` event\n      (prefix, uri) => { this.emit('prefix', prefix, uri); }\n    );\n\n    // Implement Transform methods through parser callbacks\n    this._transform = (chunk, encoding, done) => { onData(chunk); done(); };\n    this._flush = done => { onEnd(); done(); };\n  }\n\n  // ### Parses a stream of strings\n  import(stream) {\n    stream.on('data',  chunk => { this.write(chunk); });\n    stream.on('end',   ()      => { this.end(); });\n    stream.on('error', error => { this.emit('error', error); });\n    return this;\n  }\n}\n","// **N3StreamWriter** serializes a quad stream into a text stream.\nimport { Transform } from 'readable-stream';\nimport N3Writer from './N3Writer';\n\n// ## Constructor\nexport default class N3StreamWriter extends Transform {\n  constructor(options) {\n    super({ encoding: 'utf8', writableObjectMode: true });\n\n    // Set up writer with a dummy stream object\n    const writer = this._writer = new N3Writer({\n      write: (quad, encoding, callback) => { this.push(quad); callback && callback(); },\n      end: callback => { this.push(null); callback && callback(); },\n    }, options);\n\n    // Implement Transform methods on top of writer\n    this._transform = (quad, encoding, done) => { writer.addQuad(quad, done); };\n    this._flush = done => { writer.end(done); };\n  }\n\n// ### Serializes a stream of quads\n  import(stream) {\n    stream.on('data',   quad => { this.write(quad); });\n    stream.on('end',    () => { this.end(); });\n    stream.on('error',  error => { this.emit('error', error); });\n    stream.on('prefix', (prefix, iri) => { this._writer.addPrefix(prefix, iri); });\n    return this;\n  }\n}\n"],"names":["hasResourceInfo","resource","internal_resourceInfo","hasServerResourceInfo","potentialResourceInfo","linkedResources","hasChangelog","dataset","potentialChangeLog","internal_changeLog","Array","isArray","additions","deletions","SolidClientError","Error","internal_toIriString","iri","value","fetch","async","init","window","require","Promise","default","COMPATIBLE_ENCODING_PATTERN","WS_TRIM_PATTERN","WS_CHAR_PATTERN","WS_FOLD_PATTERN","DELIMITER_PATTERN","WS_DELIMITER_PATTERN","TOKEN_PATTERN","STATE","trim","replace","hasWhitespace","test","skipWhitespace","offset","needsQuotes","Link","constructor","this","refs","parse","rel","links","type","toLowerCase","i","length","push","get","attr","set","link","has","slice","state","ref","expandRelations","end","indexOf","uri","attrValue","isSingleOccurenceAttr","parseExtendedValue","toString","Object","keys","reduce","formatAttribute","join","isCompatibleEncoding","isTokenAttr","escapeQuotes","split","map","assign","parts","exec","language","encoding","decodeURIComponent","formatExtendedAttribute","data","toUpperCase","Buffer","isBuffer","encodeURIComponent","item","internal_parseResourceInfo","response","_a","_b","_c","contentTypeParts","headers","isSolidDataset","includes","resourceInfo","sourceIri","url","isRawData","contentType","undefined","linkHeader","parsedLinks","LinkHeader","aclLinks","aclUrl","URL","href","rels","wacAllowHeader","permissions","parsePermissionStatement","permissionStatement","read","append","write","control","getStatementFor","header","scope","relevantEntries","rawEntry","filter","relevantStatement","charAt","substring","user","public","parseWacAllowHeader","internal_cloneResource","clonedResource","internal_isUnsuccessfulResponse","ok","acl","rdf","ldp","foaf","acp","internal_defaultFetchOptions","getResourceInfo","options","ignoreAuthenticationErrors","config","responseToResourceInfo","method","status","internal_isAuthenticationFailureResponse","FetchError","statusText","isContainer","getSourceUrl","endsWith","getSourceIri","message","errorResponse","super","statusCode","defaultGetFileOptions","RESERVED_HEADERS","getFile","input","blob","deleteFile","file","overwriteFile","fileUrl","fileUrlString","targetUrl","headersToFlatten","flatHeaders","isHeadersArray","forEach","hasHeadersObjectForEach","key","flattenHeaders","some","reserved","slug","contentTypeOverride","fileType","getContentType","targetUrlString","body","writeFile","blobClone","BlankNode","id","nextId","equals","other","termType","prototype","BlankNode_1","DefaultGraph","DefaultGraph_1","fromTerm_1","original","blankNode","defaultGraph","literal","namedNode","datatype","subject","fromTerm","predicate","object","graph","quad","variable","NamedNode","NamedNode_1","require$$0","Literal","stringDatatype","langStringDatatype","Literal_1","Quad","Quad_1","Variable","name","fromTermRaw","require$$2","require$$3","require$$4","require$$5","DataFactory","languageOrDatatype","defaultGraphInstance","triple","call","fromQuad","require$$1","dataModel","isString","s","String","termToId","term","escapedLiteral","_","quoted","DatasetCore","quads","_size","_graphs","create","_id","_ids","_entities","_quads","Map","add","size","graphs","subjects","graphKey","subjectKey","predicateKey","graphItem","predicates","objects","freeze","ids","entities","_addToIndex","_setQuad","delete","_removeFromIndex","_deleteQuad","subjectId","predicateId","objectId","_countInIndex","match","_createDataset","_match","Symbol","iterator","index0","key0","key1","key2","index1","index2","existed","_findInIndex","name0","name1","name2","callback","array","tmp","value0","value1","values","l","_getQuad","count","_getGraphs","content","graphId","_toId","localNodeSkolemPrefix","isLocalNodeIri","getLocalNodeName","localNodeIri","isBlankNodeId","getBlankNodeValue","blankNodeId","getBlankNodeId","xmlSchemaTypes","deserializeBoolean","deserializeDatetime","literalString","signedDateString","rest","yearMultiplier","dateString","yearString","monthString","dayString","utcFullYear","Number","parseInt","utcMonth","utcDate","timeString","timezoneString","splitTimeFromTimezone","hourOffset","minuteOffset","getTimezoneOffsets","hourString","minuteString","timeRest","utcHours","utcMinutes","secondString","optionalMillisecondString","utcSeconds","utcMilliseconds","date","Date","UTC","setUTCFullYear","getUTCFullYear","splitOnPlus","splitOnMinus","multiplier","deserializeDecimal","deserialized","parseFloat","isNaN","deserializeInteger","normalizeLocale","locale","isNamedNode","isTerm","isLocalNode","internal_isValidUrl","iriString","resolveIriForLocalNode","localNode","resourceIri","resolveLocalIri","thingIri","hash","RdfJsDataFactory","addRdfJsQuadToDataset","quadParseOptions","addRdfJsQuadToGraph","subjectIri","addRdfJsQuadToSubject","addRdfJsQuadToPredicates","predicateIri","addRdfJsQuadToObjects","_d","_e","_f","_g","_h","namedNodes","thisLocaleStrings","langStrings","thisTypeValues","literals","blankNodePredicates","getPredicatesForBlankNode","blankNodes","node","chainBlankNodes","find","chainBlankNode","quadsWithNodeAsSubject","otherQuads","isBlankNode","predicatesAcc","blankNodeObjectQuads","getChainBlankNodes","blankNodeSubjects","blankNodeObjects","cycleBlankNodes","blankNodeObject","getCycleBlankNodes","concat","cycleBlankNode","subjectsWithThisNodeAsObject","nodes","every","otherNode","anotherNode","toRdfJsQuads","dataFactory","graphIri","graphNode","subjectNode","subjectToRdfJsQuads","predicateNode","typeIri","typeNode","literalNode","langStringNode","namedNodeIri","blankNodeIdOrPredicates","blankNodeObjectQuad","blankNodeSubjectQuads","currentNode","traversedBlankNodes","traversedBlankNode","nextTraversedNodes","cycleBlankNodeArrays","nextNode","allCycleBlankNodes","getTurtleParser","onQuadCallbacks","onCompleteCallbacks","onErrorCallbacks","onQuad","onError","onComplete","source","baseIri","loadN3","Parser","format","baseIRI","getParser","error","_prefixes","triplesToTurtle","writer","Writer","triples","addQuads","writePromise","resolve","reject","result","n3Module","internal_getReadableValue","isLiteral","val","valueOf","toUTCString","internal_throwIfNotThing","thing","isThing","ThingExpectedError","internal_addDeletionsToChangeLog","solidDataset","changeLog","newAdditions","newDeletions","deletion","containsBlankNode","additionsAcc","deletionsAcc","addition","getIri","property","ValidPropertyUrlExpectedError","predicateUrl","firstUrl","getUrlAll","getIriAll","getTermAll","getNamedNodeAll","locales","localeLiterals","langString","otherLiterals","dataTypes","dataType","dataTypeLiterals","getLiteralAll","rawBlankNode","blankNodeName","getThingAll","acceptBlankNodes","thingsByIri","setThing","isThingLocal","updatedDefaultGraph","updatedGraphs","deletedThingPredicates","internal_addAdditionsToChangeLog","removeThing","asIri","createThing","ValidThingUrlExpectedError","generateName","baseUrl","receivedValue","receivedProperty","ValidValueUrlExpectedError","now","Math","random","normalizeServerSideIri","iriObj","createSolidDataset","getSolidDataset","parserContentTypes","parsers","acceptedContentTypes","Accept","parseOptions","mimeType","parser","text","parsingPromise","quadsWithBlankNodes","allQuads","quadsWithoutChainBlankNodeSubjects","datasetAcc","solidDatasetWithResourceInfo","responseToSolidDataset","saveSolidDatasetAt","datasetWithChangelog","internal_withChangeLog","requestInit","isUpdate","getNamedNodesForLocalNodes","prepareSolidDatasetUpdate","prepareSolidDatasetCreation","diagnostics","readableChangeLog","changeLogsByThingAndProperty","thingUrl","propertyUrl","added","deleted","sortChangeLogByThingAndProperty","changeLogByProperty","deletedValue","addedValue","changeLogAsMarkdown","readableSolidDataset","things","thingAsMarkdown","predicateIris","nrOfAdditions","nrOfDeletions","getReadableChangeLogSummary","solidDatasetAsMarkdown","storedDatasetWithResolvedIris","graphAcc","resolvedThing","updatedPredicates","updatedNamedNodes","updatedPredicate","resolveLocalIrisInThing","resolvedThingIri","updatedGraph","resolveLocalIrisInSolidDataset","createContainerAt","initialContent","internal_NSS_CREATE_CONTAINER_SPEC_NONCOMPLIANCE_DETECTION_ERROR_MESSAGE_TO_WORKAROUND_THEIR_ISSUE_1465","createContainerWithNssWorkaroundAt","containerType","existingContainer","e","dummyUrl","createResponse","isSourceIriEqualTo","deleteContainer","container","getContainedResourceUrlAll","getThing","getNamedNodeFromLocalNode","Readable","Stream","BUFFER","TYPE","Blob","blobParts","arguments","buffers","a","element","buffer","ArrayBuffer","isView","from","byteOffset","byteLength","arrayBuffer","buf","ab","stream","readable","_read","start","relativeStart","relativeEnd","max","min","span","slicedBuffer","systemError","code","errno","captureStackTrace","convert","defineProperties","enumerable","defineProperty","toStringTag","writable","configurable","INTERNALS","PassThrough","Body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","disturbed","on","err","consumeBody","_this4","TypeError","alloc","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","obj","getAll","sort","clone","instance","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","ct","json","_this2","JSON","textConverted","_this3","res","str","charset","pop","convertBody","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","global","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","MAP","Headers","rawHeaders","raw","headerNames","headerName","pairs","pair","thisArg","getHeaders","_pairs$i","createHeadersIterator","kind","k","entries","INTERNAL","target","HeadersIteratorPrototype","index","setPrototypeOf","next","getPrototypeOf","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","http","Response","opts","counter","redirected","INTERNALS$2","parse_url","Url","format_url","streamDestructionSupported","isRequest","Request","parsedURL","inputBody","signal","isAbortSignal","redirect","follow","compress","agent","AbortError","PassThrough$1","resolve_url","request","protocol","hostname","contentLengthValue","totalBytes","getNodeRequestOptions","send","https","destroy","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","removeEventListener","addEventListener","once","socket","createHeadersLenient","isRedirect","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createBrotliDecompress","createInflate","createInflateRaw","dest","writeToStream","nodeFetch","realFetch","ponyfill","module","exports","addUrl","existingPredicate","existingNamedNodes","iriToAdd","addIri","addBoolean","addLiteralOfType","serializeBoolean","addDatetime","toISOString","serializeDatetime","addDate","year","getFullYear","month","getMonth","day","getDate","timezone","padStart","serializeDate","addTime","millisecondString","millisecond","timezoneHourOffset","timezoneFormatted","abs","timezoneMinuteOffset","hour","minute","second","serializeTime","addDecimal","serializeDecimal","addInteger","serializeInteger","addStringWithLocale","normalizedLocale","existingLangStrings","existingStringsInLocale","updatedStringsInLocale","updatedLangStrings","addStringNoLocale","addNamedNode","addLiteral","addTerm","existingBlankNodes","updatedBlankNodes","existingLiterals","existingValuesOfType","updatedValuesOfType","updatedLiterals","removeAll","newPredicates","removeUrl","iriToRemove","removeIri","removeBoolean","removeLiteralMatching","foundBoolean","removeDatetime","foundDatetime","getTime","removeDate","foundDate","deserializedDate","dayAndTimezoneString","deserializeDate","removeTime","foundTime","deserializedTime","deserializeTime","removeDecimal","foundDecimal","removeInteger","foundInteger","removeStringWithLocale","matchingLocale","existingLocale","existingString","removeStringNoLocale","foundString","removeNamedNode","removeLiteral","existingPredicateValues","updatedValues","existingValue","matcher","setUrl","setIri","setBoolean","setDatetime","setDate","setTime","setDecimal","setInteger","setStringWithLocale","setStringNoLocale","setNamedNode","setLiteral","setTerm","buildThing","getAdder","adder","builder","getSetter","setter","getRemover","remover","build","addStringEnglish","setStringEnglish","removeStringEnglish","internal_fetchAcl","hasAccessibleAcl","resourceAcl","fallbackAcl","internal_fetchResourceAcl","internal_fetchFallbackAcl","AclIsAcrError","aclSolidDataset","linkedAccessResource","relTypeLinks","isAcr","internal_accessTo","resourceUrl","resourcePath","pathname","containerPath","resourcePathWithoutTrailingSlash","lastIndexOf","internal_getContainerPath","containerIri","origin","containerInfo","containerAcl","internal_getAclRules","aclDataset","isAclRule","internal_getDefaultAclRulesForResource","aclRules","rule","aclRule","isDefaultForResource","isEmptyAclRule","internal_accessModeIriStrings","mode","isAclQuad","internal_initialiseAclRule","access","newRule","internal_setAcl","internal_acl","supportedActorPredicates","internal_removeActorFromRule","actor","actorPredicate","ruleType","ruleWithoutActor","ruleForOtherTargets","sourceRule","targetRule","copyIris","inputRule","outputRule","iriTarget","internal_duplicateAclRule","internal_setActorAccess","accessType","filteredAcl","filteredRule","remainingRule","internal_removeEmptyAclRules","sourceResource","aclResource","hasResourceAcl","getSolidDatasetWithAcl","getFileWithAcl","getResourceAcl","createAclFromFallbackAcl","emptyResourceAcl","targetResource","saveAclFor","savedDataset","setAgentResourceAccess","ResourceType","Mimetype","AccessService","verbose","resourceURL","accessRights","setResourceAccess","CONTAINER","FILE","userWebID","DATASET","resourceWithAcl","updatedAcl","newAccess","logAccessInfo","datasetWithAcl","console","log","stringify","controlRead","controlWrite","constants","urlJoin","constants_1","trimRegex","trimPath","path","trimPathNotFirst","paths","params","hasBaseUrl","resultUrl","Boolean","DELIMITER_PATH","hasParams","queryParams","DELIMITER_SEARCH_VALUES","DELIMITER_SEARCH_PARAMS","DELIMITER_URL_PARTS","urlJoinFunc","urlJoin_1","UrlJoin","__export","m","p","hasOwnProperty","DataService","accessService","targetFileURL","makePublic","Text","savedFile","makeFilePublic","fileURL","containerURL","containerResources","computeChecksumMd5","chunkSize","spark","SparkMD5","fileReader","FileReader","cursor","processChunk","chunk_start","chunk_end","readAsArrayBuffer","onerror","onload","hex_chr","md5cycle","x","b","c","d","md5blk","md5blks","charCodeAt","md5blk_array","md51","tail","lo","hi","n","md51_array","subarray","Uint8Array","rhex","j","hex","toUtf8","unescape","utf8Str2ArrayBuffer","returnUInt8Array","buff","arr","arrayBuffer2Utf8Str","fromCharCode","apply","concatenateArrayBuffers","first","hexToBinaryString","bytes","substr","reset","clamp","to","num","targetArray","sourceArray","begin","appendBinary","contents","_buff","_length","_hash","ret","_finish","getState","setState","hashBinary","factory","_NS$x","localName","DCAT","PREFIX","NAMESPACE","PREFIX_AND_NAMESPACE","dcat","NS","Catalog","Dataset","Resource","CatalogRecord","Distribution","Relationship","Role","hadRole","accessURL","endpointURL","bbox","byteSize","catalog","centroid","compressFormat","contactPoint","distribution","downloadURL","endDate","endpointDescription","keyword","landingPage","mediaType","packageFormat","qualifiedRelation","record","servesDataset","service","spatialResolutionInMeters","startDate","temporalResolution","theme","themeTaxonomy","_NAMESPACE$g","_NS$g","RDF","Property","HTML","PlainLiteral","Statement","Bag","Seq","Alt","List","XMLLiteral","CompoundLiteral","nil","direction","_NS$d","SCHEMA_INRUPT","Person","MedicalTherapy","EducationalOccupationalCredential","PostalAddress","Product","alternateName","givenName","familyName","additionalName","license","identifier","description","image","startTime","endTime","email","primaryPrevention","qualifications","attendee","address","streetAddress","addressLocality","addressRegion","postalCode","addressCountry","accessCode","accountId","serialNumber","productID","_NAMESPACE","_NS","ICDD_C","ContainerDescription","Document","containsDocument","creationDate","filename","modificationDate","ICDDService","dataService","rootURL","icddName","baseURL","time","createContainer","timeEnd","folderURLs","f","createFolderPromises","all","buildIndex","icddURL","icddRootURL","files","addFiles","subfolder","md5Promises","md5Hashes","uploadFilePromises","fileExtension","fileName","addFileToIndex","writeFileToPod","indexDataset","containerDescription","filePath","newDocument","Consolid","MyICDDService","XSD","SWAP","xsd","decimal","boolean","double","integer","string","owl","sameAs","r","forSome","forAll","implies","promise","queueMicrotask","bind","cb","catch","namespaces","escapeSequence","escapeReplacements","t","$","illegalIriChars","lineModeRegExps","_iri","_unescapedIri","_simpleQuotedString","_langcode","_blank","_newline","_comment","_whitespace","_endOfFile","invalidRegExp","N3Lexer","_simpleApostropheString","_prefix","_prefixed","_variable","_number","_boolean","_keyword","_sparqlKeyword","_shortPredicates","_lineMode","lineMode","_n3Mode","RegExp","n3","_comments","comments","_literalClosingPos","_tokenizeToEnd","inputFinished","_input","outputComments","whiteSpaceMatch","comment","line","_line","prefix","firstChar","matchLength","inconclusive","_previousMarker","_unescape","reportSyntaxError","_parseLiteral","token","previousToken","self","_syntaxError","invalid","replaced","sequence","unicode4","unicode8","escapedChar","charCode","opening","openingLength","closingPos","backslashCount","lines","issue","context","_readStartingBom","startsWith","tokenize","tokens","_pendingBuffer","setEncoding","isDefaultGraph","prefixes","defaultPrefixes","processPrefix","cache","local","N3DataFactory","DEFAULTGRAPH","_blankNodeCounter","quadId","languageOrDataType","isFinite","isInteger","Term","hashCode","toJSON","atPos","datatypeString","dtPos","char","termFromId","endPos","components","unescapeQuotes","_subject","_predicate","_object","_graph","blankNodePrefix","N3Parser","_contextStack","_setBase","initDataFactory","isTurtle","isTriG","isNTriples","isNQuads","isN3","isLineMode","_supportsNamedGraphs","_readPredicateOrNamedGraph","_readPredicate","_supportsQuads","_supportsRDFStar","_resolveRelativeIRI","_blankNodePrefix","_lexer","lexer","_explicitQuantifiers","explicitQuantifiers","static","fragmentPos","_base","_basePath","_baseRoot","_baseScheme","_saveContext","n3Mode","inverse","_inversePredicate","blankPrefix","quantified","_quantified","_restoreContext","_readInTopContext","_error","_callback","_sparqlStyle","_readPrefix","_readBaseIRI","_readSubject","_readNamedGraphLabel","_readEntity","quantifier","_resolveIRI","_namedNode","_blankNode","_readBlankNodeHead","RDF_NIL","_readListItem","_readPunctuation","N3_FORSOME","_quantifier","_readQuantifierList","N3_FORALL","_literalValue","_completeSubjectLiteral","_literal","_getPathReader","ABBREVIATIONS","_readBlankNodeTail","_readObject","_readDataTypeOrLang","_getContextEndReader","_readGraph","_readBlankNodePunctuation","_emit","empty","_readPredicateAfterBlank","list","previousList","stack","parent","RDF_FIRST","_readListItemDataTypeOrLang","RDF_REST","_completeObjectLiteral","_completeLiteral","listItem","completed","_readCallback","_readFormulaTail","inversePredicate","_readQuadPunctuation","_readPrefixIRI","prefixNode","_prefixCallback","_readDeclarationPunctuation","_readNamedGraphBlankLabel","entity","QUANTIFIERS_GRAPH","_readQuantifierPunctuation","afterPath","_afterPath","_readPath","_readForwardPath","_readBackwardPath","_readRDFStarTailOrGraph","_readRDFStarTail","_quad","contextStack","noop","_removeDotSegments","pathStart","segmentStart","quadCallback","prefixCallback","escape","escapeAll","escapedCharacters","SerializedTerm","N3Writer","outputStream","_prefixRegex","_lists","lists","_outputStream","_endStream","output","_writeQuad","_writeQuadLine","_prefixIRIs","addPrefixes","_baseMatcher","escapeRegex","_baseLength","_inDefaultGraph","_write","_encodeIriOrBlank","_encodeObject","_encodePredicate","_encodeSubject","_prefixMatch","quadToString","quadsToString","_encodeQuad","characterReplacer","prefixMatch","_encodeLiteral","_blockedWrite","addQuad","addPrefix","hasPrefixes","IRIlist","prefixList","prefixIRI","blank","child","children","elements","singleDone","character","regex","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_defineProperty","_defineProperties","props","descriptor","inspect","custom","buffer_list","BufferList","Constructor","_classCallCheck","head","protoProps","staticProps","v","entry","src","allocUnsafe","copy","hasStrings","shift","_getString","_getBuffer","nb","getOwnPropertyDescriptors","_objectSpread","depth","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","_writableState","emitClose","_readableState","destroy_1","readableDestroyed","destroyed","writableDestroyed","errorEmitted","process","nextTick","_destroy","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","rState","wState","autoDestroy","codes","createErrorType","Base","NodeError","arg1","arg2","arg3","getMessage","oneOf","expected","len","actual","determiner","search","pos","msg","this_len","arg","ERR_INVALID_OPT_VALUE","getHighWaterMark","duplexKey","isDuplex","hwm","highWaterMark","highWaterMarkFrom","floor","objectMode","inherits_browserModule","ctor","superCtor","super_","TempCtor","util","inherits","inheritsModule","Duplex","deprecate","_stream_writable","Writable","CorkedRequest","finish","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","OurUint8Array","realHasInstance","destroyImpl","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","require$$7","writableObjectMode","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","onwriteStateUpdate","finishMaybe","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","writev","_writev","final","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","prefinish","require$$6","getBuffer","current","out","hasInstance","Function","_uint8ArrayToBuffer","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_undestroy","objectKeys","_stream_duplex","allowHalfOpen","onend","onEndNT","copyProps","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","fill","SlowBuffer","isEncoding","StringDecoder","enc","nenc","retried","_normalizeEncoding","normalizeEncoding","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","total","utf8CheckIncomplete","ERR_STREAM_PREMATURE_CLOSE","_Object$setPrototypeO","endOfStream","eos","called","_len","args","_key","onlegacyfinish","onfinish","writableEnded","readableEnded","onclose","onrequest","setHeader","removeListener","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","lastPromise","wrapForNext","asyncIterator","async_iterator","_Object$create","asyncGeneratorStep","gen","_next","_throw","info","_asyncToGenerator","fn","from_1","iterable","_next2","_stream_readable","ReadableState","EventEmitter","EElistenerCount","emitter","listeners","debug","debugUtil","debuglog","createReadableStreamAsyncIterator","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","require$$8","kProxyEvents","require$$9","readableObjectMode","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","require$$10","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","addChunk","maybeReadMore","unshift","isPaused","clear","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","resume","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","xs","nOrig","doRead","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","ondata","cleanedUp","pipeOnDrain","pause","event","prependListener","_events","dests","splice","ev","addListener","removeAllListeners","wrap","require$$11","_fromList","require$$12","_stream_transform","Transform","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","_flush","err2","_stream_passthrough","ERR_MISSING_ARGS","destroyer","closed","popCallback","streams","pipeline_1","destroys","env","READABLE_STREAM","N3Store","_blankNodeIndex","_factory","entityKeys","entity0","entity1","_loop","_loopByKey0","_loopByKey1","_loopBy2Keys","_uniqueEntities","uniqueIds","changed","removeQuad","getQuads","import","removeQuads","remove","removeMatches","deleteGraph","DatasetCoreAndReadableStream","countQuads","getSubjects","results","forSubjects","getPredicates","forPredicates","getObjects","forObjects","o","getGraphs","forGraphs","g","createBlankNode","suggestedName","extractLists","ignoreErrors","tails","toRemove","tailQuad","items","headPos","malformed","objectQuads","subjectQuads","n3Store","filtered","_filtered","N3StreamParser","onData","onEnd","N3StreamWriter","_writer"],"mappings":"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"}